{"version":3,"sources":["img/download.png","img/backgrounds/login.jpeg","img/strps/contract.jpg","img/logos/Lbs/LogoVertical.png","img/logos/13.01_finalLogo/final.png","Components/Administration/fileViewer.js","Components/Login/Login.js","Components/Login/Register.js","Components/InternshipSteps/Steps/SubComponents/StepsForNewCompany/Step1.js","Components/InternshipSteps/Steps/SubComponents/StepsForNewCompany/Step2.js","Components/InternshipSteps/Steps/SubComponents/companyList.js","Components/InternshipSteps/Steps/SelectInternship.js","Components/InternshipSteps/Steps/SelectDateInternship.js","Components/InternshipSteps/Steps/SubComponents/ListTutor.js","Components/InternshipSteps/Steps/SelectTutor.js","Components/InternshipSteps/Steps/PersonalInfo.js","Components/InternshipSteps/Steps/FillDownloadInternship.js","Components/InternshipSteps/Steps/UploadInternship.js","Components/InternshipSteps/Steps/WaitConfirmation.js","Components/InternshipSteps/Steps/SelectTutorCompany.js","Components/InternshipSteps/InternshipSteps.js","Components/Administration/Administration.js","Components/Administration/InsertNewClass.js","Components/Administration/ClassInformation.js","Components/Footer.js","Components/Administration/NewCompany.js","Components/Administration/NewCompanyTutor.js","Components/Administration/EditCompany.js","Components/Administration/CompanyInformation.js","Components/ClassOverview/ClassOverview.js","Components/Administration/StudentInformation.js","Components/Administration/NewSchoolperson.js","Components/Administration/StudentOverview.js","Components/Company/CompanyProfile.js","Components/Company/InternshipRating.js","Components/Company/InternshipInformation.js","Components/Company/Company.js","Components/Administration/AllCompanies.js","Components/Administration/AllSchoolpersons.js","Components/Imprint.js","Components/Administration/Sidebar.js","Components/Administration/ContractsView.js","Components/Administration/Search.js","Components/Company/InternshipTimeWorkDay.js","Components/Administration/RatingMail.js","Components/EmailComposer/EmailCopmoser.js","Components/Administration/AllRoles.js","Components/Administration/AllSpecializations.js","App.js","index.js"],"names":["module","exports","path","Login","state","email","password","loading","loggedIn","textChange","e","setState","target","name","value","loginAjax","preventDefault","axios","require","params","URLSearchParams","append","url","localStorage","getItem","method","data","then","res","console","log","error","login","token","errMsg","decoded","jwtDecode","props","setUser","this","match","currentUser","to","Spinner","animation","style","height","width","backgroundImage","background","backgroundSize","className","src","logo","onSubmit","display","flexFlow","id","type","placeholder","onChange","textDecoration","Component","Register","firstname","surname","passwordRpt","phonenumber","show","isTutor","role","errorIsOpen","setShow","input","handleClose","handleShow","handleTutor","handleStudent","register","undefined","document","getElementById","innerText","message","Snackbar","open","autoHideDuration","onClose","Alert","severity","Row","Col","required","color","Modal","onHide","Header","closeButton","Title","Body","href","split","rel","Footer","Button","variant","onClick","Step1","currentStep","Form","Group","controlId","Label","Control","handleChange","address","cap","pattern","Step2","dialogDistrictIsOpen","setDialogDistrict","Dialog","handleDialogCloseDistrict","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","new_District","DialogActions","handleDialogSaveDistrict","handleDialogOpenDistrict","newDistrictArr","newDistrictName","districts","push","saveDistrictstoOptions","classNamePrefix","isSearchable","isClearable","options","selectedOptionDistrict","handleChangeDistricts","specializations","selectedOptionSpecializations","handleChangeSpecializations","CompanyList","selectedCompanyId","modalVisible","dialogIsOpen","createNewCompany","getByDatabaseId","selectedCompany","map","v","handleNewDistrict","selectedOption","_next","checkifStepFilledOut","_prev","key","showIntofmation","nextStep","nextStepWithID","companyID","handleDialogClose","previousButton","nextButton","help","a","b","c","d","setNewCompany","classes","paper","styles","maxWidth","Divider","handleSubmit","saveDistrictsOptions","form","disabled","arr","event","getAllDistricts","newdistricts","row","getAllSpecialization","newspecializations","description","handleDialogOpen","default","bind","currentname","currentaddress","currentemail","currentphonenumber","length","company","Card","ModalBody","SelectInternship","selectionOpen","noCompanyFound","specialization","handleCloseSnackbar","getAllCompanies","getCompanysByDistrict","onCompanyClick","setCompleted","defaults","headers","common","isSelectable","filterBy","SelectDateInternship","range","startDate","Date","endDate","handleSelect","ranges","prevState","Object","assign","loadedDates","from","parse","minDeviceWidth","locale","de","months","direction","maxDeviceWidth","minDate","ListTutor","selectedTutorId","clickTutor","k","Avatar","SelectTutor","noTutorFound","JsonToList","searchInput","url_search","searchTutorByName","nameOfTutor","selectionOptions","invertedState","innerHTML","window","addEventListener","Collapse","in","PersonalInfo","date","personalinfo","birthdate","handleInputChange","setPersonalInfo","getStudentextraInfo","schoolclass","specialisation","school","saveDateIntoState","aria-label","aria-describedby","FillDownloadInternship","errorMsg","generatePdf","values","toISOString","slice","schoolclass_id","company_id","tax_number","street","residence","postcode","birthplace","student_id","tutor","getBlobData","responseType","Blob","URL","createObjectURL","createElement","body","appendChild","download","click","revokeObjectURL","contract","backgroundRepeat","backgroundPosition","backgroundColor","fontSize","UploadInternship","currentFile","uploadData","formData","FormData","imagefile","querySelector","files","showMessage","onFileSelect","Promise","r","setTimeout","ref","htmlFor","showSnack","snackErrLevel","snackMessage","WaitConfirmation","internshipStatus","internshipStatusDescr","getConfirmationStatus","config","num","rps","radius","life","tha","alpha","scale","position","cross","random","Math","onParticleUpdate","ctx","particle","beginPath","rect","p","x","y","fillStyle","fill","closePath","SelectTutorCompany","loadData","companyId","selectionwOpen","InternshipSteps","loadedData","steps","title","completed","object","step","newValues","dataUpload","lastStep","obj","isoFromDate","isoToDate","getFullYear","getMonth","getDate","rating","state_id","tutor_company_id","getStepComponent","loadFromJson","parseInt","minWidth","Breadcrumb","BreadcrumbItem","active","labelPlacement","current","s","Step","icon","textAlign","Administration","schoolClassData","submitted","redirect","redirectToLink","selecteditem","getClassesInSchoolYear","schoolyear","displayClasses","rgbToHex","rgb","hex","Number","toString","getRandomColor","colors","floor","toDisplay","getSchoolYears","classesInScoolyear","classInfo","lastname","bg","openClassInfo","TeacherFirstName","TeacherSurname","substring","toUpperCase","firstCharAndLastChar","includes","getAllClasses","Axios","getClassesByKey","getKeyFromSelected","i","insertDataIntoDropdown","DropdownItem","eventKey","ButtonToolbar","DropdownButton","DropdownType","idx","onSelect","InsertNewClass","selectedTeacher","selectedSpecialization","generateToken","teachers","new_Specialization","errorMessage","handleChangeTeachers","handleChangeSpecialization","validateForm","temp","toAdministration","toNewClassTeacher","handleDialogSave","arr_specializations","newSpecArr","handleNewSpec","getAllSpecializations","newSpecializations","getAllTeachers","newteachers","fullname","ClassInformation","class_id","confirmOpen","showAllStudents","openStudentInfo","showClassInfo","hashCode","str","hash","charCodeAt","intToRGB","deactive_activated","block_unblock","setConfirmation","setClose","isEnabled","blockClass","deleteClass","getAllStudents","getClassInfo","alt","NewCompany","f","g","handleDialogOpenSpec","dialogNewSpecIsOpen","handleDialogCloseSpec","handleDialogSaveSpec","defaultValue","NewCompanyTutor","EditCompany","companyName","c_email","c_phonenumber","CompanyInformation","dialogEditIsOpen","showAllCompanyTutors","Subtitle","blockTutor","isVerified","block_unblockTutor","checkifStepEditFilledOut","getAllTutors","newTutor","showCompanyInfo","getVerified","handleEditOpen","blockCompany","verified","setDialogForEdit","handleEditClose","handleSubmitEdit","getCompanyById","ClassOverview","context","newPraktikum","message_color","joinClassAjax","classId","getAllInternshipsByStudent","displayData","that","keys","classname","classActive","createNewInternship","addInternship","internships","openInternshipSteps","internship_id","companyname","ProgressBar","animated","state_color","now","state_name","currentClass","entrytoken","StudentInformation","studentInfo","checkClassID","showStudent","is_enabled","showInternships","objectnames","allinternships","allObjectKeys","cardheader","z","card_body","index","internshipcounter","startdate","enddate","Accordion","Toggle","as","getStudent","getInternships","is_verified","block","defaultActiveKey","NewSchoolperson","selectedOptionRole","isAdministration","newRole","roles","newRoleDescription","errorRoleName","errorDescription","getAllRoles","newroles","handleChangeRoles","handleisAdministration","checked","validateFormNewRole","arr_roles","newRoleArr","handleNewRole","handleNewRoleDescription","errorOpenRole","errorOpenDescription","FormControlLabel","control","Switch","StudentOverview","allSchoolpersonsData","getStudentByKey","allStudentsData","displayStudents","students","CompanyProfile","onChangeCompany","companyData","onChangeTutor","tutorData","forceUpdate","input_key","displayCompanyInfo","Tabs","activeKey","Tab","getCompanyInformation","getTutorCompanyInfo","InternshipRating","currentRatingIndex","criteria","ratingcriteria","internshipId","changeRating","currentValues","getInternshipData","user","JSON","getRatingcriteria","hidden","isAllowed","getEvaluationofInternship","evaluationsPoints","stringify","worked","openInternshipData","handleClickOpen","prevStep","InternshipInformation","internship","schooclass","student","schoolperson","tutorCompany","viewInternshipData","ListGroup","Item","canRate","userData","openInternshipRating","openInternshipWorkDays","getInternshipById","internshipData","getCompanyName","displayInternships","openInternshipStatus","studentFirstName","studentSurname","rateNow","getAllInternshipsbyCompany","AllCompanies","allCompaniesData","selectedItemId","selectedSpecializationId","getCompanyByKey","getKeyFromSelectedSpecialization","districtId","specializationsId","displayCompanies","openCompanyInfo","displaySpecialization","getAllSchoolperson","getSchoolpersonsByKey","displaySchoolpersons","schoolpersons","Imprint","Img","Sidebar","media_title","small","checkifMobile","matchMedia","matches","closeNav","bool","closeAll","getElementsByTagName","removeAttribute","clickSingle","elemnt","tagName","removeEventListener","FileViewer","originalPath","fileType","filePath","ContractsView","dataLoaded","currentContractPath","unmountFileViewer","showValidationModal","enableValidation","fileOpen","fileUrl","reasonToDeny","contract_state_data","stateValues","lengthContractState","isApproved","getFile","fileViewer","removeChild","getContractPath","getContractStates","createStateArray","viewModalBody","clickedNode","displayTree","TreeView","defaultCollapseIcon","defaultExpanded","defaultExpandIcon","renderTree","nodes","TreeItem","nodeId","text","Array","isArray","children","node","isChecked","sendRateContract","approved","isCreated","remove","ContractValue","splice","Values","getDelete","Checkbox","handleNewState","addNewState","new_State","contractStateData","stateValue","general","clickValidation","accept","downloadContract","alignItems","alignContent","minHeight","flex","float","maxHeight","overflow","flexDirection","link","Search","search_data","offset","previous_disabled","next_disabled","search_input","nextPage","check_array_empty","getSearch","previousPage","log_input","isFirstname_Lastname_Undefined","items","data_value","firstChar","size","InternshipTimeWorkDay","standard_startValue","standard_lunchbreakStartValue","standard_lunchbreakEndValue","standard_endValue","workdayData","workdayDisplay","workdayValues","calendarView","getStep","submitWorkday","workstartWithIndex","lunchstartWithIndex","lunchendWithIndex","workendWithIndex","ms","moment","diff","duration","worktimebeforeLunch","minutes","hours","worktimeafterLunch","days","sendWorkDaysToAPI","setStandardValueWorkstart","timeString","setStandardValueStartLunch","setStandardValueEndLunch","setStandardValueWorkend","onChangeDate","dateString","onChangeTimeStart","onChangeTimeStartLunch","onChangeTimeEndLunch","onChangeTimeEnd","createWorkDay","lunchEndWithIndex","format","minuteStep","setWorkDayValues","workstart","lunchstart","lunchend","workend","RatingMail","finishedInternships","showWriteMail","mailContent","displayMail","ret","chars","schoolpersonName","charAt","ListItem","cursor","openMail","ListItemAvatar","ListItemText","primary","studentName","secondary","Fragment","Typography","component","companyTutorName","showComposeMail","loadEmail","sent","notSent","loadToSend","sp","content","sendToAll","List","button","divider","ListItemSecondaryAction","IconButton","ReactHtmlParser","EmailCopmoser","exportHtml","editor","design","html","exportJson","saveDesign","AllRoles","roleName","roleDescription","currentRole","roleID","dialogNewRoleIsOpen","NewRoleDescription","NewRoleName","handleSubmitNewRole","handleDialogRoleClose","displayAllRoles","openDialog","getRoleByID","out","AllSpecializations","specializationName","NewSpecDescription","handleSubmitNewSpec","specializations_id","getSpecByID","displaySpecializations","spec","loadApiKeyIntoHeaders","localToken","interceptors","request","use","process","polling","enabled","interval","setItem","checkToken","App","navOpen","logout","us","location","reload","removeItem","addSlashIfNotExisting","pathname","exp","currentAction","Navbar","Brand","Nav","AlertTitle","exact","render","viewJustNotCheckedContracts","AllSchoolpersons","Company","ReactDOM"],"mappings":"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","file":"static/js/main.0bf36e2b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/download.5ffbbfa2.png\";","module.exports = __webpack_public_path__ + \"static/media/login.bca039d8.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/contract.73c01f8b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/LogoVertical.409951eb.png\";","module.exports = __webpack_public_path__ + \"static/media/final.5ffbbfa2.png\";","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport './sidebar.css';\r\n\r\nimport ReactFileViewer from 'react-file-viewer';\r\n\r\nlet i = 0;\r\nlet path;\r\n\r\nclass FileViewer extends Component {\r\n\r\n    state = {};\r\n\r\n    render() {\r\n        if (this.props.url && this.props.originalPath) {\r\n            let fileType;\r\n\r\n            if(path !== this.props.url){\r\n                i++;\r\n                path= this.props.url;\r\n                if(this.props.originalPath){\r\n                    let originalPath=this.props.originalPath + \"\";\r\n                    let temp = originalPath.split(\".\");\r\n                    //console.log(temp)\r\n                    fileType = temp[temp.length-1];\r\n                    if(fileType === 'doc'){\r\n                        fileType = \"docx\"\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            return (\r\n                <div>\r\n                    <ReactFileViewer key={i} filePath={this.props.url} fileType={fileType}/>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <div>Keine datei Ausgewählt</div>\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default FileViewer;","import React, {Component} from 'react';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport logo from \"../../img/download.png\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport background from \"../../img/backgrounds/login.jpeg\"\r\n\r\nclass Login extends Component {\r\n\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        loading: false,\r\n        loggedIn: false\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        try {\r\n            if (this.props.match.params.token) {\r\n                this.login(this.props.match.params.token);\r\n            }\r\n        } catch (error) {\r\n            //console.error(error);\r\n        }\r\n    }\r\n\r\n    textChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    };\r\n\r\n    render() {\r\n        if (this.props.currentUser != null || this.state.loggedIn) {\r\n            return <Redirect to='/'/>\r\n        }\r\n\r\n        if (this.state.loading) {\r\n            return <Spinner animation=\"border\"/>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div style={{\r\n                    height: \"100vh\",\r\n                    width: \"100vw\",\r\n                    backgroundImage: `url(${background})`,\r\n                    backgroundSize: \"cover\"\r\n                }}\r\n                     className={\"d-flex main-content flex-column align-items-center justify-content-around\"}>\r\n\r\n\r\n                    <div className={\"w-25 bg-dark\"}>\r\n\r\n                        {//header\r\n                        }\r\n                        <div style={{height: 150}} className={\"p-3 bg-white d-flex align-items-center justify-content-center\"}>\r\n                            <img className={\"w-100\"} src={logo}/>\r\n\r\n                        </div>\r\n                        {//body\r\n                        }\r\n                        <div style={{height: 400}} className={\"p-3 d-flex flex-column align-items-center justify-content-around\"}>\r\n\r\n                            <h2 className={\"text-white\"}>Bitte melden Sie sich an</h2>\r\n\r\n\r\n                            <div className={\"mt-3 d-flex justify-content-center\"}>\r\n                                <form onSubmit={this.loginAjax} className=\"login\"\r\n                                      style={{display: 'flex', flexFlow: 'column'}}>\r\n\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            id={'emailLogin'}\r\n                                            type={'email'}\r\n                                            placeholder={'E-Mail'}\r\n                                            className={'form-control'}\r\n                                            value={this.state.email}\r\n                                            onChange={this.textChange}\r\n                                            name={'email'}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            id={'passwordLogin'}\r\n                                            className={'form-control'}\r\n                                            type={'password'}\r\n                                            placeholder={'Password'}\r\n                                            value={this.state.password}\r\n                                            onChange={this.textChange}\r\n                                            name={'password'}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    {\r\n                                        this.state.errMsg ?? <p>{this.state.errMsg}</p>\r\n                                    }\r\n\r\n\r\n                                    <input type={'submit'} value={\"Login\"} className={'btn btn-primary'}/>\r\n                                    <Link className={'text-white'} style={{textDecoration: \"none\"}} to=\"/register\">Noch\r\n                                        keinen Account? <b>Hier Registrieren</b></Link>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    loginAjax = (e) => {\r\n        e.preventDefault();\r\n\r\n        const axios = require('axios');\r\n\r\n        const params = new URLSearchParams();\r\n        params.append('email', this.state.email);\r\n        params.append('password', this.state.password);\r\n\r\n        let url = localStorage.getItem('url');\r\n        this.setState({loading: true})\r\n        axios({\r\n            method: 'post',\r\n            url: url + '?action=login',\r\n            data: params\r\n        }).then((res) => {\r\n            console.log(res.data)\r\n            if (!res.data.error && res.data) {\r\n                this.login(res.data.token);\r\n            } else {\r\n                console.log()\r\n                this.setState({errMsg: \"Kontrollieren sie Ihre E-Mail und ihr Passwort\"})\r\n            }\r\n\r\n            this.setState({loading: false})\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    login = (token) => {\r\n        let jwtDecode = require('jwt-decode');\r\n        let decoded = jwtDecode(token);\r\n        this.props.setUser(decoded.data, token)\r\n        this.setState({loggedIn: true})\r\n\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport './login.css';\r\nimport logo from \"../../img/download.png\";\r\nimport {Button, Col, Modal, Row} from \"react-bootstrap\";\r\nimport {Snackbar} from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport background from \"../../img/backgrounds/login.jpeg\"\r\n\r\n\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        firstname: '',\r\n        surname: '',\r\n        email: '',\r\n        password: '',\r\n        passwordRpt: '',\r\n        token: '',\r\n        phonenumber:'',\r\n        show: false,\r\n        isTutor: false,\r\n        role:'student',\r\n        errorIsOpen:false\r\n    };\r\n\r\n    textChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n\r\n    };\r\n\r\n\r\n    setShow = (input) => {\r\n        this.setState({\r\n            show: input\r\n        });\r\n        console.log(this.state)\r\n    }\r\n\r\n\r\n    handleClose = () => {\r\n        this.setShow(false);\r\n    };\r\n    handleShow = () => {\r\n        this.setShow(true);\r\n    };\r\n    handleTutor = () => {\r\n\r\n        this.setState({\r\n            isTutor: true,\r\n            role :'company'\r\n        })\r\n    };\r\n    handleStudent = () => {\r\n        this.setState({\r\n            isTutor: false,\r\n            role :'student'\r\n        })\r\n    };\r\n    handleClose = () => {\r\n        this.setState({\r\n            errorIsOpen: false\r\n        })\r\n    };\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div style={{\r\n                    height: \"100vh\",\r\n                    width: \"100vw\",\r\n                    backgroundImage: `url(${background})`,\r\n                    backgroundSize: \"cover\"\r\n                }}\r\n                     className={\"d-flex main-content flex-column align-items-center justify-content-around\"}>\r\n\r\n                    <div className={\"bg-dark w-50 h-50 text-white\"}>\r\n                        {//header\r\n                        }\r\n                        <div className={\"h-25 p-3 bg-white d-flex align-items-center justify-content-center\"}>\r\n                            <img className={\"h-100\"} src={logo}/>\r\n\r\n                        </div>\r\n                        <div className={\"p-4 d-flex flex-wrap flex-row w-100 justify-content-around align-items-center\"}>\r\n                            <h2 className={\"text-white\"}>Registrieren</h2>\r\n                            <Snackbar open={this.state.errorIsOpen} autoHideDuration={10000} onClose={() => {\r\n                                this.setState({errorIsOpen: false});\r\n                            }}>\r\n\r\n                                <Alert severity={'error'} onClose={this.handleClose}>\r\n                                    Passwörter stimmen nicht überein!\r\n                                </Alert>\r\n                            </Snackbar>\r\n                            <div className={\"w-100 register d-flex justify-content-center \"}>\r\n\r\n                                <form onSubmit={this.register} className={'d-flex flex-column'}>\r\n\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <div className={'button-group p-0'}>\r\n                                                <input\r\n                                                    name={'firstname'}\r\n                                                    id={'firstname'}\r\n                                                    placeholder={'Vorname'}\r\n                                                    value={this.state.firstname}\r\n                                                    className={'form-control'}\r\n                                                    onChange={this.textChange}\r\n                                                    required\r\n                                                />\r\n                                            </div>\r\n                                    </Col>\r\n\r\n                                    <Col>\r\n                                        <div className={'button-group'}>\r\n                                            <input\r\n                                                name={'surname'}\r\n                                                id={'surname'}\r\n                                                placeholder={'Nachname'}\r\n                                                value={this.state.surname}\r\n                                                className={'form-control'}\r\n                                                onChange={this.textChange}\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className={'button-group mt-2'}>\r\n                                            <input name={'email'}\r\n                                                   id={'email'}\r\n                                                   placeholder={'E-Mail'}\r\n                                                   type={'email'}\r\n                                                   className={'form-control'}\r\n                                                   value={this.state.email}\r\n                                                   onChange={this.textChange}\r\n                                                   required\r\n                                            />\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className={\"button-group mt-2\"}>\r\n                                            <input\r\n                                                className={'form-control'}\r\n                                                name={'password'}\r\n                                                id={'password'}\r\n                                                type={'password'}\r\n                                                placeholder={'Passwort'}\r\n                                                value={this.state.password}\r\n                                                onChange={this.textChange}\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col>\r\n\r\n                                        <div className={\"button-group mt-2\"}>\r\n                                            <input\r\n                                                className={'form-control'}\r\n                                                name={'passwordRpt'}\r\n                                                id={'passwordRpt'}\r\n                                                type={'password'}\r\n                                                placeholder={'Passwort wiederholen'}\r\n                                                value={this.state.passwordRpt}\r\n                                                onChange={this.textChange}\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col><p id={'errorMsg'}/></Col>\r\n                                </Row>\r\n\r\n                                <Row>\r\n                                    <Col> <input className={\"btn btn-primary\"} type={'submit'} value={'Registrieren'}/></Col>\r\n                                </Row>\r\n\r\n                                    <p>Schon einen Account? Hier zum <Link style={{color: \"white\", textDecoration: 'none'}} to=\"/login\">Login</Link>\r\n                                    </p>\r\n\r\n                            </form>\r\n                            <Modal show={this.state.show} onHide={this.handleClose}>\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title>Bitte verifiziere deine Email!</Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body className={\"\"}>\r\n                                    <p id={'emailp'}></p>\r\n                                    <a className={'btn btn-outline-primary'}\r\n                                       href={\"https://www.\" + this.state.email.split('@')[1]} target=\"_blank\"\r\n                                       rel=\"noopener noreferrer\">Zur E-Mail</a>\r\n                                </Modal.Body>\r\n                                <Modal.Footer>\r\n                                    <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                                        Schließen\r\n                                    </Button>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    register = (e) => {\r\n\r\n        e.preventDefault();\r\n        if (this.state.password === this.state.passwordRpt) {\r\n\r\n\r\n            const axios = require('axios');\r\n\r\n            const params = new URLSearchParams();\r\n            params.append('firstname', this.state.firstname);\r\n            params.append('surname', this.state.surname);\r\n            params.append('email', this.state.email);\r\n            params.append('password', this.state.password);\r\n            params.append('role', this.state.role);\r\n\r\n\r\n            let url = localStorage.getItem('url');\r\n            axios({\r\n                method: 'post',\r\n                url: url + '/?action=register',\r\n                data: params\r\n            }).then((res) => {\r\n                if (res.data.error !== undefined) {\r\n                    document.getElementById(\"errorMsg\").innerText = res.data.message;\r\n                } else {\r\n                    this.handleShow();\r\n                    document.getElementById(\"emailp\").innerText = \"Deine E-Mail: \" + this.state.email;\r\n                }\r\n\r\n            })\r\n\r\n\r\n        }else{\r\n            this.setState({\r\n                errorIsOpen:true\r\n            })\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Register;\r\n","import React, {Component} from 'react';\r\nimport {Form, Row} from \"react-bootstrap\";\r\n\r\nclass Step1 extends Component {\r\n    render() {\r\n        if (this.props.currentStep !== 1) { // Prop: The current step\r\n            return null\r\n        }\r\n        // The markup for the Step 1 UI\r\n        return (\r\n            <div>\r\n                <Row className={'justify-content-md-center ml-3 mr-3'}>\r\n                    <Form.Group controlId=\"formUsername\" className={\"mt-3 w-75\"}>\r\n                        <Form.Label>Namen des Unternehmens</Form.Label>\r\n                        <Form.Control type={\"text\"} name={\"name\"} value={this.props.name}\r\n                                      onChange={this.props.handleChange} required/>\r\n                    </Form.Group>\r\n                </Row>\r\n\r\n                <Row className={'justify-content-md-center ml-3 mr-3'}>\r\n                    <Form.Group controlId=\"formCompanyEmail\" className={\"w-75\"}>\r\n                        <Form.Label>Email des Unternehmens</Form.Label>\r\n                        <Form.Control type={\"email\"} name={\"email\"} value={this.props.email}\r\n                                      onChange={this.props.handleChange} required/>\r\n                    </Form.Group>\r\n                </Row>\r\n                <Row className={'justify-content-md-center ml-3 mr-3'}>\r\n                    <Form.Group controlId=\"formPhonenumber\" className={\"w-75\"}>\r\n                        <Form.Label>Telefonnummer des Unternehmens</Form.Label>\r\n                        <Form.Control type={\"text\"} name={\"phonenumber\"}\r\n                                      value={this.props.phonenumber}\r\n                                      onChange={this.props.handleChange} required>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Row>\r\n                <Row className={'justify-content-md-center ml-3 mr-3'}>\r\n                    <div className={\"w-75\"}>\r\n                        <div className={\"d-flex justify-content-between\"}>\r\n                            <div className={\"w-75 mr-2\"}>\r\n                                <Form.Group controlId=\"formAddress\">\r\n                                    <Form.Label>Adresse</Form.Label>\r\n                                    <Form.Control type={\"text\"} name={\"address\"}\r\n                                                  value={this.props.address}\r\n                                                  onChange={this.props.handleChange} required>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className={\"w-25\"}>\r\n                                <Form.Group controlId=\"formCap\">\r\n                                    <Form.Label>PLZ</Form.Label>\r\n                                    <Form.Control type={\"text\"} name={\"cap\"}\r\n                                                  value={this.props.cap}\r\n                                                  onChange={this.props.handleChange} required\r\n                                                  pattern={\"[0-9]{5,6}\"}\r\n                                    >\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Step1;","import React, {Component} from 'react';\r\nimport {Form, Row, Button} from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nclass Step2 extends Component {\r\n    state = {\r\n        dialogDistrictIsOpen: false\r\n    }\r\n\r\n    render() {\r\n        if (this.props.currentStep !== 2) { // Prop: The current step\r\n            return null\r\n        }\r\n        var style = {\r\n            height: \"18vh\"\r\n        }\r\n        // The markup for the Step 1 UI\r\n        return (\r\n            <div>\r\n                {this.setDialogDistrict()}\r\n                <Row className={'justify-content-md-center mt-2 ml-3 mr-3'}>\r\n                    <div className={\"w-75\"}>\r\n                        <Form.Label>Berzirke</Form.Label>\r\n                        <div className={\"d-flex justify-content-between\"}>\r\n                            <div className={\"w-75 mr-2\"}>\r\n                                <Select\r\n                                    className=\"basic-single\"\r\n                                    classNamePrefix=\"select\"\r\n                                    name={\"selectedOptionDistrict\"}\r\n                                    isSearchable={true}\r\n                                    isClearable={true}\r\n                                    options={this.props.districts}\r\n                                    value={this.props.selectedOptionDistrict}\r\n                                    onChange={this.props.handleChangeDistricts}\r\n                                    placeholder={\"Wählen sie hier den Bezirk aus!\"}\r\n                                />\r\n                            </div>\r\n                            <div className={\"ml-2 w-25\"}>\r\n                                <Button className={\"btn btn-primary\"}\r\n                                        onClick={() => this.handleDialogOpenDistrict()}>Neuer\r\n                                    Bezirk</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Row>\r\n                <Row className={'justify-content-md-center ml-3 mr-3'}>\r\n                    <div className={\"w-75\"}>\r\n                        <Form.Label>Spezialisierung</Form.Label>\r\n                        <div className={\"d-flex justify-content-between\"}>\r\n                            <div className={\"w-100 mr-2\"}>\r\n                                <Select\r\n                                    className=\"basic-single\"\r\n                                    classNamePrefix=\"select\"\r\n                                    name={\"selectedOptionSpecializations\"}\r\n                                    isSearchable={true}\r\n                                    options={this.props.specializations}\r\n                                    value={this.props.selectedOptionSpecializations}\r\n                                    isClearable={true}\r\n                                    onChange={this.props.handleChangeSpecializations}\r\n                                    placeholder={\"Wählen sie hier die Fachrichtung aus!\"}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Row>\r\n                <div style={style}>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    setDialogDistrict = () => {\r\n        return (\r\n            <Dialog open={this.state.dialogDistrictIsOpen} onClose={this.handleDialogCloseDistrict}\r\n                    aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Neuer Bezirk</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Geben sie im untenstehenden Textfeld den neuen Bezirk ein!\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"district\"\r\n                        label=\"Bezirk\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        onChange={this.props.new_District}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleDialogCloseDistrict} color=\"primary\">\r\n                        Abbrechen\r\n                    </Button>\r\n                    <Button onClick={this.handleDialogSaveDistrict} color=\"primary\">\r\n                        Speichern\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n\r\n    handleDialogOpenDistrict = () => {\r\n        this.setState({\r\n            dialogDistrictIsOpen: true\r\n        })\r\n    }\r\n    handleDialogCloseDistrict = () => {\r\n        this.setState({\r\n            dialogDistrictIsOpen: false\r\n        })\r\n    }\r\n    handleDialogSaveDistrict = () => {\r\n        this.setState({\r\n            dialogDistrictIsOpen: false\r\n        });\r\n        const newDistrictArr = {value: this.props.newDistrictName, label: this.props.newDistrictName};\r\n        this.props.districts.push({\r\n            value: this.props.newDistrictName, label: this.props.newDistrictName\r\n        });\r\n        this.props.saveDistrictstoOptions(newDistrictArr);\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Step2;\r\n\r\n","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport {Button, Form, Modal, ModalBody, Row, Col} from \"react-bootstrap\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport {Divider, Snackbar} from \"@material-ui/core\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport Step1 from \"./StepsForNewCompany/Step1\";\r\nimport Step2 from \"./StepsForNewCompany/Step2\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\n/**\r\n * @property onClick\r\n * @property isSelectable\r\n * @property data\r\n *\r\n */\r\nclass CompanyList extends Component {\r\n\r\n    state = {\r\n        selectedCompanyId: null,\r\n        modalVisible: false,\r\n        dialogDistrictIsOpen: false,\r\n        dialogIsOpen: false,\r\n        errorIsOpen: false,\r\n        currentStep: 1,\r\n        new_District: '',\r\n        email: '',\r\n        name: '',\r\n        phonenumber: '',\r\n        address: '',\r\n        cap: '',\r\n        districts: [],\r\n        selectedOptionDistrict: \"\",\r\n        specializations: [],\r\n        selectedOptionSpecializations: \"\",\r\n        createNewCompany: false\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        this.getAllDistricts();\r\n        this.getAllSpecialization();\r\n        if (this.props.default !== null) {\r\n            this.setState({'selectedCompanyId': this.props.default})\r\n        }\r\n        ;\r\n\r\n        this._next = this._next.bind(this)\r\n        this._prev = this._prev.bind(this)\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n\r\n    getByDatabaseId = (id) => {\r\n\r\n        let selectedCompany = undefined;\r\n\r\n        this.props.data.map(v => {\r\n            if (id === v.id) {\r\n                selectedCompany = v;\r\n            }\r\n        })\r\n\r\n        return selectedCompany;\r\n    }\r\n    handleNewDistrict = (e) => {\r\n        this.setState({\r\n            new_District: e.target.value\r\n        });\r\n    };\r\n    handleChangeSpecializations = selectedOption => {\r\n        this.setState(\r\n            {selectedOptionSpecializations: selectedOption}\r\n        );\r\n    };\r\n    handleChangeDistricts = selectedOption => {\r\n        this.setState(\r\n            {selectedOptionDistrict: selectedOption}\r\n        );\r\n    };\r\n    _next = () => {\r\n        let currentStep = this.state.currentStep\r\n        if (this.checkifStepFilledOut()) {\r\n            // If the current step is 1 or 2, then add one on \"next\" button click\r\n            currentStep = currentStep >= 1 ? 2 : currentStep + 1\r\n            this.setState({\r\n                currentStep: currentStep\r\n            })\r\n        }\r\n        console.log(currentStep)\r\n\r\n    }\r\n\r\n    _prev = () => {\r\n        let currentStep = this.state.currentStep\r\n            // If the current step is 2 or 3, then subtract one on \"previous\" button click\r\n            currentStep = currentStep <= 1 ? 2 : currentStep - 1\r\n            this.setState({\r\n                currentStep: currentStep\r\n            })\r\n        \r\n        console.log(currentStep)\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (this.props.data === null)\r\n            return null;\r\n\r\n\r\n        let currentname = \"\";\r\n        let currentaddress = \"\";\r\n        let currentemail = \"\";\r\n        let currentphonenumber = \"\";\r\n\r\n\r\n\r\n        if (this.state.selectedCompanyId && this.props.data.length > 0  && this.getByDatabaseId(this.state.selectedCompanyId)) {\r\n\r\n\r\n            let company = this.getByDatabaseId(this.state.selectedCompanyId);\r\n            currentname = company.name;\r\n            currentaddress = company.address;\r\n            currentemail = company.email;\r\n            currentphonenumber = company.phonenumber;\r\n        }\r\n\r\n\r\n        return (\r\n\r\n            <div className=\"blockListWrapper\" style={{height: \"60vh\", width: '95%', 'overflowY': 'auto'}}>\r\n                {this.setNewCompany()}\r\n\r\n                <div className={'internshipListItem'}>\r\n                    <Card\r\n                        className={'border border-primary '}\r\n                        onClick={() => {\r\n                            this.handleDialogOpen()\r\n                        }}>\r\n                        <h4 className={\"m-1 mb-2\"}>Neues Unternehmen</h4>\r\n                        <div className={\" d-flex align-items-center justify-content-center\"}>\r\n                            <h3>+</h3>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                {\r\n\r\n                    this.props.data.map((v) => {\r\n\r\n                        return (\r\n                            <div key={v.id} className={'internshipListItem'}>\r\n                                <Card\r\n                                    className={this.state.selectedCompanyId === v.id && 'border border-primary'}\r\n                                    onClick={() => {\r\n                                        this.onClick(v.id)\r\n                                            }}>\r\n                                            <h1>{v.name}</h1>\r\n                                        <br/>\r\n                                        {v.address}\r\n                                    </Card>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n\r\n\r\n                <Modal onHide={() => {\r\n                    this.setState({modalVisible: false})\r\n                }} show={this.state.modalVisible}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Informationen über die Firma {currentname}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <ModalBody>\r\n                        <p>Adresse: <a href={\"https://www.google.com/maps/search/\" + currentaddress} target=\"_blank\"\r\n                                       rel=\"noopener noreferrer\">{currentaddress}</a></p>\r\n                        <p>E-Mail Adresse: <a href={\"mailto:\" + currentemail}>{currentemail}</a></p>\r\n                        <p>Telefonnummer: <a href={\"tel:\" + currentphonenumber}>{currentphonenumber}</a></p>\r\n                        <p></p>\r\n                    </ModalBody>\r\n                    <Modal.Footer>\r\n                        <Button variant={\"secondary\"} onClick={() => {\r\n                            this.setState({modalVisible: false})\r\n                        }}>Schließen</Button>\r\n                        <Button variant=\"primary\" onClick={() => {\r\n                            this.nextStep()\r\n                        }}>Auswählen</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n            )\r\n    }\r\n\r\n    onClick = (key) => {\r\n\r\n        this.setState({selectedCompanyId: key});\r\n        if (this.props.showIntofmation !== null) {\r\n            if (this.props.showIntofmation === true) {\r\n                this.setState({modalVisible: true})\r\n            }\r\n        }\r\n    };\r\n\r\n    nextStep = () => {\r\n        this.props.onClick(this.state.selectedCompanyId);\r\n    }\r\n    nextStepWithID = (companyID) => {\r\n        this.props.onClick(companyID);\r\n    }\r\n    handleDialogClose = () => {\r\n        this.setState({\r\n            dialogIsOpen: false\r\n        })\r\n    };\r\n\r\n\r\n    previousButton = () => {\r\n        let currentStep = this.state.currentStep;\r\n        if (currentStep !== 1) {\r\n            return (\r\n                <button\r\n                    className=\"btn btn-secondary\"\r\n                    type=\"button\" onClick={this._prev}>\r\n                    Previous\r\n                </button>\r\n            )\r\n        }\r\n        // ...else return nothing\r\n        return null;\r\n    }\r\n\r\n    nextButton = () => {\r\n        let currentStep = this.state.currentStep;\r\n        if (currentStep < 2) {\r\n            return (\r\n                <button\r\n                    className=\"btn btn-primary float-right\"\r\n                    type=\"button\" onClick={this._next}>\r\n                    Next\r\n                </button>\r\n            )\r\n        }\r\n        return null;\r\n    }\r\n    handleClose = () => {\r\n        this.setState({\r\n            errorIsOpen: false\r\n        })\r\n    };\r\n\r\n    handleChange(event) {\r\n        const {name, value} = event.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    checkifStepFilledOut = () => {\r\n        var help = false;\r\n        if (this.state.currentStep === 1) {\r\n            let a = this.state.email;\r\n            let b = this.state.name;\r\n            let c = this.state.phonenumber;\r\n            let d = this.state.address;\r\n            let e = this.state.cap;\r\n            help = !(!a || !b || !c || !d || !e);\r\n        } else {\r\n            let a = this.state.selectedOptionSpecializations;\r\n            let b = this.state.selectedOptionDistrict;\r\n            help = !(!a || !b);\r\n        }\r\n        if (!help) {\r\n            this.setState({\r\n                errorIsOpen: true\r\n            });\r\n        }\r\n        return help;\r\n    }\r\n\r\n\r\n    setNewCompany = () => {\r\n\r\n        return (<div>\r\n                <Snackbar open={this.state.errorIsOpen} autoHideDuration={10000} onClose={() => {\r\n                    this.setState({errorIsOpen: false});\r\n                }}>\r\n\r\n                    <Alert severity={'error'} onClose={this.handleClose}>\r\n                        Bitte kontrollieren sie ob alle Felder ausgefüllt sind!\r\n                    </Alert>\r\n                </Snackbar>\r\n                <Dialog open={this.state.dialogIsOpen}\r\n                        classes={{paper: this.state.styles,}}\r\n                        onClose={this.handleDialogClose} fullWidth={true}\r\n                        maxWidth={\"sm\"}\r\n                        aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <div>\r\n                        <DialogTitle id=\"form-dialog-title\">Neues Unternehmen hinzufügen</DialogTitle>\r\n                        <Divider/>\r\n                        <DialogContent>\r\n                            <Form id='my-form' onSubmit={this.handleSubmit}>\r\n                                <Step1\r\n                                    currentStep={this.state.currentStep}\r\n                                    handleChange={this.handleChange}\r\n                                    email={this.state.email}\r\n                                    name={this.state.name}\r\n                                    phonenumber={this.state.phonenumber}\r\n                                    address={this.state.address}\r\n                                    cap={this.state.cap}\r\n                                />\r\n                                <Step2\r\n                                    currentStep={this.state.currentStep}\r\n                                    districts={this.state.districts}\r\n                                    handleChangeDistricts={this.handleChangeDistricts}\r\n                                    selectedOptionDistrict={this.state.selectedOptionDistrict}\r\n                                    specializations={this.state.specializations}\r\n                                    new_District={this.handleNewDistrict}\r\n                                    newDistrictName={this.state.new_District}\r\n                                    saveDistrictstoOptions={this.saveDistrictsOptions}\r\n                                    handleChangeSpecializations={this.handleChangeSpecializations}\r\n                                    selectedOptionSpecializations={this.state.selectedOptionSpecializations}\r\n                                />\r\n                            </Form>\r\n                            {this.nextButton()}\r\n                            {this.previousButton()}\r\n                        </DialogContent>\r\n                        <Divider className={\"mt-2\"}/>\r\n                    <DialogActions className={\"float-right\"}>\r\n                        <Button onClick={this.handleDialogClose} color=\"primary\">\r\n                            Abbrechen\r\n                        </Button>\r\n                        <Button className={\" mt-2 m-2\"} form={\"my-form\"} color=\"primary\"\r\n                                disabled={this.state.createNewCompany} type=\"submit\">\r\n                            Erstellen\r\n                        </Button>\r\n                    </DialogActions>\r\n                        <Divider/>\r\n                    </div>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n    saveDistrictsOptions = (arr) => {\r\n        this.setState({\r\n            selectedOptionDistrict: arr\r\n        })\r\n    }\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        if (this.checkifStepFilledOut()) {\r\n            console.log(\"alles ausgefüllt\");\r\n\r\n\r\n            let url = localStorage.getItem('url');\r\n            let params = new URLSearchParams();\r\n\r\n            params.append('address', this.state.address);\r\n            params.append('email', this.state.email);\r\n            params.append('companyname', this.state.name);\r\n            params.append('phonenumber', this.state.phonenumber);\r\n            params.append('cap', this.state.cap);\r\n            params.append('districtname', this.state.selectedOptionDistrict.label);\r\n            params.append('specializationsid', this.state.selectedOptionSpecializations.value);\r\n\r\n\r\n            const axios = require('axios');\r\n            url += '?action=createCompany';\r\n\r\n            axios({\r\n                method: 'post',\r\n                url: url,\r\n                data: params\r\n            }).then((res) => {\r\n                console.log(res.data);\r\n                this.nextStepWithID(res.data.id);\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    getAllDistricts = () => {\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=getAllDistricts\";\r\n\r\n        const axios = require('axios');\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            const newdistricts = res.data.map(function (row) {\r\n                return {value: row.id, label: row.name}\r\n            });\r\n            this.setState({districts: newdistricts});\r\n\r\n        });\r\n    };\r\n    getAllSpecialization = () => {\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=getAllRoles\";\r\n\r\n        const axios = require('axios');\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            const newspecializations = res.data.map(function (row) {\r\n                return {value: row.id, label: row.description}\r\n            });\r\n\r\n            console.log(newspecializations[0])\r\n            this.setState({\r\n\r\n                specializations: newspecializations\r\n            });\r\n        })\r\n\r\n    };\r\n\r\n\r\n    handleDialogOpen = () => {\r\n        this.setState({\r\n            dialogIsOpen: true\r\n        })\r\n    };\r\n\r\n\r\n}\r\n\r\n\r\nexport default CompanyList;\r\n","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport {Alert, Col, Row} from \"react-bootstrap\";\r\nimport '../InternshipStepsStyle.css';\r\nimport Select from 'react-select'\r\nimport CompanyList from \"./SubComponents/companyList\";\r\nimport {Snackbar} from \"@material-ui/core\";\r\n\r\n\r\nclass SelectInternship extends Component {\r\n    state = {\r\n        data: [],\r\n        districts: [],\r\n        selectionOpen: false,\r\n        selectedOption: -1,\r\n        noCompanyFound: false,\r\n        specialization: {\r\n            id: 1,\r\n            description: \"Informatiker\"\r\n        }\r\n\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        const axios = require('axios');\r\n        axios.defaults.headers.common['Auth-Token'] = localStorage.getItem('token');\r\n        var start = {value: -1, label: \"Alle\"}\r\n        this.setState(\r\n            {selectedOption: start}\r\n        );\r\n        this.getAllCompanies();\r\n        this.getAllDistricts();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={'d-flex justify-content-center align-items-center bg-light'}>\r\n                <Col className={'justify-content-md-center'}>\r\n                    <Row className={'justify-content-md-center'}>\r\n                        <h1>Praktikumsbetrieb</h1>\r\n                    </Row>\r\n                    <Row className={'justify-content-md-center'}>\r\n                        <Col>\r\n                            {/* Select District */}\r\n                            <div className={'form-group'}>\r\n                                <label>Bezirk</label>\r\n                                <Select\r\n                                    options={this.state.districts}\r\n                                    value={this.state.selectedOption}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder={\"Wählen sie hier Ihren Bezirk aus!\"}\r\n                                />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n\r\n                        <CompanyList showIntofmation={true} onClick={this.onCompanyClick}\r\n                                     default={this.props.default}\r\n                                     isSelectable={true}\r\n                                     filterBy={this.state.selectedOption} data={this.state.data}/>\r\n\r\n\r\n                    </Row>\r\n                </Col>\r\n                <Snackbar open={this.state.noCompanyFound} autoHideDuration={10000} onClose={() => {\r\n                    this.setState({noCompanyFound: false})\r\n                }}>\r\n                    <Alert severity=\"error\" onClose={this.handleCloseSnackbar}>\r\n                        Kein Unternehmen in diesem Bezirk gefunden!\r\n                    </Alert>\r\n                </Snackbar>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleCloseSnackbar = () => {\r\n        this.setState({\r\n            noCompanyFound: false\r\n        })\r\n    };\r\n\r\n\r\n    getAllDistricts = () => {\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=getAllVerifiedDistricts\";\r\n\r\n        const axios = require('axios');\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            var newdistricts = [];\r\n            newdistricts.push({\r\n                value: -1, label: \"Alle\"\r\n            })\r\n            res.data.map((row) => {\r\n                newdistricts.push({value: row.id, label: row.name});\r\n            });\r\n\r\n            this.setState({districts: newdistricts});\r\n        })\r\n    };\r\n    getAllCompanies = () => {\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=getAllVerifiedCompanies\";\r\n\r\n        const axios = require('axios');\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            this.setState({data: res.data});\r\n        })\r\n    };\r\n\r\n\r\n    getCompanysByDistrict = (input) => {\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=getCompanyByDistrict\";\r\n\r\n        const axios = require('axios');\r\n\r\n        let params = new URLSearchParams();\r\n        params.append(\"id\", input);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n            /*When no return then displays Kein Prakitkum*/\r\n            if (res.data.length === 0) {\r\n                this.setState({\r\n                    data: res.data,\r\n                    noCompanyFound: true\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    data: res.data,\r\n                    noCompanyFound: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Saves selected option in state\r\n     */\r\n    handleChange = selectedOption => {\r\n        if (selectedOption) {\r\n            if (selectedOption.value !== -1) {\r\n                this.getCompanysByDistrict(selectedOption.value);\r\n            } else {\r\n                this.getAllCompanies();\r\n            }\r\n            this.setState(\r\n                {selectedOption}\r\n            );\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Sends data to parent Component\r\n     * @param id companyId\r\n     */\r\n    onCompanyClick = (id) => {\r\n        console.log(id)\r\n        this.props.setCompleted(\"company_id\", id, 1)\r\n    };\r\n}\r\n\r\n\r\nexport default SelectInternship;","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport {DateRange, registerLocale} from 'react-date-range';\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css';\r\nimport {Button, Col, Row} from \"react-bootstrap\"; // theme css file\r\nimport MediaQuery from 'react-responsive'\r\nimport de from \"date-fns/locale/de\";\r\n\r\nclass SelectDateInternship extends Component {\r\n\r\n    state = {\r\n        range: {\r\n            startDate: new Date(),\r\n            endDate: new Date(),\r\n            key: 'selection',\r\n        }\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        console.log({loadedDates: this.props.default});\r\n\r\n        //load default value\r\n        if (this.props.default.from && this.props.default.to) {\r\n\r\n            let ranges = {\r\n                startDate: Date.parse(this.props.default.from),\r\n                endDate: new Date(this.props.default.to),\r\n                key: 'selection',\r\n            };\r\n\r\n            this.setState({range: ranges});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * saves state of date range in state(startDate & endDate)\r\n     * @param ranges\r\n     *\r\n     */\r\n    handleSelect = (ranges) => {\r\n        console.log(ranges);\r\n        this.setState(prevState => {\r\n            let range = Object.assign({}, prevState.range);\r\n            range.startDate = ranges['selection'].startDate;\r\n            range.endDate = ranges['selection'].endDate;\r\n\r\n            return {range};\r\n        })\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={'d-flex justify-content-center align-items-center bg-light'}>\r\n\r\n                <Col>\r\n                    <Row className={'justify-content-md-center'}>\r\n                        <h1>Dein Praktikumszeitraum</h1>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row className={'justify-content-md-center'}>\r\n                        {/*Media Query for Desktop*/}\r\n                        <MediaQuery minDeviceWidth={1224}>\r\n                            <DateRange\r\n                                locale={de}\r\n                                ranges={[this.state.range]}\r\n                                onChange={this.handleSelect}\r\n                                months={2}\r\n                                direction={'horizontal'}\r\n                            />\r\n                        </MediaQuery>\r\n                        {/*Media Query for Mobile*/}\r\n                        <MediaQuery maxWidth={1024} maxDeviceWidth={1024}>\r\n                            <DateRange\r\n                                locale={de}\r\n                                minDate={this.state.range.minDate}\r\n                                ranges={[this.state.range]}\r\n                                onChange={this.handleSelect}\r\n                                months={2}\r\n                                direction={'vertical'}\r\n                            />\r\n                        </MediaQuery>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Button className={'w-25 float-right'} onClick={() => {\r\n                                console.log(this.state.range);\r\n                                this.props.setCompleted('from', this.state.range.startDate, null);\r\n                                this.props.setCompleted('to', this.state.range.endDate, 2);\r\n                            }}>Weiter</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default SelectDateInternship;\r\n","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nclass ListTutor extends Component {\r\n    state = {\r\n        data: [],\r\n        selectionOpen: false,\r\n        selectedTutorId: 0\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.default);\r\n        if (this.props.default !== null) {\r\n            this.setState({selectedTutorId: this.props.default});\r\n        }\r\n    }\r\n\r\n    clickTutor = (key) => {\r\n        console.log(key);\r\n        this.setState({selectedTutorId: key});\r\n        this.props.onClick(key)\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"blockListWrapper\">\r\n\r\n                {\r\n                    this.props.data.map((v, k) => {\r\n                        return (\r\n                            <div key={k} className={'internshipListItem'}>\r\n                                <Card\r\n                                    className={this.state.selectedTutorId === v.id && 'border border-primary'}\r\n                                    onClick={() => {\r\n                                        this.clickTutor(v.id)\r\n                                    }}>\r\n                                    <Card.Header className={\"d-flex align-items-baseline justify-content-between\"}>\r\n                                        <Avatar>AC</Avatar>\r\n\r\n                                        {v.firstname} {v.surname}\r\n                                        <div/>\r\n                                    </Card.Header>\r\n                                    <Card.Body>\r\n                                        {v.email}\r\n                                    </Card.Body>\r\n                                </Card>\r\n\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ListTutor;\r\n","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport {Button, Col, Collapse, Row} from \"react-bootstrap\";\r\nimport '../InternshipStepsStyle.css';\r\nimport ListTutor from \"./SubComponents/ListTutor\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {Snackbar} from \"@material-ui/core\";\r\n\r\n\r\n\r\nclass SelectTutor extends Component {\r\n    state = {\r\n        data: [],\r\n        selectionOpen: false,\r\n        noTutorFound: false\r\n    };\r\n\r\n\r\n    JsonToList = (id, searchInput) => {\r\n        let url = localStorage.getItem('url');\r\n\r\n        url += \"?action=\";\r\n        let search = \"\";\r\n        let url_search = \"\";\r\n        switch (id) {\r\n            case 1:\r\n                search = \"getAllSchoolpersons\";\r\n                url_search = url + search;\r\n                break;\r\n            case 2:\r\n                search = \"getSchoolpersonsByName&name=\";\r\n                url_search = url + search;\r\n                break;\r\n\r\n            default:\r\n                search = \"getAllSchoolpersons\";\r\n                url_search = url + search;\r\n                break;\r\n        }\r\n        if (searchInput != null) {\r\n            url_search = url_search + searchInput;\r\n        }\r\n\r\n        const axios = require('axios');\r\n        axios({\r\n            method: 'post',\r\n            url: url_search,\r\n        }).then((res) => {\r\n            switch (id) {\r\n                case 1:\r\n                    this.setState({\r\n                        data: res.data\r\n                    });\r\n                    break;\r\n                case 2:\r\n                    console.log(res.data);\r\n\r\n                    if(res.data.length === 0){\r\n                        this.setState({\r\n                            data: res.data,\r\n                            noTutorFound: true\r\n                        });\r\n                    }else{\r\n                        this.setState({\r\n                            data: res.data,\r\n                            noTutorFound: false\r\n                        });\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.setState({\r\n                        data: res.data\r\n                    });\r\n                    break;\r\n            }\r\n\r\n        })\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('load', this.JsonToList(1, null));\r\n\r\n    }\r\n\r\n\r\n    searchTutorByName = () => {\r\n        let nameOfTutor = document.getElementById(\"search\").value;\r\n        if (nameOfTutor !== null || nameOfTutor !== \"\") {\r\n            this.JsonToList(2, nameOfTutor);\r\n        }\r\n    };\r\n\r\n\r\n    selectionOptions = () => {\r\n        let invertedState = !this.state.selectionOpen;\r\n        if (invertedState === true) {\r\n            document.getElementById(\"selectOption\").innerHTML = \"Suchen\";\r\n        } else {\r\n            this.searchTutorByName(document.getElementById(\"search\").value);\r\n            document.getElementById(\"selectOption\").innerHTML = \"Öffnen\";\r\n        }\r\n        this.setState({selectionOpen: invertedState})\r\n    };\r\n\r\n    onClick = (key) => {\r\n        this.props.setCompleted('tutor', key, 3)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={'d-flex justify-content-center align-items-center bg-light'}>\r\n                <Col className={'justify-content-md-center'}>\r\n                    <Row className={'justify-content-md-center'}>\r\n                        <h1>Praktikumstutor</h1>\r\n                    </Row>\r\n                    <Row className={'justify-content-md-center'}>\r\n                        <Collapse in={this.state.selectionOpen}>\r\n                            <Col>\r\n                                <div className={'row pt-2'}>\r\n                                    <h5>Welchen Praktikumstutor hast du?</h5>\r\n                                </div>\r\n                                <div className={'row mb-4'}>\r\n                                    <input className={'form-control col '} id={\"search\"}/>\r\n                                </div>\r\n                            </Col>\r\n                        </Collapse>\r\n                    </Row>\r\n                    <Row className={' d-flex flex-wrap justify-content-around w-100 overflow-auto'}>\r\n                        <Button className={'w-50'} variant={\"outline-primary\"} id={\"selectOption\"}\r\n                                onClick={this.selectionOptions}>Suchen</Button> {/* searches for Tutor */}\r\n                    </Row>\r\n                    <Row>\r\n                        <ListTutor onClick={this.onClick} default={this.props.default} data={this.state.data}/>\r\n                    </Row>\r\n                </Col>\r\n                <Snackbar open={this.state.noTutorFound} autoHideDuration={10000} onClose={() => {\r\n                    this.setState({noTutorFound: false})\r\n                }}>\r\n                    <Alert severity=\"info\" onClose={this.handleCloseSnackbar}>\r\n                        Kein Tutor gefunden!\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleCloseSnackbar = () => {\r\n        this.setState({\r\n            noTutorFound: false\r\n        })\r\n    };\r\n}\r\n\r\n\r\nexport default SelectTutor;\r\n","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport '../InternshipStepsStyle.css';\r\nimport React, {Component} from 'react';\r\nimport {Button, Col, Row} from \"react-bootstrap\";\r\nimport {Calendar} from \"react-date-range\";\r\n\r\n\r\nclass PersonalInfo extends Component {\r\n    state = {\r\n\r\n    };\r\n\r\n    onChange = (date) => {\r\n        this.setState(prevState => {\r\n            let personalinfo = Object.assign({}, prevState.personalinfo);\r\n            personalinfo.birthdate = date;\r\n            return {personalinfo};\r\n        })\r\n    };\r\n\r\n\r\n    /**\r\n     * saves state of input in state array personalinfo\r\n     * @param e\r\n     */\r\n    handleInputChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    /**\r\n     * sets personal info into state from login information\r\n     * */\r\n    setPersonalInfo = () => {\r\n        this.setState({\r\n            firstname: this.props.currentUser.firstname,\r\n            surname: this.props.currentUser.surname\r\n        })\r\n    };\r\n\r\n    /**\r\n     * nachdem fenster geladen hat werden diese Methoden ausgeführt\r\n     * */\r\n    componentDidMount() {\r\n        this.setPersonalInfo();\r\n\r\n        console.log(this.props.currentUser.surname);\r\n\r\n        \r\n        window.addEventListener('load', this.getStudentextraInfo());\r\n    }\r\n\r\n    /**\r\n     * gettet klasse und fachrichtung von api\r\n     * */\r\n    getStudentextraInfo = () => {\r\n\r\n        let url = localStorage.getItem('url');\r\n\r\n        url += \"?action=getStudentextra\";\r\n        let url_search = url;\r\n        const axios = require('axios');\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url_search,\r\n\r\n            //asas\r\n        }).then((res) => {\r\n            if (res.data.length > 0) {\r\n                this.setState({\r\n                    schoolclass: res.data[0].name,\r\n                    specialisation: res.data[0].description,\r\n                    school: \"LBSHI-BZ\"\r\n\r\n                })\r\n            }\r\n\r\n\r\n        })\r\n    };\r\n\r\n    saveDateIntoState = (date) => {\r\n        this.setState({\r\n            birthdate : date\r\n        })\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={'d-flex justify-content-center align-items-center bg-light'}>\r\n                <Col className={'justify-content-md-center'}>\r\n                    <Row className={'justify-content-md-center'}>\r\n                        <h1>Persönliche Informationen</h1>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row className={'justify-content-md-center'}>\r\n\r\n                        <form>\r\n                            <Row>\r\n                                <Col>\r\n                                    {/*Input for Zu- und Vorname*/}\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">Zu- und Vorname</span>\r\n                                        </div>\r\n                                        <input type=\"text\"\r\n                                               className=\"form-control\"\r\n                                               value={this.state.firstname + \" \" + this.state.surname}\r\n                                               aria-label=\"Vor_Zuname\"\r\n                                               name={\"firstname_surname\"}\r\n                                               aria-describedby=\"basic-addon1\"\r\n                                               disabled\r\n                                        />\r\n                                    </div>\r\n                                    {/*Input for Geburtsdatum*/}\r\n                                    <div className=\"input-group mb-3\">\r\n\r\n                                    </div>\r\n                                    {/*Input for Steuernummer*/}\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">Steuernummer</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Steuernummer\"\r\n                                               aria-label=\"Steuernummer\"\r\n                                               name={\"tax_number\"}\r\n                                               aria-describedby=\"basic-addon1\"\r\n                                               onChange={this.handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    {/*Input for Straße*/}\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\"\r\n                                    >Straße</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Straße\"\r\n                                               aria-label=\"Straße\"\r\n                                               name={\"street\"}\r\n                                               aria-describedby=\"basic-addon1\"\r\n                                               onChange={this.handleInputChange}\r\n                                        />\r\n                                        {/*Input for Wohnsitz*/}\r\n                                        <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\"\r\n                                    >Wohnsitz</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Wohnsitz\"\r\n                                               aria-label=\"Wohnsitz\"\r\n                                               name={\"residence\"}\r\n                                               aria-describedby=\"basic-addon1\"\r\n                                               onChange={this.handleInputChange}\r\n                                        />\r\n                                        {/*Input for Postleitzahl*/}\r\n                                        <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\"\r\n                                    >Postleitzahl</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Postleitzahl\"\r\n                                               aria-label=\"Postleitzahl\"\r\n                                               name={\"postcode\"}\r\n                                               aria-describedby=\"basic-addon1\"\r\n                                               onChange={this.handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                    {/*Input for Schule*/}\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">Schule</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control\"\r\n                                               value={this.state.school}\r\n                                               aria-label={\"Schule\"}\r\n                                               name={\"school\"}\r\n                                               aria-describedby=\"basic-addon1\"\r\n                                               onChange={this.handleInputChange}\r\n                                               disabled\r\n                                        />\r\n                                        {/*Input for Klasse/Zug*/}\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">Klasse/Zug</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control\"\r\n                                               aria-label=\"Klasse/Zug\"\r\n                                               value={this.state.schoolclass}\r\n                                               name={\"schoolclass\"}\r\n                                               id={\"schoolclass\"}\r\n                                               aria-describedby=\"basic-addon1\"\r\n                                               onChange={this.handleInputChange}\r\n                                               disabled\r\n                                        />\r\n                                        {/*Input for Fachrichtung*/}\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">Fachrichtung</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control\"\r\n                                               aria-label=\"Fachrichtung\"\r\n                                               value={this.state.specialisation}\r\n                                               id={\"specialisation\"}\r\n                                               name={\"specialisation\"}\r\n                                               onChange={this.handleInputChange}\r\n                                               aria-describedby=\"basic-addon1\"\r\n                                               disabled\r\n                                        />\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">Geburtsdatum</span>\r\n                                        </div>\r\n                                        <Calendar\r\n                                            className=\"border flex-fill align-content-center\"\r\n                                            date={this.state.birthdate}\r\n                                            onChange={this.saveDateIntoState}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"input-group mb-3\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\"\r\n                                    >Geburtsort</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Geburtsort\"\r\n                                               aria-label=\"Geburtsort\"\r\n                                               name={\"birthplace\"}\r\n                                               id={\"birthplace\"}\r\n                                               aria-describedby=\"basic-addon1\"\r\n                                               onChange={this.handleInputChange}\r\n                                        />\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </form>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Button className={'w-25 float-right'} onClick={() => {\r\n                                this.props.setCompleted('personalinfo', this.state, 5)\r\n                            }}>Weiter</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PersonalInfo;\r\n","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport {Snackbar} from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {IoMdDownload} from \"react-icons/io\";\r\nimport contract from \"../../../img/strps/contract.jpg\";\r\n\r\nclass FillDownloadInternship extends Component {\r\n    state = {\r\n        errorIsOpen: false\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            errorIsOpen: false,\r\n            errorMsg: \"Es ist ein Fehler aufgetreten\"\r\n        })\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className={'d-flex rounded'}\r\n                 style={{\r\n                     backgroundImage: `url(${contract})`, height: \"65vh\", backgroundSize: \"50vh\",\r\n                     backgroundRepeat: 'no-repeat', backgroundPosition: ' bottom right', backgroundColor: 'white'\r\n                 }}>\r\n                <div\r\n                    className={'justify-content-md-center m-3 '}>\r\n                    <div className={'justify-content-md-center'}>\r\n                        <h1 style={{fontSize: 80}}>Download des Praktikumsvertrages</h1>\r\n                    </div>\r\n                    <div style={{fontSize: 20}}>Hier findest du deinen schon ausgefüllten Praktikumsvertrage</div>\r\n                    <div className={'justify-content-md-center'}>\r\n                        <div style={{fontSize: 20}} className={'btn btn-outline-primary px-4 m-auto'}\r\n                             onClick={this.generatePdf}>Download<IoMdDownload/></div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <Snackbar open={this.state.errorIsOpen} autoHideDuration={10000} onClose={() => {\r\n                    this.setState({errorIsOpen: false})\r\n                }}>\r\n\r\n                    <Alert severity={'error'} onClose={this.handleClose}>\r\n                        {this.state.errorMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    generatePdf = () => {\r\n\r\n        try {\r\n            const axios = require('axios');\r\n            let url = localStorage.getItem('url');\r\n            const params = new URLSearchParams();\r\n            //console.log(this.props.values.personalinfo.birthdate.toISOString().slice(0, 10));\r\n            params.append('name', this.props.values.personalinfo.surname + \" \" + this.props.values.personalinfo.firstname);\r\n            params.append('birthdate', this.props.values.personalinfo.birthdate.toISOString().slice(0, 10));\r\n            params.append('specialisation', this.props.values.personalinfo.specialisation);\r\n            params.append('schoolclass_id', this.props.values.schoolclass_id);\r\n            params.append('company_id', this.props.values.company_id);\r\n            params.append('tax_number', this.props.values.personalinfo.tax_number);\r\n            params.append('street', this.props.values.personalinfo.street);\r\n            params.append('residence', this.props.values.personalinfo.residence);\r\n            params.append('postcode', this.props.values.personalinfo.postcode);\r\n            params.append('birthplace', this.props.values.personalinfo.birthplace);\r\n            params.append('internship_id', this.props.values.id);\r\n            params.append('student_id', this.props.values.student_id);\r\n            params.append('tutor_id', this.props.values.tutor);\r\n            params.append('school', this.props.values.personalinfo.school);\r\n            params.append('schoolclass', this.props.values.personalinfo.schoolclass);\r\n            params.append('specialisation', this.props.values.personalinfo.specialisation);\r\n            //console.log(this.props.values);\r\n            axios({\r\n                method: 'post',\r\n                url: url + '/?action=generateContract',\r\n                data: params\r\n            }).then((res) => {\r\n                if (res.data.error) {\r\n                    this.setState({\r\n                        errorIsOpen: true,\r\n                        errorMsg: \"Bitte kontrollieren Sie ob ihr Unternehmen und deren Mitarbeiter verifiziert sind, wenden Sie sich an Ihren Klassenlehrer oder das Sekreteriat!\"\r\n                    })\r\n\r\n                } else {\r\n                    this.getBlobData(params, axios, url)\r\n                    this.props.setCompleted(null, null, 6)\r\n                }\r\n\r\n            })\r\n        } catch (e) {\r\n            if (e.name === 'TypeError')\r\n                this.setState({\r\n                    errorIsOpen: true,\r\n                    errorMsg: \"Bitte kontrollieren Sie ob alle Felder im vorherigen Schritt ausgefüllt sind!\"\r\n                })\r\n        }\r\n    }\r\n\r\n    getBlobData = (params, axios, url) => {\r\n        axios({\r\n            responseType: 'arraybuffer',\r\n            method: 'POST',\r\n            data: params,\r\n            url: url + '/?action=generateContract'\r\n        }).then((res) => {\r\n\r\n            let data = new Blob([res.data], {type: res.headers['content-type']});\r\n\r\n            //let data = new Blob([res.data], {type: res.headers['content-type']});\r\n\r\n            let url = window.URL.createObjectURL(data);\r\n\r\n            // let a = document.createElement(\"a\");\r\n            // document.body.appendChild(a);\r\n            // a.style = \"display: none\";\r\n            // a.href = this.state.fileUrl;\r\n            // a.download = \"ArbeitsVertrag.docx\";\r\n            // a.click();\r\n            let a = document.createElement(\"a\");\r\n            document.body.appendChild(a);\r\n            a.style = \"display: none\";\r\n            a.href = url;\r\n            a.download = \"ArbeitsVertrag.docx\";\r\n            a.click();\r\n            window.URL.revokeObjectURL(url);\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default FillDownloadInternship;","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport contract from \"../../../img/strps/contract.jpg\";\r\nimport {Snackbar} from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {IoMdCloudUpload} from \"react-icons/io\";\r\nimport axios from 'axios';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nclass UploadInternship extends Component {\r\n    state = {\r\n        currentFile: \"Wähle deinen Vertrag aus!\"\r\n    };\r\n\r\n    uploadData = (e) => {\r\n        let url = localStorage.getItem('url');\r\n\r\n        e.preventDefault();\r\n        let formData = new FormData();\r\n        let imagefile = document.querySelector('#file');\r\n        formData.append(\"internshipId\", this.props.values.id);\r\n        formData.append(\"contract\", imagefile.files[0]);\r\n        axios({\r\n            method: 'post',\r\n            url: url + '?action=uploadContract',\r\n            data: formData,\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then((res) => {\r\n            console.log(res)\r\n            console.log(res.data.message);\r\n            this.setState({message: res.data.message})\r\n            this.showMessage(res.data.message);\r\n        });\r\n\r\n\r\n        //Snack Messages\r\n    };\r\n\r\n    onFileSelect = () => {\r\n        let imagefile = document.querySelector('#file');\r\n        console.log(imagefile.files[0]);\r\n        if (imagefile.files[0])\r\n            this.setState({currentFile: imagefile.files[0].name});\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={'d-flex rounded'}\r\n                 style={{\r\n                     backgroundImage: `url(${contract})`, height: \"65vh\", backgroundSize: \"50vh\",\r\n                     backgroundRepeat: 'no-repeat', backgroundPosition: ' bottom right', backgroundColor: 'white'\r\n                 }}>\r\n                <div\r\n                    className={'justify-content-md-center m-3 '}>\r\n                    <div className={'justify-content-md-center'}>\r\n                        <h1 style={{fontSize: 80}}>Upload des Praktikumsvertrages</h1>\r\n                    </div>\r\n                    <div style={{fontSize: 20}}>Bitte Lade deinen ausgefüllten und unterschriebenen Vertrag hoch</div>\r\n                    <div className={'justify-content-md-center w-25'}>\r\n                        <form onSubmit={this.uploadData}>\r\n                            <div className=\"input-group w-100 m-2\">\r\n                                <div className=\"custom-file\">\r\n                                    <input type=\"file\" id=\"file\" ref=\"fileUploader\" onChange={() => {\r\n                                        this.onFileSelect()\r\n                                    }}/>\r\n                                    <label className=\"custom-file-label\" htmlFor=\"file\">{this.state.currentFile}</label>\r\n                                </div>\r\n                            </div>\r\n                            <Button variant={'light'} className={\"btn-outline-primary px-4 m-2 w-100\"} type=\"submit\">Upload<IoMdCloudUpload\r\n                                className={\"ml-2\"}/></Button>\r\n                        </form>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <Snackbar open={this.state.showSnack}\r\n                          autoHideDuration={5000}\r\n                          onClose={() => {\r\n                              this.setState({showSnack: false})\r\n                          }}\r\n                >\r\n                    <Alert severity={this.state.snackErrLevel}>\r\n                        {this.state.snackMessage}\r\n                    </Alert>\r\n                </Snackbar>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    showMessage = async (message) => {\r\n        //console.log(this.state.message);\r\n        if (message === \"success\") {\r\n            console.log(\"success\")\r\n            this.setState({\r\n                'snackErrLevel': 'success',\r\n                'showSnack': true,\r\n                'snackMessage': 'Jeeee ... alles abgespeichert. Sie werden gleich weitergeleitet!'\r\n            });\r\n            await new Promise(r => setTimeout(r, 2000));\r\n            this.props.setCompleted(null, null, 7);\r\n        } else {\r\n            this.setState({\r\n                'snackErrLevel': 'error',\r\n                'showSnack': true,\r\n                'snackMessage': 'WOW ... da ist was schief gelaufen'\r\n            })\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default UploadInternship;","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport ParticlesBg from \"particles-bg\";\r\n\r\nclass WaitConfirmation extends Component {\r\n    state = {\r\n        internshipStatus: \"unknown\",\r\n        internshipStatusDescr: \"\"\r\n    };\r\n    /**\r\n     * wählt anhand der id den Confirmationstatus aus\r\n     * */\r\n    getConfirmationStatus = () => {\r\n        const axios = require('axios');\r\n        let url = localStorage.getItem('url');\r\n\r\n        let params = new URLSearchParams();\r\n        params.append(\"id\", this.props.values.id);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url + '?action=getStateByInternship',\r\n            data: params\r\n        }).then((res) => {\r\n            this.setState({internshipStatus: res.data.name});\r\n            this.setState({internshipStatusDescr: res.data.description});\r\n            console.log(res.data.description)\r\n        })\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        console.log(this.getConfirmationStatus());\r\n    }\r\n\r\n    render() {\r\n\r\n        let config = {\r\n            num: [4, 7],\r\n            rps: 0.9,\r\n            radius: [4, 90],\r\n            life: [1.5, 3],\r\n            v: [2, 3],\r\n            tha: [-40, 40],\r\n            alpha: [0.6, 0],\r\n            scale: [.1, 0.4],\r\n            position: \"all\",\r\n            color: [[\"#AAABBF\", \"#023059\", \"#F2C335\", \"#F2D06B\"]],\r\n            cross: \"dead\",\r\n            //emitter: \"follow\",\r\n            random: 10\r\n        };\r\n\r\n        if (Math.random() > 0.85) {\r\n            config = Object.assign(config, {\r\n                onParticleUpdate: (ctx, particle) => {\r\n                    ctx.beginPath();\r\n                    ctx.rect(\r\n                        particle.p.x,\r\n                        particle.p.y,\r\n                        particle.radius * 2,\r\n                        particle.radius * 2\r\n                    );\r\n                    ctx.fillStyle = particle.color;\r\n                    ctx.fill();\r\n                    ctx.closePath();\r\n                }\r\n            });\r\n        }\r\n        return (\r\n            <div style={{height: \"65vh\", backgroundColor: \"#fff\", \"position\": \"relative\"}} className={'d-flex rounded'}>\r\n                {/**<ParticlesBg type=\"custom\" config={config} style={{position: \"absolute\", top: 0, left: 0, zIndex: -99}}/>    ---      with errors **/}\r\n                <div style={{\"position\": \"absolute\"}} className={\"h-100 d-flex justify-content-center align-items-center\"}>\r\n                    <div className={\" w-50\"}>\r\n                        <h1 className={'m-4'}>{this.state.internshipStatus}</h1>\r\n                        <h3 className={'text-center m-2 border-top p-4'}>{this.state.internshipStatusDescr}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WaitConfirmation;","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport {Button, Col, Collapse, Form, Row} from \"react-bootstrap\";\r\nimport '../InternshipStepsStyle.css';\r\nimport ListTutor from \"./SubComponents/ListTutor\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {Divider, Snackbar} from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Select from \"react-select\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\n\r\nclass SelectTutorCompany extends Component {\r\n    state = {\r\n        data: [],\r\n        selectionOpen: false,\r\n        noTutorFound: false\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n\r\n    }\r\n\r\n    loadData = () => {\r\n        const axios = require('axios');\r\n        let url = localStorage.getItem('url')\r\n        url += \"?action=getTutorByCompanyId\";\r\n        let params = new URLSearchParams();\r\n        params.append('id', this.props.companyId);\r\n        axios({\r\n            method: 'post',\r\n            url,\r\n            data: params\r\n        }).then((res) => {\r\n            if (res.data.length === 0) {\r\n                this.setState({\r\n                    data: res.data,\r\n                    noTutorFound: true\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    data: res.data,\r\n                    noTutorFound: false\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    onClick = (key) => {\r\n        this.props.setCompleted('tutor_company_id', key, 4)\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={'d-flex justify-content-center align-items-center bg-light'}>\r\n                <Col className={'justify-content-md-center'}>\r\n                    <Row className={'justify-content-md-center'}>\r\n                        <h1>Firmentutor</h1>\r\n                    </Row>\r\n                    <Row className={'justify-content-md-center'}>\r\n                        <Collapse in={this.state.selectionwOpen}>\r\n                            <Col>\r\n                                <div className={'row pt-2'}>\r\n                                    <h5>Welchen Praktikumstutor hast du?</h5>\r\n                                </div>\r\n                            </Col>\r\n                        </Collapse>\r\n                    </Row>\r\n                    <Row>\r\n                        <ListTutor onClick={this.onClick} default={this.props.default} data={this.state.data}/>\r\n\r\n                    </Row>\r\n                </Col>\r\n                <Snackbar open={this.state.noTutorFound} autoHideDuration={10000} onClose={() => {\r\n                    this.setState({noTutorFound: false})\r\n                }}>\r\n                    <Alert severity=\"info\" onClose={this.handleCloseSnackbar}>\r\n                        Kein Tutor für diese Firma gefunden!\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleCloseSnackbar = () => {\r\n        this.setState({\r\n            noTutorFound: false\r\n        })\r\n    };\r\n}\r\n\r\n\r\nexport default SelectTutorCompany;\r\n","import './InternshipStepsStyle.css'\r\n\r\nimport React, {Component} from 'react';\r\nimport Steps from 'rc-steps';\r\nimport SelectInternship from \"./Steps/SelectInternship\";\r\nimport SelectDateInternship from \"./Steps/SelectDateInternship\";\r\nimport SelectTutor from \"./Steps/SelectTutor\";\r\nimport PersonalInfo from \"./Steps/PersonalInfo\";\r\nimport FillDownloadInternship from \"./Steps/FillDownloadInternship\";\r\nimport UploadInternship from \"./Steps/UploadInternship\";\r\nimport WaitConfirmation from \"./Steps/WaitConfirmation\";\r\nimport BreadcrumbItem from \"react-bootstrap/BreadcrumbItem\";\r\nimport Breadcrumb from \"react-bootstrap/Breadcrumb\";\r\nimport SelectTutorCompany from \"./Steps/SelectTutorCompany\";\r\n\r\n\r\n//icons\r\nimport {MdDone, MdLocationOn} from \"react-icons/md\";\r\n\r\n\r\nclass InternshipSteps extends Component {\r\n\r\n\r\n    state = {\r\n        currentStep: 0,\r\n        loadedData: false,\r\n\r\n        values: [],\r\n\r\n        steps: [\r\n            {\r\n                id: 0,\r\n                title: \"Praktikumsstelle Aussuchen\",\r\n                completed: true\r\n            },\r\n            {\r\n                id: 1,\r\n                title: \"Zeitraum angeben\",\r\n                object: null,\r\n                completed: false\r\n            },\r\n            {\r\n                id: 2,\r\n                title: \"Tutoren Schulen\",\r\n                object: null,\r\n                completed: false\r\n            },\r\n            {\r\n                id: 3,\r\n                title: \"Tutoren Firma\",\r\n                object: null,\r\n                completed: false\r\n            },\r\n            {\r\n                id: 4,\r\n                title: \"Persönliche Informationen\",\r\n                object: null,\r\n                completed: false\r\n            }, {\r\n                id: 5,\r\n                title: \"Praktikumsvertrag Download und Ausfüllen\",\r\n                object: null,\r\n                completed: false\r\n            }, {\r\n                id: 6,\r\n                title: \"Praktikumsvertrag Upload\",\r\n                object: null,\r\n                completed: false\r\n            }, {\r\n                id: 7,\r\n                title: \"Auf Bestätigung warten\",\r\n                object: null,\r\n                completed: false\r\n            }\r\n        ]\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadFromJson(this.props.match.params.id);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param key -> value to save object\r\n     * @param object -> value of selection\r\n     * @param step -> current step\r\n     */\r\n    setCompleted = (key, object, step) => {\r\n        let newValues = this.state.values;\r\n\r\n        newValues[key] = object;\r\n        newValues['state_id'] = this.state.currentStep + 1;\r\n\r\n        this.setState({values: newValues});\r\n\r\n        this.dataUpload(newValues);\r\n\r\n        if(step === \"forceNext\"){\r\n            this.onChange(this.state.currentStep + 1)\r\n            return;\r\n        }\r\n\r\n        if (step !== null) {\r\n            let steps = this.state.steps;\r\n            steps[step].completed = true;\r\n            this.setState({steps});\r\n            this.onChange(this.state.currentStep + 1)\r\n        }\r\n\r\n\r\n    };\r\n\r\n    loadFromJson(id) {\r\n        console.log(id)\r\n        const axios = require('axios');\r\n\r\n        let url = localStorage.getItem('url');\r\n\r\n        axios({\r\n            url: url + '?action=getInternshipById&id=' + id,\r\n        }).then((res) => {\r\n            console.log(url);\r\n            if (res.data.error === undefined) {\r\n                console.log(res)\r\n                this.setState({values: res.data});\r\n\r\n                let steps = this.state.steps;\r\n\r\n                steps.map(value => {\r\n                    if(res.data.state_id >= value.id){\r\n                        value.completed = true;\r\n                    }\r\n                });\r\n\r\n                this.setState({steps});\r\n                if(res.data.state_id == null){\r\n                    this.setState({currentStep: 0});\r\n                }else if (res.data.state_id < 7) {\r\n                    this.setState({currentStep: parseInt(res.data.state_id)});\r\n                } else if (res.data.state_id >= 7) {\r\n                    this.setState({currentStep: 6});\r\n                }\r\n\r\n                this.setState({loadedData: true});\r\n\r\n            } else {\r\n                console.error(\"ERROR LOADING DATA\")\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    setValues(k, v) {\r\n        this.setState(k, v);\r\n    }\r\n\r\n    onChange = currentStep => {\r\n        let lastStep = 0;\r\n\r\n        this.state.steps.map((k) => {\r\n            if (k.completed) {\r\n                lastStep = k;\r\n            }\r\n            return false;\r\n        });\r\n\r\n        if (lastStep.id + 1 > currentStep) {\r\n            this.setState({currentStep})\r\n        }\r\n\r\n\r\n    };\r\n\r\n    render() {\r\n        //stepper docs http://react-component.github.io/steps/examples/custom-svg-icon.html\r\n        return (\r\n            <div className=\"classViewContent bg-light\" style={{minWidth: 100}}>\r\n\r\n                <Breadcrumb className={'mb-3'}>\r\n                    <BreadcrumbItem href={'/loggedin'}>Klassenansicht</BreadcrumbItem>\r\n                    <BreadcrumbItem\r\n                        href={'/loggedin/Student/ClassOverview/internshipSteps'}\r\n                        active>Praktikumsschritte</BreadcrumbItem>\r\n                </Breadcrumb>\r\n\r\n                <div className={'overflow-auto'}>\r\n                    <Steps style={{color: 'black'}} labelPlacement=\"vertical\" onChange={this.onChange} current={this.state.currentStep}>\r\n                        {\r\n                            this.state.steps.map((s, k) => {\r\n                                if (k > this.state.currentStep) {\r\n                                    // eslint-disable-next-line eqeqeq\r\n                                }\r\n                                if (k === this.state.currentStep) {\r\n                                    return <Steps.Step style={{color: 'black'}}\r\n                                                       icon={<div style={{textAlign: 'center'}}>{k + 1}</div>} key={k}\r\n                                                       title={s.title}/>\r\n                                    return <Steps.Step icon={<MdLocationOn/>} key={k} title={s.title}/>\r\n                                } else {\r\n                                    return <Steps.Step key={k} icon={<MdDone/>} title={s.title}/>\r\n                                }\r\n                            })\r\n                        }\r\n                    </Steps>\r\n                </div>\r\n                {\r\n                    this.getStepComponent()\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    dataUpload = (obj) => {\r\n        const axios = require('axios');\r\n\r\n        let isoFromDate = null;\r\n        let isoToDate = null;\r\n\r\n        try {\r\n            isoFromDate = obj.from.getFullYear() + '-' + (obj.from.getMonth() + 1) + '-' + obj.from.getDate();\r\n            isoToDate = obj.to.getFullYear() + '-' + (obj.to.getMonth() + 1) + '-' + obj.to.getDate();\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n        const params = new URLSearchParams();\r\n        params.append(\"company_id\", obj.company_id);\r\n        params.append(\"from\", isoFromDate);\r\n        params.append(\"id\", obj.id);\r\n        params.append(\"rating\", obj.rating);\r\n        params.append(\"schoolclass_id\", obj.schoolclass_id);\r\n        params.append(\"state_id\", obj.state_id);\r\n        params.append(\"student_id\", obj.student_id);\r\n        params.append(\"to\", isoToDate);\r\n        params.append(\"tutor\", obj.tutor);\r\n        params.append(\"tutor_company_id\", obj.tutor_company_id);\r\n\r\n\r\n        let url = localStorage.getItem('url');\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url + '?action=internshipDataUpload',\r\n            data: params\r\n        }).then((res) => {\r\n            console.log(res)\r\n\r\n        })\r\n    };\r\n\r\n    /**\r\n     * returns the component for the current step\r\n     * @returns {null|*}\r\n     */\r\n    getStepComponent = () => {\r\n        if (this.state.loadedData) {\r\n            switch (this.state.currentStep) {\r\n                case 0: {\r\n                    return <SelectInternship default={this.state.values.company_id} setCompleted={this.setCompleted}/>\r\n                }\r\n                case 1: {\r\n                    return <SelectDateInternship default={{from: this.state.values.from, to: this.state.values.to}}\r\n                                                 setCompleted={this.setCompleted}/>\r\n                }\r\n                case 2: {\r\n                    return <SelectTutor default={this.state.values.tutor}  setCompleted={this.setCompleted}/>\r\n                }\r\n                case 3: {\r\n                    return <SelectTutorCompany default={this.state.values.tutor} companyId={this.state.values.company_id} setCompleted={this.setCompleted}/>\r\n                }\r\n                case 4: {\r\n                    return <PersonalInfo currentUser={this.props.currentUser} setCompleted={this.setCompleted}/>\r\n                }\r\n                case 5: {\r\n                    return <FillDownloadInternship values={this.state.values} setCompleted={this.setCompleted}/>\r\n                }\r\n                case 6: {\r\n                    return <UploadInternship setCompleted={this.setCompleted} values={this.state.values}/>\r\n                }\r\n                case 7: {\r\n                    return <WaitConfirmation setCompleted={this.setCompleted} values={this.state.values}/>\r\n                }\r\n                default: {\r\n                    return null\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default InternshipSteps;\r\n","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport './AdministrationStyle.css'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Axios from \"axios\";\r\n\r\nimport {Breadcrumb, BreadcrumbItem, ButtonToolbar, Card, Col, DropdownButton, DropdownItem, Row} from \"react-bootstrap\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass Administration extends Component {\r\n\r\n    state = {\r\n        show: false,\r\n        token: \"\",\r\n        data: null,\r\n        schoolClassData: null,\r\n        submitted: false,\r\n        redirect: \"\",\r\n        redirectToLink: false,\r\n        selecteditem: \"Alle\"\r\n    };\r\n\r\n\r\n    /**\r\n     * calling get all Specializations and all Classes from API when component did mount\r\n     */\r\n    componentDidMount() {\r\n        this.getAllSpecialization();\r\n        this.getAllClasses()\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.data) {\r\n            return <div/>;\r\n        }\r\n\r\n        if (this.state.redirectToLink !== false) {\r\n            console.log(<Redirect to={this.state.redirect}/>)\r\n            return <Redirect to={this.state.redirect}/>;\r\n        }\r\n        return (\r\n            <div className={'w-100 adminViewContent'}>\r\n\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem href={'/loggedin/Administration'} active>Administration</BreadcrumbItem>\r\n                </Breadcrumb>\r\n\r\n                <Row>\r\n                    <Col className={'m-5'}>\r\n                        <h1>Alle Klassen</h1>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <label>Filtern Nach: </label>\r\n                        <ButtonToolbar>\r\n                            {[DropdownButton].map((DropdownType, idx) => (\r\n                                <DropdownType\r\n                                    className=\"warning\"\r\n                                    title={this.state.selecteditem}\r\n                                    id={`dropdown-button-drop-${idx}`}\r\n                                    key={idx}\r\n                                    onSelect={this.getKeyFromSelected}\r\n                                >\r\n                                    {this.insertDataIntoDropdown()}\r\n                                </DropdownType>\r\n                            ))}\r\n                        </ButtonToolbar>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <div className={'p-1'}>\r\n                            <div id={\"classes\"}>\r\n                                {this.displayClasses()}\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * gets classes by school year\r\n     * @param schoolyear\r\n     * @param data\r\n     * @returns {[]}\r\n     */\r\n    getClassesInSchoolYear = (schoolyear, data) => {\r\n        let arr = [];\r\n\r\n        data.map((v) => {\r\n            if (v.schoolyear === schoolyear)\r\n                arr.push(v)\r\n        });\r\n\r\n        return arr;\r\n    };\r\n\r\n    /**\r\n     * creates card with avatars for each Class\r\n     * @returns {[]|*}\r\n     */\r\n    displayClasses = () => {\r\n        function hashCode(str) { // java String#hashCode\r\n            var hash = 0;\r\n            for (var i = 0; i < str.length; i++) {\r\n                hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n            }\r\n            return hash;\r\n        }\r\n\r\n        function rgbToHex(rgb) {\r\n            var hex = Number(rgb).toString(16);\r\n            if (hex.length < 2) {\r\n                hex = \"0\" + hex;\r\n            }\r\n            return hex\r\n        }\r\n\r\n        function intToRGB(i) {\r\n            var c = (i & 0x00FFFFFF)\r\n                .toString(16)\r\n                .toUpperCase();\r\n\r\n            return \"00000\".substring(0, 6 - c.length) + c;\r\n        }\r\n\r\n        function getRandomColor() {\r\n            var colors = []\r\n\r\n            colors.push(rgbToHex(255) + \"\" + rgbToHex(203) + \"\" + rgbToHex(0))\r\n            colors.push(rgbToHex(0) + \"\" + rgbToHex(48) + \"\" + rgbToHex(80))\r\n\r\n            return colors[Math.floor(Math.random() * colors.length)];\r\n        }\r\n\r\n        /**\r\n         * gets first of firstname and FirstChar of lastname\r\n         */\r\n        function firstCharAndLastChar(firstname, lastname) {\r\n            let firstChar = (firstname.substring(0, 1)).toUpperCase();\r\n            let lastChar = (lastname.substring(0, 1)).toUpperCase();\r\n            return firstChar + lastChar;\r\n        }\r\n\r\n        if (!this.state.schoolClassData) {\r\n            return <div/>\r\n        }\r\n\r\n        /**\r\n         * checks if firstname and lastname of teacher is undefinied\r\n         *\r\n         * if true\r\n         *      return a div with a Avatar with Max Muster(failsafe)\r\n         *  false\r\n         *      return a div with a Avatar with the firstname and lastname\r\n         *\r\n         *\r\n         * @param firstname\r\n         * @param lastname\r\n         * @returns {*}\r\n         */\r\n        function isTeacherUndefined(firstname, lastname) {\r\n            if (firstname === undefined || lastname === undefined) {\r\n                return (<div className={\"d-flex align-items-baseline\"}>\r\n                    <Avatar style={{backgroundColor: \"#\" + getRandomColor()}}>MM</Avatar>\r\n                    <div className={\"ml-2\"}>Max Muster</div>\r\n                </div>)\r\n            } else {\r\n                return (<div className={\"d-flex align-items-baseline\"}>\r\n                    <Avatar\r\n                        style={{backgroundColor: \"#\" + getRandomColor()}}>{firstCharAndLastChar(firstname, lastname)}</Avatar>\r\n                    <div className={\"ml-2\"}>{firstname + \" \" + lastname}</div>\r\n                </div>)\r\n            }\r\n        }\r\n\r\n        let toDisplay = [];\r\n\r\n        let classes = this.getSchoolYears(this.state.schoolClassData);\r\n\r\n        classes.map((value, key) => {\r\n            let classesInScoolyear = [];\r\n\r\n            this.getClassesInSchoolYear(value, this.state.schoolClassData).map(classInfo => {\r\n                classesInScoolyear.push(\r\n                    <Card bg={\"light\"} key={classInfo.id} className={\"m-2 w-25 text-center\"}\r\n                          onClick={() => this.openClassInfo(classInfo.id)}>\r\n                        <Card.Header>\r\n                            {isTeacherUndefined(classInfo.TeacherFirstName, classInfo.TeacherSurname)}\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <h3>{classInfo.name}</h3>\r\n                        </Card.Body>\r\n                    </Card>)\r\n            });\r\n\r\n            toDisplay.push(<Card key={key} className={\"my-2\"}> <Card.Header className={\"text-center\"}><h2>{value}</h2>\r\n            </Card.Header><Card.Body className={\"dividerList\"}>{classesInScoolyear}</Card.Body></Card>)\r\n\r\n\r\n        });\r\n\r\n        return toDisplay\r\n\r\n    };\r\n\r\n    /**\r\n     * returns the schoosyears of the handled object\r\n     * @param data\r\n     * @returns {[]}\r\n     */\r\n    getSchoolYears = (data) => {\r\n        let arr = [];\r\n\r\n        data.map((v) => {\r\n            if (!arr.includes(v.schoolyear))\r\n                arr.push(v.schoolyear)\r\n        });\r\n\r\n        return arr;\r\n\r\n    };\r\n\r\n    /**\r\n     * getAllClasses from the API\r\n     */\r\n    getAllClasses = () => {\r\n        const axios = require('axios');\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=getAllClasses\";\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            this.setState({schoolClassData: res.data});\r\n        })\r\n    };\r\n\r\n    /**\r\n     * get All Specializations from the API\r\n     */\r\n    getAllSpecialization = () => {\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=getAllSpecializations\";\r\n\r\n\r\n        Axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            res.data.push({\r\n                id: \"-1\",\r\n                description: \"Alle\"\r\n            });\r\n            this.setState({\r\n                data: res.data\r\n            });\r\n        })\r\n    };\r\n\r\n    /**\r\n     * getClass by the if\r\n     * @param id\r\n     */\r\n    getClassesByKey = (id) => {\r\n\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=getClassBySpecializationsId\";\r\n\r\n        let params = new URLSearchParams();\r\n        params.append('id', id);\r\n\r\n        const axios = require('axios');\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n            this.setState({schoolClassData: res.data});\r\n        })\r\n    };\r\n\r\n    /**\r\n     * gets  Classes By Specialization for dropdown\r\n     * if -1\r\n     *      gets All Classes\r\n     *  else\r\n     *      gets Classes By SpecializationID\r\n     * @param key\r\n     */\r\n    getKeyFromSelected = (key) => {\r\n        if (key === \"-1\") {\r\n            this.getAllClasses();\r\n            this.setState({\r\n                selecteditem: this.state.data[this.state.data.length - 1].description\r\n            })\r\n        } else {\r\n            for (let i = 0; i < this.state.data.length; i++) {\r\n                if (key == this.state.data[i].id) {\r\n                    this.setState({\r\n                        selecteditem: this.state.data[i].description\r\n                    })\r\n                }\r\n            }\r\n            this.getClassesByKey(key);\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * inserts specilization into the dropdown\r\n     * @returns {*}\r\n     */\r\n    insertDataIntoDropdown = () => {\r\n        if (this.state.data != null) {\r\n            let specializations = this.state.data;\r\n            return (\r\n                specializations.map((v) => {\r\n                    return (\r\n                        <DropdownItem key={v.id} eventKey={v.id}>{v.description}</DropdownItem>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    };\r\n\r\n    /**\r\n     * opens the Class that got clicked\r\n     * @param id\r\n     */\r\n    openClassInfo = (id) => {\r\n        this.setState({\r\n            redirect: \"./ClassInformation/\" + id,\r\n            redirectToLink: true\r\n        })\r\n    };\r\n}\r\n\r\n\r\nexport default Administration;\r\n","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport Select from 'react-select';\r\nimport {Breadcrumb, BreadcrumbItem, Button, Col, Form, Row} from 'react-bootstrap';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {Snackbar} from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\n\r\nclass InsertNewClass extends Component {\r\n    state = {\r\n        selectedTeacher: \"\",\r\n        selectedSpecialization: \"\",\r\n        generateToken: \"\",\r\n        className: \"\",\r\n        schoolyear: \"\",\r\n        teachers: [],\r\n        specializations: [],\r\n        redirect: \"\",\r\n        redirectToLink: false,\r\n        errorIsOpen: false,\r\n        dialogIsOpen: false,\r\n        new_Specialization: \"\",\r\n        errorMessage: 'Bitte kontrollieren sie ob alle Felder ausgefüllt sind!'\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        this.getAllTeachers();\r\n        this.getAllSpecializations();\r\n        this.generateToken();\r\n    }\r\n\r\n    handleChangeTeachers = (selectedTeacher) => {\r\n        this.setState(\r\n            {selectedTeacher})\r\n\r\n    };\r\n\r\n    handleChangeSpecialization = (selectedSpecialization) => {\r\n        this.setState({selectedSpecialization});\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    validateForm = () => {\r\n        var a = this.state.schoolyear;\r\n        var b = this.state.className;\r\n        var c = this.state.selectedSpecialization.value;\r\n        var d = this.state.selectedTeacher.value;\r\n        var e = this.state.generateToken;\r\n        var temp = a.split(\"-\");\r\n        console.log(temp)\r\n        if (!temp && temp.length !== 2 && temp[0].length !== 4 && temp[1].length !== 4) {\r\n            this.setState({\r\n                errorIsOpen: true\r\n            })\r\n            return false;\r\n        }\r\n\r\n        if (!a || !b || !c || !d || !e) {\r\n            this.setState({\r\n                errorIsOpen: true\r\n            })\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        console.log(\"e\")\r\n        e.preventDefault();\r\n        if (this.validateForm()) {\r\n\r\n            const axios = require('axios');\r\n\r\n            let url = localStorage.getItem('url');\r\n\r\n            url += '?action=createClass';\r\n\r\n           const params = new URLSearchParams();\r\n            params.append(\"schoolyear\", this.state.schoolyear);\r\n            params.append(\"name\", this.state.className);\r\n            params.append(\"token\", this.state.generateToken);\r\n            params.append(\"specialization\", this.state.selectedSpecialization.value);\r\n            params.append(\"classteacher_id\", this.state.selectedTeacher.value);\r\n\r\n            axios({\r\n                method: 'post',\r\n                url: url,\r\n                data: params\r\n            }).then((res) => {\r\n                console.log(res.data)\r\n                if (res.data === \"successful\") {\r\n                    this.toAdministration();\r\n                } else {\r\n                    this.setState({\r\n                        errorMessage: \"Etwas ist schiefgelaufen :/\"\r\n                    })\r\n                }\r\n            });\r\n        }\r\n    }\r\n    toAdministration = () => {\r\n        this.setState({\r\n            redirect: \"/loggedin/Administration/\",\r\n            redirectToLink: true\r\n        })\r\n    };\r\n    toNewClassTeacher = () => {\r\n        this.setState({\r\n            redirect: \"/loggedin/Administration/NewSchoolperson\",\r\n            redirectToLink: true\r\n        })\r\n    };\r\n    handleClose = () => {\r\n        this.setState({\r\n            errorIsOpen: false\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.redirectToLink !== false) {\r\n            return <Redirect to={this.state.redirect}/>;\r\n        }\r\n        return (\r\n\r\n            <div className={'w-100 adminViewContent'}>\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem href={'/loggedin/Administration'}>Administration</BreadcrumbItem>\r\n                    <BreadcrumbItem href={'/loggedin/Administration/newClass'} active>Klasse erstellen</BreadcrumbItem>\r\n                </Breadcrumb>\r\n\r\n                <Row>\r\n                    <Col className={'m-5'}>\r\n                        <h1>Klasse Hinzufügen</h1>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Snackbar open={this.state.errorIsOpen} autoHideDuration={10000} onClose={() => {\r\n                    this.setState({errorIsOpen: false})\r\n                }}>\r\n\r\n                    <Alert severity={'error'} onClose={this.handleClose}>\r\n                        {this.state.errorMessage}\r\n                    </Alert>\r\n                </Snackbar>\r\n\r\n                <Dialog open={this.state.dialogIsOpen} onClose={this.handleDialogClose}\r\n                        aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">Fachrichtung</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Geben sie im untenstehenden Textfeld die neue Fachrichtung ein!\r\n                        </DialogContentText>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"specializations\"\r\n                            label=\"Fachrichtung\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            onChange={this.handleNewSpec}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleDialogClose} color=\"primary\">\r\n                            Abbrechen\r\n                        </Button>\r\n                        <Button onClick={this.handleDialogSave} color=\"primary\">\r\n                            Speichern\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <form name={\"newClass\"} onSubmit={this.handleSubmit}>\r\n                    <Col className={'justify-content-md-center classAddingInformation'}>\r\n                        <Row className={'justify-content-md-center'}>\r\n                            <input className={'w-50 form-control'} type=\"text\" name={'className'} id={'className'}\r\n                                   placeholder=\"Klasse\" value={this.state.className} onChange={this.handleChange}/>\r\n                        </Row>\r\n                        <Row className={'justify-content-md-center'}>\r\n                            <input className={'w-50 form-control'} type=\"text\" name={'schoolyear'} id={'schoolyear'}\r\n                                   placeholder=\"Schuljahr\" value={this.state.schoolyear} onChange={this.handleChange}\r\n                                   required pattern={\"[0-9]{4}[-][0-9]{4}\"} title={\"2020-2021\"}\r\n                            />\r\n                        </Row>\r\n                        <Row className={'justify-content-md-center'}>\r\n                            <div className={\"w-50\"}>\r\n                                <Form.Label>Lehrer</Form.Label>\r\n                                <div className={\"d-flex justify-content-between\"}>\r\n                                    <div className={\"w-75 mr-2\"}>\r\n                                        <Select\r\n                                            options={this.state.teachers}\r\n                                            value={this.state.selectedTeacher}\r\n                                            onChange={this.handleChangeTeachers}\r\n                                            placeholder={\"Klassenlehrer\"}\r\n                                            name={\"newClass\"}\r\n                                        />\r\n                                    </div>\r\n                                    <div className={\"ml-2 w-25\"}>\r\n                                        <Button className={\"btn btn-primary\"} onClick={() => this.toNewClassTeacher()}>Neuer\r\n                                            Lehrer</Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Row>\r\n                        <Row className={'justify-content-md-center'}>\r\n                            <div className={\"w-50\"}>\r\n                                <Form.Label>Fachrichtung</Form.Label>\r\n                                <div className={\"d-flex justify-content-between\"}>\r\n                                    <div className={\"w-75 mr-2\"}>\r\n                                        <Select\r\n                                            options={this.state.specializations}\r\n                                            value={this.state.selectedSpecialization}\r\n                                            onChange={this.handleChangeSpecialization}\r\n                                            placeholder={\"Fachrichtung\"}\r\n                                            name={\"selectedSpecialization\"}\r\n                                        />\r\n                                    </div>\r\n                                    <div className={\"ml-2 w-25\"}>\r\n                                        <Button className={\"btn btn-primary\"} onClick={() => this.handleDialogOpen()}>Neuer\r\n                                            Fachrichtung</Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Row>\r\n                        <Row className={'justify-content-md-center'}>\r\n                            <div className={'justify-content-md-center w-50'}>\r\n                                <div className={\"d-flex justify-content-between\"}>\r\n                                    <input className={'w-75 form-control'} type=\"text\" name={\"token\"}\r\n                                           placeholder=\"Token\"\r\n                                           value={this.state.generateToken} disabled/>\r\n                                    <Button className={\"btn btn-primary\"} onClick={() => this.generateToken()}>Token\r\n                                        generieren</Button>\r\n                                </div>\r\n                            </div>\r\n                        </Row>\r\n                        <Row className={'justify-content-md-center'}>\r\n                            <button type=\"submit\" className={'btn btn-primary'}>Klasse erstellen</button>\r\n                        </Row>\r\n\r\n                    </Col>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleDialogClose = () => {\r\n        this.setState({\r\n            dialogIsOpen: false\r\n        })\r\n    };\r\n\r\n\r\n    handleDialogSave = () => {\r\n        this.setState({\r\n            dialogIsOpen: false\r\n        });\r\n        let arr_specializations = this.state.specializations;\r\n        var newSpecArr = {value: this.state.new_Specialization, label: this.state.new_Specialization};\r\n        arr_specializations.push({\r\n            value: this.state.new_Specialization, label: this.state.new_Specialization\r\n        });\r\n        console.log(arr_specializations)\r\n        this.setState({\r\n            selectedSpecialization: newSpecArr,\r\n            specializations: arr_specializations\r\n        })\r\n    };\r\n\r\n    handleDialogOpen = () => {\r\n        this.setState({\r\n            dialogIsOpen: true\r\n        })\r\n    };\r\n    handleNewSpec = (e) => {\r\n        this.setState({\r\n            new_Specialization: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n    generateToken = () => {\r\n        const axios = require('axios');\r\n        let url = localStorage.getItem('url');\r\n        url += '?action=getCreatedToken';\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            this.setState({\r\n                generateToken: res.data\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n\r\n    getAllSpecializations = () => {\r\n        const axios = require('axios');\r\n        let url = localStorage.getItem('url');\r\n\r\n        url += '?action=getAllSpecializations';\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            console.log(res.data)\r\n            const newSpecializations = res.data.map(function (row) {\r\n                return {value: row.id, label: row.description}\r\n            });\r\n            this.setState({specializations: newSpecializations});\r\n        });\r\n\r\n    }\r\n    getAllTeachers = () => {\r\n        const axios = require('axios');\r\n\r\n        let url = localStorage.getItem('url');\r\n\r\n        url += '?action=getAllTeachers';\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            console.log(res.data)\r\n            const newteachers = res.data.map(function (row) {\r\n                let fullname = row.firstname + \" \" + row.surname;\r\n                return {value: row.id, label: fullname}\r\n            });\r\n            this.setState({teachers: newteachers});\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport default InsertNewClass;\r\n","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Card, Row} from \"react-bootstrap\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Col from \"react-bootstrap/Col\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport se from \"moment/locale/se\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport BlockIcon from \"@material-ui/icons/Block\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nclass ClassInformation extends Component {\r\n    state = {\r\n        redirect: \"\",\r\n        redirectToLink: false,\r\n        class_id: null,\r\n        confirmOpen: false\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        console.log(\"hey\")\r\n        this.getClassInfo(this.props.match.params.id)\r\n        this.setState({\r\n            class_id: this.props.match.params.id\r\n        });\r\n        this.getAllStudents(this.props.match.params.id);\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirectToLink !== false) {\r\n            console.log(<Redirect to={this.state.redirect}/>)\r\n            return <Redirect to={this.state.redirect}/>;\r\n        }\r\n\r\n        return (\r\n            <div className={'adminViewContent bg-light'}>\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem href={'/loggedin/Administration'}>Administration</BreadcrumbItem>\r\n                    <BreadcrumbItem href={'/loggedin/Administration/ClassInformation/'}\r\n                                    active={'active'}>ClassInformation</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                {\r\n                    this.showClassInfo()\r\n                }\r\n                {\r\n                    this.showAllStudents()\r\n                }\r\n                <Dialog\r\n                    open={this.state.confirmOpen}\r\n                    onClose={this.setClose}\r\n                    aria-labelledby=\"confirm-dialog\"\r\n                >\r\n                    <DialogTitle id=\"confirm-dialog\">{\"Klasse löschen?\"}</DialogTitle>\r\n                    <DialogContent>Sind Sie sich sicher, diese Klasse zu löschen? </DialogContent>\r\n                    <DialogActions>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            onClick={this.setClose}\r\n                            className={\"bg-dark text-white\"}\r\n                        >\r\n                            Nein\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            onClick={this.deleteClass}\r\n                            className={\"bg-primary\"}\r\n                        >\r\n                            Ja\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    showAllStudents = () => {\r\n        if (this.state.data) {\r\n            return (\r\n                <div>\r\n                    <Card>\r\n                        <Card.Header>Schüler:</Card.Header>\r\n                        <Card.Body>\r\n                            <div className={'d-flex flex-row'}>\r\n                                {\r\n                                    this.state.data.map((v, k) => {\r\n                                        return (\r\n                                            <Card className={\"m-2 p-2 w-25 \"} key={k}\r\n                                                  onClick={() => this.openStudentInfo(v.id)}>\r\n                                                <div>\r\n                                                    <span className={'text-secondary'}>Name:</span>\r\n                                                    <span className={'text-highlited'}> {v.firstname} {v.surname}</span>\r\n                                                </div>\r\n                                            </Card>\r\n                                        )\r\n\r\n                                    })\r\n\r\n                                }\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n    showClassInfo = () => {\r\n\r\n        function hashCode(str) {\r\n            var hash = 0;\r\n            for (var i = 0; i < str.length; i++) {\r\n                hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n            }\r\n            return hash;\r\n        }\r\n\r\n        function intToRGB(i) {\r\n            var c = (i & 0x00FFFFFF)\r\n                .toString(16)\r\n                .toUpperCase();\r\n\r\n            return \"00000\".substring(0, 6 - c.length) + c;\r\n        }\r\n\r\n        //gets first of firstname and FirstChar of lastname\r\n        function firstCharAndLastChar(firstname, lastname) {\r\n            let firstChar = (firstname.substring(0, 1)).toUpperCase();\r\n            let lastChar = (lastname.substring(0, 1)).toUpperCase();\r\n            return firstChar + lastChar;\r\n        }\r\n\r\n        function isTeacherUndefined(firstname, lastname) {\r\n            if (firstname === undefined || lastname === undefined) {\r\n                return (<div className={\"d-flex align-items-center\"}>\r\n                    <Avatar style={{backgroundColor: \"#\" + intToRGB(hashCode(\"Max muster\"))}}>MM</Avatar>\r\n                    <div className={\"ml-2\"}>Max Mustermann</div>\r\n                </div>)\r\n            } else {\r\n                return (<div className={\"d-flex align-items-center\"}>\r\n                    <Avatar\r\n                        style={{backgroundColor: \"#\" + intToRGB(hashCode(firstname + \" \" + lastname))}}>{firstCharAndLastChar(firstname, lastname)}</Avatar>\r\n                    <div className={\"ml-2\"}>{firstname + \" \" + lastname}</div>\r\n                </div>)\r\n            }\r\n        }\r\n\r\n\r\n        if (this.state.classInfo)\r\n            return (\r\n                <div>\r\n                    <h1>Informationen über die Klasse: {this.state.classInfo.name}</h1>\r\n\r\n                    <Row className={\"m-3\"}>\r\n                        <Col>\r\n                            <Row>\r\n                                <div style={{'margin': '0px'}} className={'text-secondary'}>Klassenlehrer:</div>\r\n                            </Row>\r\n                            <Row>\r\n                                {isTeacherUndefined(this.state.classInfo.TeacherFirstName, this.state.classInfo.TeacherSurname)}\r\n                            </Row>\r\n                        </Col>\r\n                        <Col>\r\n                            <Row>\r\n                                <div style={{'margin': '0px'}} className={'text-secondary'}>Token</div>\r\n                            </Row>\r\n                            <Row>\r\n                                <div className={'p-2 ml-2'}>{this.state.classInfo.token}</div>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col>\r\n                            <Row>\r\n                                <div style={{'margin': '0px'}} className={'text-secondary'}>Schuljahr</div>\r\n                            </Row>\r\n                            <Row>\r\n                                <div>{this.state.classInfo.schoolyear}</div>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col>\r\n                            <Row>\r\n                                <div style={{'margin': '0px'}}\r\n                                     className={'text-secondary'}>{this.deactive_activated(this.state.classInfo.active)}</div>\r\n                            </Row>\r\n                            <Row>\r\n                                <div className={\"ml-4\"}>{this.block_unblock(this.state.classInfo.active)}</div>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col>\r\n                            <Row>\r\n                                <div style={{'margin': '0px'}} className={'text-secondary'}>Klasse löschen</div>\r\n                            </Row>\r\n                            <Row onClick={() => this.setConfirmation()}>\r\n                                <div style={{'marginLeft': '2rem'}}><DeleteIcon/></div>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div>\r\n            )\r\n    };\r\n\r\n    setClose = () => {\r\n        this.setState({\r\n            confirmOpen: false\r\n        })\r\n    }\r\n    block_unblock = (isEnabled) => {\r\n        console.log(isEnabled)\r\n        if (isEnabled == 0) {\r\n            return (<DoneIcon onClick={this.blockClass}/>);\r\n        } else {\r\n            return (<BlockIcon onClick={this.blockClass}/>);\r\n        }\r\n    }\r\n    blockClass = () => {\r\n\r\n        const axios = require('axios');\r\n        let url = localStorage.getItem('url');\r\n        url += '?action=invertEnabledSchoolclass';\r\n\r\n        let params = new URLSearchParams();\r\n        params.append(\"id\", this.state.class_id);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n            console.log(res.data)\r\n            this.setState({classInfo: res.data})\r\n        })\r\n    }\r\n\r\n    deactive_activated = (isEnabled) => {\r\n        if (isEnabled == 1) {\r\n            return (\"Deaktivieren\");\r\n        } else {\r\n            return (\"Aktivieren\");\r\n        }\r\n    }\r\n\r\n    deleteClass = () => {\r\n        const axios = require('axios');\r\n\r\n        let url = localStorage.getItem('url');\r\n        url += '?action=deleteSchoolclass';\r\n\r\n        let params = new URLSearchParams();\r\n        params.append('schoolclass_id', this.state.class_id);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n            this.toAdministration();\r\n            console.log(res);\r\n        })\r\n        this.setClose();\r\n    }\r\n    toAdministration = () => {\r\n        this.setState({\r\n            redirect: \"/loggedin/Administration/\",\r\n            redirectToLink: true\r\n        })\r\n    };\r\n    setConfirmation = () => {\r\n        this.setState({\r\n            confirmOpen: true\r\n        })\r\n    }\r\n\r\n    getAllStudents = (id) => {\r\n        const axios = require('axios');\r\n\r\n        let url = localStorage.getItem('url');\r\n\r\n        url += '?action=getStudentByClass';\r\n\r\n        let params = new URLSearchParams();\r\n        params.append('id', id);\r\n\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n            console.log(res);\r\n            this.setState({data: res.data})\r\n        })\r\n    };\r\n\r\n\r\n    getClassInfo = (id) => {\r\n        console.log(id)\r\n        const axios = require('axios');\r\n\r\n        let url = localStorage.getItem('url');\r\n        url += '?action=getClassById';\r\n\r\n        let params = new URLSearchParams();\r\n        params.append('id', id);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n\r\n            console.log(\"res\", res);\r\n            this.setState({classInfo: res.data})\r\n        })\r\n    };\r\n\r\n    openStudentInfo = (id) => {\r\n\r\n        this.setState({\r\n            redirect: null\r\n        })\r\n\r\n        this.setState({\r\n            redirect: \"/loggedin/Administration/ClassInformation/\" + this.state.class_id + \"/StudentInformation/\" + id,\r\n            redirectToLink: true\r\n        })\r\n\r\n        // this.setState({\r\n        //     redirect: \"./StudentInformation/\" + id,\r\n        //     redirectToLink: true\r\n        // })\r\n    };\r\n\r\n}\r\n\r\n\r\nexport default ClassInformation;\r\n","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport {Col, Row} from \"react-bootstrap\";\r\n\r\nimport logo from '../img/logos/Lbs/LogoVertical.png'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Footer extends Component {\r\n    state = {\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"w-100 p-4 mt-2 d-flex justify-stretch bg-light  align-items-center \"}>\r\n                    <div className={\"flex-fill\"}>\r\n                        <Row>\r\n\r\n                            <Col className={\" d-flex\"}><img width={100} src={logo} alt=\"Logo\"/></Col>\r\n                        </Row>\r\n                    </div>\r\n                    <div className={\"text-center flex-fill\"}>\r\n                        <p>Dies ist ein Projekt der 4. Fachrichtung Informatik der Landesberufsschule für Handwerk und\r\n                            Industrie Bozen</p>\r\n                        <a href={\"http://www.bozen.berufsschule.it/\"}>Zur Schulseite</a>\r\n                    </div>\r\n                    <div className={\"text-right flex-fill\"}>\r\n                        <div className={\"m-1\"}>(C) Praktikumsfinder 2020</div>\r\n                        <Link to={\"/impressum\"}>Zum Impressum </Link>\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {Snackbar} from \"@material-ui/core\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nclass NewCompany extends Component {\r\n    state = {\r\n        redirect: \"\",\r\n        redirectToLink: false,\r\n        errorIsOpen: false,\r\n        generateToken: \"\",\r\n        dialogIsOpen: false,\r\n        selectedOptionDistrict: null,\r\n        selectedOptionSpecializations: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.generateToken();\r\n        this.getAllDistricts();\r\n        this.getAllSpecialization();\r\n    }\r\n\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n    handleClose = () => {\r\n        this.setState({\r\n            errorIsOpen: false\r\n        })\r\n    };\r\n    getAllSpecialization = () => {\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=getAllRoles\";\r\n\r\n        const axios = require('axios');\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            const newspecializations = res.data.map(function (row) {\r\n                return {value: row.id, label: row.description}\r\n            });\r\n            this.setState({\r\n\r\n                specializations: newspecializations\r\n            });\r\n        })\r\n\r\n    };\r\n    getAllDistricts = () => {\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=getAllDistricts\";\r\n\r\n        const axios = require('axios');\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            const newdistricts = res.data.map(function (row) {\r\n                return {value: row.id, label: row.name}\r\n            });\r\n            this.setState({districts: newdistricts});\r\n\r\n        });\r\n    };\r\n    validateForm = () => {\r\n        console.log(this.state)\r\n        let a = this.state.address;\r\n        let b = this.state.email;\r\n        let c = this.state.name;\r\n        let d = this.state.phonenumber;\r\n        let e = this.state.cap;\r\n        let f = this.state.selectedOptionDistrict;\r\n        let g = this.state.selectedOptionSpecializations;\r\n\r\n\r\n        if (!a || !b || !c || !d || !e || !f || !g) {\r\n            this.setState({\r\n                errorIsOpen: true\r\n            });\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n    handleChangeDistricts = selectedOption => {\r\n        this.setState(\r\n            {selectedOptionDistrict: selectedOption}\r\n        );\r\n    };\r\n    handleChangeSpecializations = selectedOption => {\r\n        this.setState(\r\n            {selectedOptionSpecializations: selectedOption}\r\n        );\r\n    };\r\n\r\n\r\n    render() {\r\n        if (this.state.redirectToLink !== false) {\r\n            return <Redirect to={this.state.redirect}/>;\r\n        }\r\n        return (\r\n            <div className={'adminViewContent bg-light'}>\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem href={'/loggedin/Administration'}>Administration</BreadcrumbItem>\r\n                    <BreadcrumbItem href={'/loggedin/Administration/newCompany'} active>Unternehmen\r\n                        erstellen</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <Row>\r\n                    <Col className={'m-5'}>\r\n                        <h1>Unternehmen erstellen</h1>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n                <Snackbar open={this.state.errorIsOpen} autoHideDuration={10000} onClose={() => {\r\n                    this.setState({errorIsOpen: false});\r\n                }}>\r\n\r\n                    <Alert severity={'error'} onClose={this.handleClose}>\r\n                        Bitte kontrollieren sie ob alle Felder ausgefüllt sind!\r\n                    </Alert>\r\n                </Snackbar>\r\n                <div>\r\n                    <Dialog open={this.state.dialogIsOpen} onClose={this.handleDialogClose}\r\n                            aria-labelledby=\"form-dialog-title\">\r\n                        <DialogTitle id=\"form-dialog-title\">Neuer Bezirk</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>\r\n                                Geben sie im untenstehenden Textfeld den neuen Bezirk ein!\r\n                            </DialogContentText>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"district\"\r\n                                label=\"Bezirk\"\r\n                                type=\"text\"\r\n                                fullWidth\r\n                                onChange={this.handleNewDistrict}\r\n                            />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleDialogClose} color=\"primary\">\r\n                                Abbrechen\r\n                            </Button>\r\n                            <Button onClick={this.handleDialogSave} color=\"primary\">\r\n                                Speichern\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    <Dialog open={this.state.dialogNewSpecIsOpen} onClose={this.handleDialogCloseSpec}\r\n                            aria-labelledby=\"form-dialog-title\">\r\n                        <DialogTitle id=\"form-dialog-title\">Fachrichtung</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>\r\n                                Geben sie im untenstehenden Textfeld die neue Fachrichtung ein!\r\n                            </DialogContentText>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"specializations\"\r\n                                label=\"Fachrichtung\"\r\n                                type=\"text\"\r\n                                fullWidth\r\n                                onChange={this.handleNewSpec}\r\n                            />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleDialogCloseSpec} color=\"primary\">\r\n                                Abbrechen\r\n                            </Button>\r\n                            <Button onClick={this.handleDialogSaveSpec} color=\"primary\">\r\n                                Speichern\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n\r\n                </div>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Row className={'justify-content-md-center'}>\r\n                        <Form.Group controlId=\"formUsername\" className={\"mt-3 w-50\"}>\r\n                            <Form.Label>Namen des Unternehmens</Form.Label>\r\n                            <Form.Control type={\"text\"} name={\"name\"}\r\n                                          onChange={this.onChange} required/>\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className={'justify-content-md-center'}>\r\n                        <Form.Group controlId=\"formCompanyEmail\" className={\"w-50\"}>\r\n                            <Form.Label>Email des Unternehmens</Form.Label>\r\n                            <Form.Control type={\"email\"} name={\"email\"}\r\n                                          onChange={this.onChange} required/>\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className={'justify-content-md-center'}>\r\n                        <Form.Group controlId=\"formPhonenumber\" className={\"w-50\"}>\r\n                            <Form.Label>Telefonnummer des Unternehmens</Form.Label>\r\n                            <Form.Control type={\"text\"} name={\"phonenumber\"}\r\n                                          onChange={this.onChange} required>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className={'justify-content-md-center'}>\r\n                        <Form.Group controlId=\"formAddress\" className={\"w-50\"}>\r\n                            <Form.Label>Adresse</Form.Label>\r\n                            <Form.Control type={\"text\"} name={\"address\"}\r\n                                          onChange={this.onChange} required>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className={'justify-content-md-center'}>\r\n                        <Form.Group controlId=\"formCap\" className={\"w-50\"}>\r\n                            <Form.Label>PLZ</Form.Label>\r\n                            <Form.Control type={\"text\"} name={\"cap\"}\r\n                                          onChange={this.onChange} required\r\n                                          pattern={\"[0-9]{5,6}\"}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className={'justify-content-md-center'}>\r\n                        <div className={\"w-50\"}>\r\n                            <Form.Label>Fachrichtung</Form.Label>\r\n                            <div className={\"d-flex justify-content-between\"}>\r\n                                <div className={\"w-75 mr-2\"}>\r\n                                    <Select\r\n                                        options={this.state.specializations}\r\n                                        value={this.state.selectedOptionSpecializations}\r\n                                        onChange={this.handleChangeSpecializations}\r\n                                        placeholder={\"Fachrichtung\"}\r\n                                        name={\"selectedSpecialization\"}\r\n                                    />\r\n                                </div>\r\n                                <div className={\"ml-2 w-25\"}>\r\n                                    <Button className={\"btn btn-primary\"} onClick={() => this.handleDialogOpenSpec()}>Neuer\r\n                                        Fachrichtung</Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Row>\r\n                    <Row className={'justify-content-md-center'}>\r\n                        <div className={\"w-50\"}>\r\n                            <Form.Label>Berzirke</Form.Label>\r\n                            <div className={\"d-flex justify-content-between\"}>\r\n                                <div className={\"w-75 mr-2\"}>\r\n                                    <Select\r\n                                        options={this.state.districts}\r\n                                        value={this.state.selectedOptionDistrict}\r\n                                        onChange={this.handleChangeDistricts}\r\n                                        placeholder={\"Wählen sie hier den Bezirk aus!\"}\r\n                                    />\r\n                                </div>\r\n                                <div className={\"ml-2 w-25\"}>\r\n                                    <Button className={\"btn btn-primary\"} onClick={() => this.handleDialogOpen()}>Neuer\r\n                                        Bezirk</Button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Row>\r\n                    <Row className={'justify-content-md-center'}>\r\n                        <Form.Group controlId=\"formToken\" className={\"w-50\"}>\r\n\r\n                            <Form.Label>Token</Form.Label>\r\n                            <div className={\"d-flex justify-content-between\"}>\r\n                                <div className={\"w-75 mr-2\"}>\r\n                                    <Form.Control type={\"text\"} name={\"password\"}\r\n                                                  disabled required defaultValue={this.state.generateToken}\r\n                                    >\r\n                                    </Form.Control>\r\n                                </div>\r\n                                <div className={\"ml-2 w-25\"}>\r\n                                    <Button className={\"btn btn-primary\"} onClick={() => this.generateToken()}>Token\r\n                                        generieren</Button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className={'justify-content-md-center'}>\r\n                        <Button className={\"m-2\"} variant=\"success\" type=\"submit\">\r\n                            Erstellen\r\n                        </Button>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    generateToken = () => {\r\n        const axios = require('axios');\r\n        let url = localStorage.getItem('url');\r\n        url += '?action=getCreatedToken';\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            this.setState({\r\n                generateToken: res.data\r\n            });\r\n        });\r\n\r\n    };\r\n    toAdministration = () => {\r\n        this.setState({\r\n            redirect: \"/loggedin/Administration\",\r\n            redirectToLink: true\r\n        });\r\n    };\r\n    handleDialogClose = () => {\r\n        this.setState({\r\n            dialogIsOpen: false\r\n        })\r\n    };\r\n\r\n    handleDialogSave = () => {\r\n        this.setState({\r\n            dialogIsOpen: false\r\n        });\r\n        const newDistrictArr = {value: this.state.new_District, label: this.state.new_District};\r\n        this.state.districts.push({\r\n            value: this.state.new_District, label: this.state.new_District\r\n        });\r\n        this.setState({\r\n            selectedOptionDistrict: newDistrictArr\r\n        })\r\n    };\r\n\r\n    handleDialogOpen = () => {\r\n        this.setState({\r\n            dialogIsOpen: true\r\n        })\r\n    };\r\n\r\n    handleDialogOpenSpec = () => {\r\n        this.setState({\r\n            dialogNewSpecIsOpen: true\r\n        })\r\n    };\r\n\r\n    handleDialogCloseSpec = () => {\r\n        this.setState({\r\n            dialogNewSpecIsOpen: false\r\n        })\r\n    };\r\n\r\n    handleDialogSaveSpec = () => {\r\n        this.setState({\r\n            dialogNewSpecIsOpen: false\r\n        });\r\n        let arr_specializations = this.state.specializations;\r\n        var newSpecArr = {value: this.state.new_Specialization, label: this.state.new_Specialization};\r\n        arr_specializations.push({\r\n            value: this.state.new_Specialization, label: this.state.new_Specialization\r\n        });\r\n        console.log(arr_specializations)\r\n        this.setState({\r\n            selectedOptionSpecializations: newSpecArr,\r\n            specializations: arr_specializations\r\n        })\r\n    };\r\n    handleNewSpec = (e) => {\r\n        this.setState({\r\n            new_Specialization: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n    handleNewDistrict = (e) => {\r\n        this.setState({\r\n            new_District: e.target.value\r\n        });\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        if (this.validateForm()) {\r\n            let url = localStorage.getItem('url');\r\n            let params = new URLSearchParams();\r\n\r\n            params.append('address', this.state.address);\r\n            params.append('email', this.state.email);\r\n            params.append('companyname', this.state.name);\r\n            params.append('phonenumber', this.state.phonenumber);\r\n            params.append('token', this.state.generateToken);\r\n            params.append('cap', this.state.cap);\r\n            params.append('districtname', this.state.selectedOptionDistrict.label);\r\n            params.append('specialization', this.state.selectedOptionSpecializations.value);\r\n\r\n\r\n            const axios = require('axios');\r\n            url += '?action=createCompany';\r\n\r\n            axios({\r\n                method: 'post',\r\n                url: url,\r\n                data: params\r\n            }).then((res) => {\r\n                console.log(res.data);\r\n                this.toAdministration();\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default NewCompany;","import React, {Component} from 'react';\r\nimport {Form, Row} from \"react-bootstrap\";\r\n\r\nclass NewCompanyTutor extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Row className={'justify-content-md-center ml-3 mr-3'}>\r\n                    <Form.Group controlId=\"firstname\" className={\"mt-3 w-75\"}>\r\n                        <Form.Label>Vorname</Form.Label>\r\n                        <Form.Control type={\"text\"} name={\"firstname\"} value={this.props.firstname}\r\n                                      onChange={this.props.handleChange} required/>\r\n                    </Form.Group>\r\n                </Row>\r\n                <Row className={'justify-content-md-center ml-3 mr-3'}>\r\n                    <Form.Group controlId=\"surname\" className={\"mt-3 w-75\"}>\r\n                        <Form.Label>Nachname</Form.Label>\r\n                        <Form.Control type={\"text\"} name={\"surname\"} value={this.props.surname}\r\n                                      onChange={this.props.handleChange} required/>\r\n                    </Form.Group>\r\n                </Row>\r\n                <Row className={'justify-content-md-center ml-3 mr-3'}>\r\n                    <Form.Group controlId=\"email\" className={\"mt-3 w-75\"}>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type={\"email\"} name={\"email\"} value={this.props.email}\r\n                                      title={''}\r\n                                      onChange={this.props.handleChange} required/>\r\n                    </Form.Group>\r\n                </Row>\r\n                <Row className={'justify-content-md-center ml-3 mr-3'}>\r\n                    <Form.Group controlId=\"phonenumber\" className={\"mt-3 w-75\"}>\r\n                        <Form.Label>Phonenumber</Form.Label>\r\n                        <Form.Control type=\"tel\" name={\"phonenumber\"}\r\n                                      value={this.props.phonenumber} pattern={\"[- \\s\\./0-9]{9,12}\"}\r\n                                      title={'z.B 0471 123456 oder 333 487 9809'}\r\n                                      onChange={this.props.handleChange} required/>\r\n                    </Form.Group>\r\n                </Row>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default NewCompanyTutor;\r\n","import React, {Component} from 'react';\r\nimport {Form, Row} from \"react-bootstrap\";\r\n\r\nclass EditCompany extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row className={'justify-content-md-center ml-3 mr-3'}>\r\n                    <Form.Group controlId=\"companyName\" className={\"mt-3 w-75\"}>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type={\"text\"} name={\"companyName\"} value={this.props.companyName}\r\n                                      onChange={this.props.handleChange} required/>\r\n                    </Form.Group>\r\n                </Row>\r\n                <Row className={'justify-content-md-center ml-3 mr-3'}>\r\n                    <Form.Group controlId=\"c_email\" className={\"mt-3 w-75\"}>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type={\"email\"} name={\"c_email\"} value={this.props.c_email}\r\n                                      onChange={this.props.handleChange} required/>\r\n                    </Form.Group>\r\n                </Row>\r\n                <Row className={'justify-content-md-center ml-3 mr-3'}>\r\n                    <Form.Group controlId=\"c_phonenumber\" className={\"mt-3 w-75\"}>\r\n                        <Form.Label>Telefonnummer</Form.Label>\r\n                        <Form.Control type=\"tel\" name={\"c_phonenumber\"}\r\n                                      value={this.props.c_phonenumber} pattern={\"[- \\s\\./0-9]{9,12}\"}\r\n                                      title={'z.B 0471 123456 oder 333 487 9809'}\r\n                                      onChange={this.props.handleChange} required/>\r\n                    </Form.Group>\r\n                </Row>\r\n                <Row className={'justify-content-md-center ml-3 mr-3'}>\r\n                    <Form.Group controlId=\"address\" className={\"mt-3 w-75\"}>\r\n                        <Form.Label>Adresse</Form.Label>\r\n                        <Form.Control type={\"text\"} name={\"address\"} value={this.props.address}\r\n                                      onChange={this.props.handleChange} required/>\r\n                    </Form.Group>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditCompany;\r\n","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Button, Card, Form, Row} from \"react-bootstrap\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Col from \"react-bootstrap/Col\";\r\nimport NewCompanyTutor from \"./NewCompanyTutor\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport {CardHeader, Divider, Snackbar} from \"@material-ui/core\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport BlockIcon from \"@material-ui/icons/Block\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport EditCompany from \"./EditCompany\";\r\n\r\nclass CompanyInformation extends Component {\r\n    state = {\r\n        redirect: \"\",\r\n        redirectToLink: false,\r\n        companyID: null,\r\n        dialogIsOpen: false,\r\n        firstname: \"\",\r\n        surname: \"\",\r\n        email: \"\",\r\n        phonenumber: \"\",\r\n        companyName: \"\",\r\n        address: \"\",\r\n        c_email: \"\",\r\n        c_phonenumber: \"\",\r\n        errorIsOpen: false,\r\n        dialogEditIsOpen: false\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        console.log(\"hey\")\r\n        this.getCompanyById(this.props.match.params.id)\r\n        this.getAllTutors(this.props.match.params.id)\r\n        this.setState({\r\n            companyID: this.props.match.params.id\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirectToLink !== false) {\r\n            console.log(<Redirect to={this.state.redirect}/>)\r\n            return <Redirect to={this.state.redirect}/>;\r\n        }\r\n\r\n        return (\r\n            <div className={'adminViewContent bg-light'}>\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem href={'/loggedin/Administration'}>Administration</BreadcrumbItem>\r\n                    <BreadcrumbItem href={'/loggedin/Administration/CompanyInformation/'}\r\n                                    active={'active'}>ClassInformation</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                {\r\n                    this.setDialogForEdit()\r\n                }\r\n                {\r\n                    this.newTutor()\r\n                }\r\n                {\r\n                    this.showCompanyInfo()\r\n                }\r\n\r\n                {\r\n                    this.showAllCompanyTutors()\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    showAllCompanyTutors = () => {\r\n\r\n        if (this.state.data) {\r\n            return (\r\n                <div>\r\n                    <Card>\r\n                        <Card.Header>Tutoren:</Card.Header>\r\n                        <Card.Body>\r\n                            <div className={'d-flex flex-row'}>\r\n                                {\r\n                                    <Card className={\"m-2  w-25 border-secondary\"} key={\"new\"}\r\n                                          onClick={() => this.handleDialogOpen()}>\r\n                                        <div>\r\n                                            <Card.Header>Neuer Tutor:</Card.Header>\r\n                                            <Card.Body className={\"align-items-center d-flex justify-content-center\"}>\r\n                                                <h2>+</h2>\r\n                                            </Card.Body>\r\n                                        </div>\r\n                                    </Card>\r\n                                }{\r\n                                this.state.data.map((v, k) => {\r\n                                    return (\r\n\r\n\r\n                                        <Card className={\"m-2 w-25 \"} key={k}>\r\n                                            <Card.Header>{v.firstname} {v.surname}</Card.Header>\r\n                                            <Card.Body>\r\n                                                <Card.Subtitle>\r\n                                                    <Col className={\"m-2\"}>\r\n                                                        <Row>\r\n                                                            Tel: {v.phonenumber}\r\n                                                        </Row>\r\n                                                    </Col>\r\n                                                    <Col className={\"m-2\"}>\r\n                                                        <Row>\r\n                                                            Email: {v.email}\r\n                                                        </Row>\r\n                                                    </Col>\r\n                                                    <Col className={\"m-2\"} onClick={() => this.blockTutor(v.id)}>\r\n                                                        <Row>\r\n                                                            <div>\r\n                                                                {this.deactive_activated(v.isVerified)}\r\n                                                            </div>\r\n                                                            <div className={\"ml-2\"}>\r\n                                                                {this.block_unblockTutor(v.isVerified)}\r\n                                                            </div>\r\n                                                        </Row>\r\n                                                    </Col>\r\n                                                </Card.Subtitle>\r\n\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                    )\r\n\r\n                                })\r\n\r\n                            }\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    handleDialogClose = () => {\r\n        this.setState({\r\n            firstname: \"\",\r\n            surname: \"\",\r\n            email: \"\",\r\n            phonenumber: \"\",\r\n            dialogIsOpen: false\r\n        })\r\n    };\r\n    handleDialogOpen = () => {\r\n        this.setState({\r\n            dialogIsOpen: true\r\n        })\r\n    };\r\n\r\n    checkifStepFilledOut = () => {\r\n        var help = false;\r\n        let a = this.state.firstname;\r\n        let b = this.state.surname;\r\n        let c = this.state.email;\r\n        let d = this.state.phonenumber;\r\n        help = !(!a || !b || !c || !d);\r\n\r\n        if (!help) {\r\n            this.setState({\r\n                errorIsOpen: true\r\n            });\r\n        }\r\n        return help;\r\n    }\r\n    handleClose = () => {\r\n        this.setState({\r\n            errorIsOpen: false\r\n        })\r\n    };\r\n    checkifStepEditFilledOut = () => {\r\n        var help = false;\r\n        let a = this.state.companyName;\r\n        let b = this.state.address;\r\n        let c = this.state.c_email;\r\n        let d = this.state.c_phonenumber;\r\n        help = !(!a || !b || !c || !d);\r\n\r\n        if (!help) {\r\n            this.setState({\r\n                errorIsOpen: true\r\n            });\r\n        }\r\n        return help;\r\n    }\r\n\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        if (this.checkifStepFilledOut()) {\r\n\r\n            let url = localStorage.getItem('url');\r\n\r\n            let params = new URLSearchParams();\r\n\r\n            params.append('firstname', this.state.firstname);\r\n            params.append('surname', this.state.surname);\r\n            params.append('email', this.state.email);\r\n            params.append('phonenumber', this.state.phonenumber);\r\n            params.append('company_id', this.state.companyID);\r\n            params.append('isVerified', 1);\r\n            params.append('isEmployed', 1);\r\n\r\n\r\n            const axios = require('axios');\r\n            url += '?action=createTutorCompany';\r\n\r\n            axios({\r\n                method: 'post',\r\n                url: url,\r\n                data: params\r\n            }).then((res) => {\r\n                console.log(res.data);\r\n                this.handleDialogClose();\r\n                this.getAllTutors(this.state.companyID);\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    newTutor = () => {\r\n        return (\r\n            <div>\r\n                <Snackbar open={this.state.errorIsOpen} autoHideDuration={10000} onClose={() => {\r\n                    this.setState({errorIsOpen: false});\r\n                }}>\r\n\r\n                    <Alert severity={'error'} onClose={this.handleClose}>\r\n                        Bitte kontrollieren sie ob alle Felder ausgefüllt sind!\r\n                    </Alert>\r\n                </Snackbar>\r\n                <Dialog open={this.state.dialogIsOpen}\r\n                        classes={{paper: this.state.styles,}}\r\n                        onClose={this.handleDialogClose} fullWidth={true}\r\n                        maxWidth={\"sm\"}\r\n                        aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <div>\r\n                        <DialogTitle id=\"form-dialog-title\">Neuen Tutor hinzufügen</DialogTitle>\r\n                        <Divider/>\r\n                        <DialogContent>\r\n                            <Form id='my-form' onSubmit={this.handleSubmit}>\r\n                                <NewCompanyTutor\r\n                                    handleChange={this.handleChange}\r\n                                    firstname={this.state.firstname}\r\n                                    surname={this.state.surname}\r\n                                    email={this.state.email}\r\n                                    phonenumber={this.state.phonenumber}\r\n                                />\r\n                            </Form>\r\n                        </DialogContent>\r\n                        <Divider className={\"mt-2\"}/>\r\n                        <DialogActions className={\"float-right\"}>\r\n                            <Button onClick={this.handleDialogClose} color=\"primary\">\r\n                                Abbrechen\r\n                            </Button>\r\n                            <Button className={\" mt-2 m-2\"} form={\"my-form\"} color=\"primary\"\r\n                                    type=\"submit\">\r\n                                Erstellen\r\n                            </Button>\r\n                        </DialogActions>\r\n                        <Divider/>\r\n                    </div>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    showCompanyInfo = () => {\r\n\r\n        function hashCode(str) {\r\n            var hash = 0;\r\n            for (var i = 0; i < str.length; i++) {\r\n                hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n            }\r\n            return hash;\r\n        }\r\n\r\n        function rgbToHex(rgb) {\r\n            var hex = Number(rgb).toString(16);\r\n            if (hex.length < 2) {\r\n                hex = \"0\" + hex;\r\n            }\r\n            return hex\r\n        }\r\n\r\n        function intToRGB(i) {\r\n            var c = (i & 0x00FFFFFF)\r\n                .toString(16)\r\n                .toUpperCase();\r\n\r\n            return \"00000\".substring(0, 6 - c.length) + c;\r\n        }\r\n\r\n        function getRandomColor() {\r\n            var colors = []\r\n            var d = Math.random();\r\n            if (d < 0.666) {\r\n                colors.push(rgbToHex(0) + \"\" + rgbToHex(48) + \"\" + rgbToHex(80))\r\n\r\n            } else {\r\n                colors.push(rgbToHex(255) + \"\" + rgbToHex(203) + \"\" + rgbToHex(0))\r\n            }\r\n            return colors[0];\r\n        }\r\n\r\n        function firstChar(name) {\r\n            let firstChar = (name.substring(0, 1)).toUpperCase();\r\n            return firstChar;\r\n        }\r\n\r\n\r\n        function isUndefined(name) {\r\n            if (name === undefined) {\r\n                return (<div className={\"d-flex align-items-center\"}>\r\n                    <Avatar style={{backgroundColor: \"#\" + getRandomColor()}}>MM</Avatar>\r\n                    <div className={\"ml-2\"}>Max Mustermann</div>\r\n                </div>)\r\n            } else {\r\n                return (<div className={\"d-flex align-items-center\"}>\r\n                    <Avatar\r\n                        style={{backgroundColor: \"#\" + getRandomColor()}}>{firstChar(name)}</Avatar>\r\n                    <div className={\"ml-2\"}>{name}</div>\r\n                </div>)\r\n            }\r\n        }\r\n\r\n        if (this.state.company)\r\n\r\n            return (\r\n                <div>\r\n                    <h1>Informationen über das Unternehmen: {this.state.company.name} </h1>\r\n                    <Row className={\"m-3\"}>\r\n                        <Col>\r\n                            <Row>\r\n                                <div style={{'margin': '0px'}} className={'text-secondary'}>Email:</div>\r\n                            </Row>\r\n                            <Row className={\"mr-1\"}>\r\n                                <div>{this.state.company.email}</div>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col>\r\n                            <Row>\r\n                                <div style={{'margin': '0px'}} className={'text-secondary'}>Phonenumber:</div>\r\n                            </Row>\r\n                            <Row className={\"mr-1\"}>\r\n                                <div>{this.state.company.phonenumber}</div>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col>\r\n                            <Row>\r\n                                <div style={{'margin': '0px'}} className={'text-secondary'}>Adresse:</div>\r\n                            </Row>\r\n                            <Row className={\"mr-1\"}>\r\n                                <div>{this.state.company.address}</div>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col>\r\n                            <Row>\r\n                                <div style={{'margin': '0px'}} className={'text-secondary'}>Cap:</div>\r\n                            </Row>\r\n                            <Row className={\"mr-1\"}>\r\n                                <div>{this.state.company.cap}</div>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col>\r\n                            <Row>\r\n                                <div style={{'margin': '0px'}} className={'text-secondary'}>Verifiziert:</div>\r\n                            </Row>\r\n                            <Row className={\"mr-1\"}>\r\n                                <div\r\n                                    style={{'marginLeft': '1rem'}}>{this.getVerified(this.state.company.isVerified)}</div>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col>\r\n                            <Row>\r\n                                <div style={{'margin': '0px'}}\r\n                                     className={'text-secondary'}>{this.deactive_activated(this.state.company.isVerified)}</div>\r\n                            </Row>\r\n                            <Row>\r\n                                <div className={\"ml-4\"}>{this.block_unblock(this.state.company.isVerified)}</div>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col onClick={() => this.handleEditOpen()}>\r\n                            <Row>\r\n                                <div style={{'margin': '0px'}}\r\n                                     className={'text-secondary'}>Editieren\r\n                                </div>\r\n                            </Row>\r\n                            <Row>\r\n                                <div className={\"ml-3\"}><EditIcon/></div>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n    };\r\n\r\n    block_unblockTutor = (isEnabled) => {\r\n        if (isEnabled == 0) {\r\n            return (<DoneIcon/>);\r\n        } else {\r\n            return (<BlockIcon/>);\r\n        }\r\n    }\r\n\r\n    block_unblock = (isEnabled) => {\r\n        console.log(isEnabled)\r\n        if (isEnabled == 0) {\r\n            return (<DoneIcon onClick={this.blockCompany}/>);\r\n        } else {\r\n            return (<BlockIcon onClick={this.blockCompany}/>);\r\n        }\r\n    }\r\n    blockTutor = (id) => {\r\n\r\n        const axios = require('axios');\r\n        let url = localStorage.getItem('url');\r\n        url += '?action=invertIsVerifiedTutorCompanyReturnsAll';\r\n\r\n        let params = new URLSearchParams();\r\n        params.append(\"id\", id);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n            console.log(res.data)\r\n            this.setState({\r\n                data: res.data\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    blockCompany = () => {\r\n\r\n        const axios = require('axios');\r\n        let url = localStorage.getItem('url');\r\n        url += '?action=invertIsVerifiedCompany';\r\n\r\n        let params = new URLSearchParams();\r\n        params.append(\"id\", this.state.companyID);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n            console.log(res.data)\r\n            this.setState({\r\n                company: res.data\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n\r\n    deactive_activated = (isEnabled) => {\r\n        if (isEnabled == 1) {\r\n            return (\"Deaktivieren\");\r\n        } else {\r\n            return (\"Aktivieren\");\r\n        }\r\n    }\r\n\r\n\r\n    getVerified = (verified) => {\r\n        if (verified === 0) {\r\n            return \"Nein\"\r\n        } else {\r\n            return \"Ja\"\r\n        }\r\n    }\r\n\r\n    getAllTutors = (id) => {\r\n        const axios = require('axios');\r\n\r\n        let url = localStorage.getItem('url');\r\n\r\n        url += '?action=getTutorByCompanyId';\r\n\r\n\r\n        let params = new URLSearchParams();\r\n        params.append('id', id);\r\n\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n            console.log(res);\r\n            this.setState({data: res.data})\r\n        })\r\n    };\r\n\r\n    setDialogForEdit = () => {\r\n        return (\r\n            <Dialog open={this.state.dialogEditIsOpen}\r\n                    classes={{paper: this.state.styles,}}\r\n                    onClose={this.handleEditClose} fullWidth={true}\r\n                    maxWidth={\"sm\"}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <div>\r\n                    <DialogTitle id=\"form-dialog-title\">Unternehmen editieren</DialogTitle>\r\n                    <Divider/>\r\n                    <DialogContent>\r\n                        <Form id='my-form' onSubmit={this.handleSubmitEdit}>\r\n                            <EditCompany\r\n                                handleChange={this.handleChange}\r\n                                companyName={this.state.companyName}\r\n                                address={this.state.address}\r\n                                c_email={this.state.c_email}\r\n                                c_phonenumber={this.state.c_phonenumber}\r\n                            />\r\n                        </Form>\r\n                    </DialogContent>\r\n                    <Divider className={\"mt-2\"}/>\r\n                    <DialogActions className={\"float-right\"}>\r\n                        <Button onClick={this.handleEditClose} color=\"primary\">\r\n                            Abbrechen\r\n                        </Button>\r\n                        <Button className={\" mt-2 m-2\"} form={\"my-form\"} color=\"primary\"\r\n                                type=\"submit\">\r\n                            Bearbeiten\r\n                        </Button>\r\n                    </DialogActions>\r\n                    <Divider/>\r\n                </div>\r\n            </Dialog>\r\n        )\r\n    }\r\n    handleSubmitEdit = event => {\r\n\r\n        event.preventDefault();\r\n        if (this.checkifStepEditFilledOut()) {\r\n\r\n            let url = localStorage.getItem('url');\r\n\r\n            let params = new URLSearchParams();\r\n\r\n            params.append('companyname', this.state.companyName);\r\n            params.append('address', this.state.address);\r\n            params.append('c_email', this.state.c_email);\r\n            params.append('phonenumber', this.state.c_phonenumber);\r\n            params.append('company_id', this.state.companyID);\r\n\r\n\r\n            const axios = require('axios');\r\n            url += '?action=editCompany';\r\n\r\n            axios({\r\n                method: 'post',\r\n                url: url,\r\n                data: params\r\n            }).then((res) => {\r\n                console.log(res.data);\r\n                this.handleEditClose();\r\n                this.getCompanyById(this.state.companyID);\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n    handleEditClose = () => {\r\n        this.setState({\r\n            dialogEditIsOpen: false\r\n        })\r\n    }\r\n    handleEditOpen = () => {\r\n        console.log(\"hey\")\r\n        this.setState({\r\n            dialogEditIsOpen: true\r\n        })\r\n    }\r\n\r\n\r\n    getCompanyById = (id) => {\r\n        console.log(id)\r\n        const axios = require('axios');\r\n\r\n        let url = localStorage.getItem('url');\r\n        url += '?action=getCompanyById';\r\n\r\n\r\n        let params = new URLSearchParams();\r\n        params.append('id', id);\r\n\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n\r\n            console.log(\"res\", res);\r\n            this.setState({\r\n                company: res.data,\r\n                companyName: res.data.name,\r\n                address: res.data.address,\r\n                c_email: res.data.email,\r\n                c_phonenumber: res.data.phonenumber\r\n            })\r\n        })\r\n    };\r\n\r\n    openStudentInfo = (id) => {\r\n\r\n        this.setState({\r\n            redirect: null\r\n        })\r\n\r\n        this.setState({\r\n            redirect: \"/loggedin/Administration/ClassInformation/\" + this.state.class_id + \"/StudentInformation/\" + id,\r\n            redirectToLink: true\r\n        })\r\n\r\n        // this.setState({\r\n        //     redirect: \"./StudentInformation/\" + id,\r\n        //     redirectToLink: true\r\n        // })\r\n    };\r\n\r\n}\r\n\r\n\r\nexport default CompanyInformation;\r\n","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport './ClassOverview.css'\r\nimport {Breadcrumb, BreadcrumbItem, Button, Card, Col, Modal, ProgressBar, Row} from \"react-bootstrap\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {Snackbar} from \"@material-ui/core\";\r\n\r\n\r\nclass ClassOverview extends Component {\r\n    state = {\r\n        show: false,\r\n        token: \"\",\r\n        data: null,\r\n        submitted: false,\r\n        redirect: false,\r\n        redirectToLink: \"\",\r\n        newPraktikum: \"\",\r\n        errorIsOpen: false,\r\n        message: \"\",\r\n        message_color: \"\"\r\n    };\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        if (this.props.currentUser != null)\r\n            this.getAllInternshipsByStudent()\r\n    }\r\n\r\n    /**\r\n     * sends token to api when true then gives back class when false error;\r\n     * @param id\r\n     */\r\n    joinClassAjax = (classId) => {\r\n        let url = localStorage.getItem('url');\r\n\r\n        url += \"?action=joinClass&classId=\" + classId;\r\n        const axios = require('axios');\r\n\r\n        axios({\r\n            method: 'post',\r\n            url\r\n        }).then((res) => {\r\n            if (res.data.message !== \"Token valid\") {\r\n                this.setState({\r\n                    errorIsOpen: true,\r\n                    message: res.data.message,\r\n                    message_color: \"error\"\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    errorIsOpen: true,\r\n                    message: res.data.message,\r\n                    message_color: \"success\"\r\n                })\r\n                this.getAllInternshipsByStudent();\r\n\r\n            }\r\n        })\r\n\r\n    };\r\n\r\n    getAllInternshipsByStudent = () => {\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=getOwnInternship\";\r\n\r\n        const axios = require('axios');\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            this.setState({data: res.data});\r\n        })\r\n\r\n    };\r\n    handleCloseSnackbar = () => {\r\n        this.setState({\r\n            errorIsOpen: false\r\n        })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.redirect !== false) {\r\n            return <Redirect to={this.state.redirectToLink}/>;\r\n        }\r\n\r\n        //------- Modal ---------\r\n        const setShow = (input) => {\r\n            this.setState({\r\n                show: input\r\n            });\r\n        };\r\n        const handleClose = () => {\r\n            setShow(false);\r\n            let entrytoken = document.getElementById(\"token\").value;\r\n            if (entrytoken !== \"\") {\r\n                this.setState({\r\n                    token: entrytoken\r\n                });\r\n                this.joinClassAjax(entrytoken);\r\n            }\r\n        };\r\n        const handleShow = () => {\r\n            setShow(true);\r\n        };\r\n\r\n\r\n        return (\r\n            <div className={'classViewContent bg-light'}>\r\n\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem href={'/loggedin/'} active>Klassenansicht</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <Row>\r\n                    <Col className={'m-5'}>\r\n                        <h1>Klassenübersicht</h1>\r\n                    </Col>\r\n                    <Col className={'col-auto'}>\r\n                        <Button onClick={handleShow}>Klasse hinzufügen</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Snackbar open={this.state.errorIsOpen} autoHideDuration={10000} onClose={() => {\r\n                    this.setState({errorIsOpen: false})\r\n                }}>\r\n                    <Alert severity={this.state.message_color} onClose={this.handleCloseSnackbar}>\r\n                        {this.state.message}\r\n                    </Alert>\r\n                </Snackbar>\r\n                <Row>\r\n                    <Col>\r\n                        <div className={'p-1'}>\r\n                            <Modal show={this.state.show} onHide={handleClose}>\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title>Bitte geben Sie den Klassencode ein</Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body className={\"\"}>\r\n                                    <input placeholder={'Token'} id={\"token\"} name={\"token\"}\r\n                                           className={\" form-control d-flex justify-content-center align-items-center\"}/>\r\n                                </Modal.Body>\r\n                                <Modal.Footer>\r\n                                    <Button className=\"secondary\" onClick={handleClose}>\r\n                                        Schließen\r\n                                    </Button>\r\n                                    <Button className=\"primary\" onClick={handleClose}>\r\n                                        Speichern und Schließen\r\n                                    </Button>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n                            <div id={\"internships\"}>\r\n                                {\r\n                                    this.displayData()\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    displayData = () => {\r\n        let that = this;\r\n\r\n        //adds a button when passed 1\r\n        function addInternship(a, schoolclass) {\r\n            if (a === \"1\") {\r\n                return <Button title={\"Praktikum hinzufügen\"}\r\n                               onClick={() => that.createNewInternship(schoolclass)}>+</Button>\r\n            }\r\n        }\r\n\r\n        function evaluateState(state) {\r\n            if (state.state_id) {\r\n                return state.state_id / 6 * 100;\r\n            }\r\n            return 100\r\n        }\r\n\r\n        if (this.state.data != null) {\r\n\r\n            let schoolClassNames = Object.keys(this.state.data);\r\n\r\n            return (\r\n\r\n                schoolClassNames.map((v) => {\r\n\r\n                    let classname = v.split(\",\")[1];\r\n                    let schoolyear = v.split(\",\")[0];\r\n                    let classActive = this.state.data[v].active;\r\n                    return (\r\n                        <Card key={v} className={\"m-4 p-2\"}>\r\n                            <h1>\r\n                                <div className=\"d-flex bd-highlight mb-3 align-items-baseline\">\r\n                                    <div className=\"p-2 bd-highlight\"><h1>{classname}</h1></div>\r\n                                    <div className=\"p-2 bd-highlight text-secondary\"><h3>{schoolyear}</h3></div>\r\n                                    <div className=\"ml-auto p-2 bd-highlight\">\r\n                                        {addInternship(classActive, this.state.data[v])}\r\n                                    </div>\r\n                                </div>\r\n                            </h1>\r\n\r\n                            {\r\n\r\n                                this.state.data[v].internships.map((k, a) => {\r\n                                    if (k.length === 0) {\r\n                                        return null;\r\n                                    } else {\r\n                                        return <Card onClick={() => this.openInternshipSteps(k.internship_id)} key={a}\r\n                                                     className={'m-2 p-2'}>{k.companyname}\r\n                                            <ProgressBar className={'m-3'} style={{color: \"black\"}} animated={false}\r\n                                                         variant={k.state_color}\r\n                                                         now={evaluateState(k)}\r\n                                                         label={k.state_name}>\r\n                                            </ProgressBar>\r\n                                        </Card>\r\n                                    }\r\n\r\n                                })\r\n                            }\r\n                        </Card>\r\n                    )\r\n\r\n                })\r\n            )\r\n\r\n        }\r\n    };\r\n\r\n\r\n    openInternshipSteps = (id) => {\r\n        this.setState({\r\n            redirectToLink: \"./internshipSteps/\" + id,\r\n            redirect: true\r\n        })\r\n        console.log(this.state)\r\n    }\r\n\r\n    createNewInternship = (currentClass) => {\r\n        let url = localStorage.getItem('url');\r\n\r\n\r\n        url += \"?action=makeInternship\";\r\n\r\n        let params = new URLSearchParams();\r\n        console.log(currentClass.id);\r\n        params.append('schoolclass_id', currentClass.id);\r\n\r\n        const axios = require('axios');\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n            console.log(res)\r\n            this.setState({newPraktikum: res.data.id});\r\n            console.log(res.data)\r\n            this.setState({\r\n                redirectToLink: \"./internshipSteps/\" + this.state.newPraktikum,\r\n                redirect: true\r\n            })\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default ClassOverview;","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport {Accordion, Breadcrumb, BreadcrumbItem, Card, Row} from \"react-bootstrap\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nclass StudentInformation extends Component {\r\n    state = {\r\n        class_id: 1,\r\n        internships: null,\r\n        studentInfo: \"\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.match.params.class_id !== 0) {\r\n            this.getStudent(this.props.match.params.id);\r\n            this.setState({\r\n                class_id: this.props.match.params.class_id\r\n            });\r\n        }\r\n\r\n        this.getInternships(this.props.match.params.id)\r\n    }\r\n\r\n    checkClassID = (class_id) => {\r\n        if (!this.props.match.params.class_id) {\r\n            return (<BreadcrumbItem\r\n                href={'/loggedin/Administration/ClassInformation/' + class_id}>ClassInformation</BreadcrumbItem>);\r\n        } else {\r\n            return (<BreadcrumbItem href={'/loggedin/Administration/StudentOverview'}>Alle Schüler</BreadcrumbItem>);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={'adminViewContent bg-light'}>\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem href={'/loggedin/Administration'}>Administration</BreadcrumbItem>\r\n                    {this.checkClassID(this.state.class_id)}\r\n                    <BreadcrumbItem href={'/loggedin/Administration'}\r\n                                    active={'active'}>StudentInformation</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <h1>Hier finden Sie alle Infos zu diesem Schüler</h1>\r\n                {this.state.studentInfo}\r\n                <Card>\r\n                    <Card.Header>\r\n                        <div>Praktikas</div>\r\n                    </Card.Header>\r\n                    <Accordion defaultActiveKey=\"0\">\r\n                        {this.showInternships()}\r\n                    </Accordion>\r\n                </Card>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    showStudent = () => {\r\n\r\n        function hashCode(str) {\r\n            var hash = 0;\r\n            for (var i = 0; i < str.length; i++) {\r\n                hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n            }\r\n            return hash;\r\n        }\r\n\r\n        function intToRGB(i) {\r\n            var c = (i & 0x00FFFFFF)\r\n                .toString(16)\r\n                .toUpperCase();\r\n\r\n            return \"00000\".substring(0, 6 - c.length) + c;\r\n        }\r\n\r\n        //gets first of firstname and FirstChar of lastname\r\n        function firstCharAndLastChar(firstname, lastname) {\r\n            let firstChar = (firstname.substring(0, 1)).toUpperCase();\r\n            let lastChar = (lastname.substring(0, 1)).toUpperCase();\r\n            return firstChar + lastChar;\r\n        }\r\n\r\n        function isStudentUndefined(firstname, lastname) {\r\n            if (!firstname || !lastname) {\r\n                return (<div className={\"d-flex align-items-center\"}>\r\n                    <Avatar style={{backgroundColor: \"#\" + intToRGB(hashCode(\"Max muster\"))}}>MM</Avatar>\r\n                    <div className={\"ml-2\"}>Max Mustermann</div>\r\n                </div>)\r\n            } else {\r\n                return (<div className={\"d-flex align-items-center\"}>\r\n                    <Avatar\r\n                        style={{backgroundColor: \"#\" + intToRGB(hashCode(firstname + \" \" + lastname))}}>{firstCharAndLastChar(firstname, lastname)}</Avatar>\r\n                    <div className={\"ml-2\"}>{firstname + \" \" + lastname}</div>\r\n                </div>)\r\n            }\r\n        }\r\n\r\n        if (this.state.data) {\r\n            let v = this.state.data\r\n            let arr = [];\r\n            arr.push(\r\n                <div key={v.id}>\r\n                    <Row className={\"m-3\"}>\r\n                        <Col>\r\n                            <Row>\r\n                                <div style={{'margin': '0px'}} className={'text-secondary'}>Name</div>\r\n                            </Row>\r\n                            <Row>\r\n                                {isStudentUndefined(v.firstname, v.surname)}\r\n                            </Row>\r\n                        </Col>\r\n                        <Col>\r\n                            <Row>\r\n                                <div style={{'margin': '0px'}} className={'text-secondary'}>Email</div>\r\n                            </Row>\r\n                            <Row>\r\n                                <div>{v.email}</div>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col>\r\n                            <Row>\r\n                                <div style={{'margin': '0px'}} className={'text-secondary'}>Verifikation</div>\r\n                            </Row>\r\n                            <Row>\r\n                                <div>{this.verified(v)}</div>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col>\r\n                            <Row>\r\n                                <div style={{'margin': '0px'}}\r\n                                     className={'text-secondary'}>{this.deactive_activated(v.is_enabled)}</div>\r\n                            </Row>\r\n                            <Row>\r\n                                <div className={\"ml-4\"}>{this.block_unblock(v.is_enabled)}</div>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n            this.setState({\r\n                studentInfo: arr\r\n            })\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    showInternships = () => {\r\n\r\n\r\n        if (this.state.internships) {\r\n\r\n            let objectnames = Object.keys(this.state.internships);\r\n\r\n            let allinternships = [];\r\n            for (var i = 0; i < objectnames.length; i++) {\r\n                var temp = objectnames[i].split(\",\")[0].split(\"-\")[0]\r\n                if (allinternships[temp]) {\r\n                    allinternships[temp].push(this.state.internships[objectnames[i]])\r\n                } else {\r\n                    allinternships[temp] = [];\r\n                    allinternships[temp].push(this.state.internships[objectnames[i]])\r\n                }\r\n\r\n            }\r\n\r\n\r\n            let toDisplay = [];\r\n\r\n\r\n            let allObjectKeys = Object.keys(allinternships)\r\n            for (let i = 0; i < allObjectKeys.length; i++) {\r\n                let cardheader = [];\r\n                let currentObject = allinternships[allObjectKeys[i]];\r\n                currentObject.map((z) => {\r\n                    let card_body = [];\r\n                    z.internships.map((v, index) => {\r\n                        if (z.internships.internshipcounter !== 0) {\r\n                            card_body.push(\r\n                                <Card key={index} style={{width: \"200px\"}} className={\"d-inline-block\"}>\r\n                                    <Card.Header>{v.companyname}</Card.Header>\r\n                                    <Card.Body>\r\n                                        <div>Anfang: {v.startdate}</div>\r\n                                        <div>Ende: {v.enddate}</div>\r\n                                        <div>Bewertung: {v.rating}</div>\r\n                                    </Card.Body>\r\n                                </Card>)\r\n                        } else {\r\n                            card_body.push(<h4>Kein Praktikum</h4>)\r\n                        }\r\n                    })\r\n\r\n\r\n                    cardheader.push(\r\n                        <Card key={i + z.internships[0].classname}>\r\n                            <Card.Header>\r\n                                <Accordion.Toggle as={'div'} variant=\"text\" className={'w-100 h-100'}\r\n                                                  eventKey={z.internships[0].classname}>\r\n                                    {z.internships[0].classname}\r\n                                </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey={z.internships[0].classname}>\r\n                                <Card.Body>\r\n                                    {card_body}\r\n                                </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        )\r\n\r\n                    }\r\n                )\r\n\r\n                toDisplay.push(\r\n                    <div key={i + \"key\"} className={'w-100'}>\r\n                        <Card className={\"m-2\"}>\r\n                            <Card.Header>\r\n                                {allObjectKeys[i]}\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                {cardheader}\r\n                            </Card.Body>\r\n\r\n\r\n                        </Card>\r\n                    </div>\r\n                )\r\n            }\r\n            return toDisplay\r\n        }\r\n    };\r\n\r\n    getStudent = (id) => {\r\n        const axios = require('axios');\r\n        let url = localStorage.getItem('url');\r\n        url += '?action=getStudentById';\r\n\r\n        let params = new URLSearchParams();\r\n        params.append(\"id\", id);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n            this.setState({data: res.data})\r\n            this.showStudent();\r\n        })\r\n    };\r\n\r\n    getInternships = (id) => {\r\n        const axios = require('axios');\r\n\r\n        let url = localStorage.getItem('url');\r\n        url += '?action=getInternshipByStudent';\r\n\r\n        let params = new URLSearchParams();\r\n        params.append(\"id\", id);\r\n\r\n        let that = this;\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n            that.setState({internships: res.data})\r\n        });\r\n\r\n    }\r\n\r\n    verified = (v) => {\r\n        if (v.is_verified === \"1\") {\r\n            return \"Verifiziert\";\r\n        } else\r\n            return \"Nicht verifiziert\";\r\n    }\r\n    block_unblock = (isEnabled) => {\r\n        if (isEnabled !== 1) {\r\n            return (<DoneIcon onClick={this.block}/>);\r\n        } else {\r\n            return (<BlockIcon onClick={this.block}/>);\r\n        }\r\n    }\r\n    block = () => {\r\n        const axios = require('axios');\r\n        let url = localStorage.getItem('url');\r\n        url += '?action=invertEnbaledStudent';\r\n\r\n        let params = new URLSearchParams();\r\n        params.append(\"id\", this.state.data.id);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n            this.setState({\r\n                data: res.data\r\n            })\r\n            this.showStudent();\r\n        })\r\n    }\r\n    deactive_activated = (isEnabled) => {\r\n        if (isEnabled === 1) {\r\n            return (\"Deaktivieren\");\r\n        } else {\r\n            return (\"Aktivieren\");\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default StudentInformation;","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Snackbar} from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Select from \"react-select\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nclass NewSchoolperson extends Component {\r\n    state = {\r\n        redirect: \"\",\r\n        redirectToLink: false,\r\n        class_id: 0,\r\n        generateToken: \"\",\r\n        errorIsOpen: false,\r\n        selectedOptionRole: null,\r\n        isAdministration: false,\r\n        newRole: \"\",\r\n        roles: [],\r\n        newRoleDescription: \"\",\r\n        errorRoleName: false,\r\n        errorDescription: false,\r\n        dialogIsOpen: false\r\n    };\r\n    componentDidMount() {\r\n        this.getAllRoles();\r\n        this.generateToken();\r\n    }\r\n    getAllRoles = () => {\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=getAllRoles\";\r\n\r\n        const axios = require('axios');\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            const newroles = res.data.map(function (row) {\r\n                return {value: row.id, label: row.name}\r\n            });\r\n            this.setState({roles: newroles});\r\n\r\n        });\r\n    };\r\n    handleChangeRoles = selectedOption => {\r\n        this.setState(\r\n            {selectedOptionRole: selectedOption}\r\n        );\r\n    };\r\n\r\n    render() {\r\n        if (this.state.redirectToLink !== false) {\r\n            return <Redirect to={this.state.redirect}/>;\r\n        }\r\n        return (\r\n            <div className={'adminViewContent bg-light'}>\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem href={'/loggedin/Administration'}>Administration</BreadcrumbItem>\r\n                    <BreadcrumbItem href={'/loggedin/Administration/newCompany'} active>Klassenlehrer/Lehrer\r\n                        erstellen</BreadcrumbItem>\r\n                </Breadcrumb>\r\n\r\n                <Row>\r\n                    <Col className={'m-5'}>\r\n                        <h1>Klassenlehrer/Lehrer erstellen</h1>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n                <Snackbar open={this.state.errorIsOpen} autoHideDuration={10000} onClose={() => {\r\n                    this.setState({errorIsOpen: false});\r\n                }}>\r\n\r\n                    <Alert severity={'error'} onClose={this.handleClose}>\r\n                        Bitte kontrollieren sie ob alle Felder ausgefüllt sind!\r\n                    </Alert>\r\n                </Snackbar>\r\n                <Dialog open={this.state.dialogIsOpen} onClose={this.handleDialogClose}\r\n                        aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">Rolle</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Geben sie in den untenstehenden Textfelder die neue Rolle ein!\r\n                        </DialogContentText>\r\n                        <Form id={\"newRole\"} onSubmit={this.handleDialogSave}>\r\n                            <TextField\r\n                                autoFocus\r\n                                error={this.state.errorRoleName}\r\n                                margin=\"dense\"\r\n                                id=\"role\"\r\n                                label=\"Role\"\r\n                                type=\"text\"\r\n                                fullWidth\r\n                                onChange={this.handleNewRole}\r\n                            />\r\n                            <TextField\r\n                                error={this.state.errorDescription}\r\n                                margin=\"dense\"\r\n                                id=\"role\"\r\n                                label=\"Beschreibung der Role\"\r\n                                type=\"text\"\r\n                                fullWidth\r\n                                onChange={this.handleNewRoleDescription}\r\n                            />\r\n                        </Form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleDialogClose} color=\"primary\">\r\n                            Abbrechen\r\n                        </Button>\r\n                        <Button type=\"submit\" form=\"newRole\" color=\"primary\">\r\n                            Speichern\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Row className={'justify-content-md-center'}>\r\n                        <Form.Group controlId=\"formFirstname\" className={\"mt-3 w-50\"}>\r\n                            <Form.Label>Vorname</Form.Label>\r\n                            <Form.Control type={\"text\"} name={\"firstname\"}\r\n                                          onChange={this.onChange} required/>\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className={'justify-content-md-center'}>\r\n                        <Form.Group controlId=\"formSurname\" className={\"w-50\"}>\r\n                            <Form.Label>Nachname</Form.Label>\r\n                            <Form.Control type={\"text\"} name={\"surname\"}\r\n                                          onChange={this.onChange} required/>\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className={'justify-content-md-center'}>\r\n                        <Form.Group controlId=\"formEmail\" className={\"w-50\"}>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type={\"email\"} name={\"email\"}\r\n                                          onChange={this.onChange} required>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className={'justify-content-md-center'}>\r\n                        <Form.Group controlId=\"formPhonenumber\" className={\"w-50\"}>\r\n                            <Form.Label>Telefonnummer</Form.Label>\r\n                            <Form.Control type={\"text\"} name={\"phonenumber\"}\r\n                                          onChange={this.onChange}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className={'justify-content-md-center'}>\r\n                        <div className={\"w-50\"}>\r\n                            <Form.Label>Rolle</Form.Label>\r\n                            <div className={\"d-flex justify-content-between\"}>\r\n                                <div className={\"w-100 mr-2\"}>\r\n                                    <Select\r\n                                        options={this.state.roles}\r\n                                        value={this.state.selectedOptionRole}\r\n                                        onChange={this.handleChangeRoles}\r\n                                        placeholder={\"Wählen sie die Role aus!\"}\r\n                                    />\r\n                                </div>\r\n                                <div className={\"ml-2 w-25\"}>\r\n                                    <Button className={\"btn btn-primary\"} onClick={() => this.handleDialogOpen()}>Neue\r\n                                        Rolle</Button>\r\n                                </div>\r\n                                <div className={\"ml-2 w-25\"}>\r\n                                    <FormControlLabel\r\n                                        value=\"isAdministration\"\r\n                                        control={<Switch color=\"primary\" checked={this.state.isAdministration}\r\n                                                         onChange={this.handleisAdministration}/>}\r\n                                        label=\"Administration\"\r\n                                        labelPlacement=\"start\"\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Row>\r\n                    <Row className={'justify-content-md-center'}>\r\n                        <Form.Group controlId=\"formToken\" className={\"w-50\"}>\r\n\r\n                            <Form.Label>Passwort</Form.Label>\r\n                            <div className={\"d-flex justify-content-between\"}>\r\n                                <div className={\"w-75 mr-2\"}>\r\n                                    <Form.Control type={\"text\"} name={\"password\"}\r\n                                                  disabled required defaultValue={this.state.generateToken}\r\n                                    >\r\n                                    </Form.Control>\r\n                                </div>\r\n                                <div className={\"ml-2 w-25\"}>\r\n                                    <Button className={\"btn btn-primary\"} onClick={() => this.generateToken()}>Token\r\n                                        generieren</Button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Form.Group>\r\n                    </Row>\r\n\r\n\r\n\r\n                    <Row className={'justify-content-md-center'}>\r\n                        <Button className={\"m-2 w-25\"} variant=\"success\" type=\"submit\">\r\n                            Erstellen\r\n                        </Button>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleisAdministration = (event) => {\r\n        this.setState({\r\n            isAdministration: event.target.checked\r\n        })\r\n    };\r\n\r\n    handleDialogClose = () => {\r\n        this.setState({\r\n            dialogIsOpen: false\r\n        })\r\n    };\r\n\r\n    handleDialogSave = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"hexy\")\r\n        if (this.validateFormNewRole()) {\r\n            this.setState({\r\n                dialogIsOpen: false\r\n            });\r\n            let arr_roles = this.state.roles;\r\n            var newRoleArr = {value: this.state.newRole, label: this.state.newRole};\r\n            arr_roles.push({\r\n                value: this.state.newRole, label: this.state.newRole\r\n            });\r\n            this.setState({\r\n                selectedOptionRole: newRoleArr,\r\n                specializations: arr_roles\r\n            })\r\n        }\r\n    };\r\n\r\n    handleDialogOpen = () => {\r\n        this.setState({\r\n            dialogIsOpen: true\r\n        })\r\n    };\r\n    handleNewRole = (e) => {\r\n        this.setState({\r\n            newRole: e.target.value\r\n        });\r\n    };\r\n    handleNewRoleDescription = (e) => {\r\n        this.setState({\r\n            newRoleDescription: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n    generateToken = () => {\r\n        const axios = require('axios');\r\n        let url = localStorage.getItem('url');\r\n        url += '?action=getCreatedToken';\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            this.setState({\r\n                generateToken: res.data\r\n            });\r\n        });\r\n\r\n    }\r\n    validateFormNewRole = () => {\r\n        let a = this.state.newRole;\r\n        let b = this.state.newRoleDescription;\r\n\r\n        var errorOpenRole = false;\r\n        var errorOpenDescription = false;\r\n\r\n        if (!a && !b) {\r\n            errorOpenRole = true;\r\n            errorOpenDescription = true;\r\n        } else if (!a) {\r\n            errorOpenRole = true;\r\n        } else if (!b) {\r\n            errorOpenDescription = true;\r\n        } else {\r\n            errorOpenRole = false;\r\n            errorOpenDescription = false;\r\n            this.setState({\r\n                errorDescription: false,\r\n                errorRoleName: false\r\n            })\r\n            return true;\r\n        }\r\n\r\n        if (errorOpenRole && errorOpenDescription) {\r\n            this.setState({\r\n                errorDescription: true,\r\n                errorRoleName: true\r\n            })\r\n            return false;\r\n        } else if (errorOpenRole) {\r\n            this.setState({\r\n                errorRoleName: true,\r\n                errorDescription: false\r\n            })\r\n            return false;\r\n        } else if (errorOpenDescription) {\r\n            this.setState({\r\n                errorDescription: true,\r\n                errorRoleName: false\r\n            })\r\n            return false;\r\n        }\r\n    };\r\n\r\n    validateForm = () => {\r\n        let a = this.state.firstname;\r\n        let b = this.state.email;\r\n        let c = this.state.surname;\r\n        let d = this.state.selectedOptionRole;\r\n\r\n        if (!a || !b || !c || !d) {\r\n            this.setState({\r\n                errorIsOpen: true\r\n            });\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n    toAdministration = () => {\r\n        this.setState({\r\n            redirect: \"/loggedin/Administration\",\r\n            redirectToLink: true\r\n        });\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n    handleClose = () => {\r\n        this.setState({\r\n            errorIsOpen: false\r\n        })\r\n    };\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        if(this.validateForm()) {\r\n            let url = localStorage.getItem('url');\r\n\r\n            let params = new URLSearchParams();\r\n\r\n            params.append('email', this.state.email);\r\n            params.append('firstname', this.state.firstname);\r\n            params.append('surname', this.state.surname);\r\n            params.append('password', this.state.generateToken);\r\n            params.append('phonenumber', this.state.phonenumber);\r\n            params.append('role', this.state.selectedOptionRole.value);\r\n            params.append('role_description', this.state.newRoleDescription);\r\n            params.append('isAdministration', this.state.isAdministration);\r\n\r\n            const axios = require('axios');\r\n            url += '?action=addSchoolperson';\r\n\r\n            axios({\r\n                method: 'post',\r\n                url: url,\r\n                data: params\r\n            }).then((res) => {\r\n                console.log(res.data);\r\n                this.toAdministration();\r\n            })\r\n\r\n\r\n        }\r\n        console.log(this.state);\r\n    }\r\n\r\n}\r\n\r\nexport default NewSchoolperson;","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Row, Col, Card, ButtonToolbar, DropdownButton, DropdownItem} from \"react-bootstrap\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass StudentOverview extends Component {\r\n    state = {\r\n        redirect: \"\",\r\n        redirectToLink: false,\r\n        class_id: 0,\r\n        allSchoolpersonsData: null,\r\n    };\r\n    componentDidMount() {\r\n        this.getAllStudents();\r\n        this.getAllSpecialization();\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirectToLink !== false) {\r\n            return <Redirect to={this.state.redirect}/>;\r\n        }\r\n        return(\r\n            <div className={'adminViewContent bg-light'}>\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem href={'/loggedin/'}>Administration</BreadcrumbItem>\r\n                </Breadcrumb>\r\n\r\n                <Row>\r\n                    <Col className={'m-5'}>\r\n                        <h1>Alle Schüler</h1>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <label>Filtern Nach: </label>\r\n                        <ButtonToolbar>\r\n                            {[DropdownButton].map((DropdownType, idx) => (\r\n                                <DropdownType\r\n                                    className=\"warning\"\r\n                                    title={\"Fachrichtung\"}\r\n                                    id={`dropdown-button-drop-${idx}`}\r\n                                    key={idx}\r\n                                    onSelect={this.getKeyFromSelected}\r\n                                >\r\n                                    {this.displayData()}\r\n                                </DropdownType>\r\n                            ))}\r\n                        </ButtonToolbar>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <div className={'p-1'}>\r\n                            <div id={\"students\"} className={\"noDividerList\"}>\r\n                                {this.displayStudents()}\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n    getKeyFromSelected = (key) => {\r\n        if(key === \"-1\"){\r\n            this.getAllStudents();\r\n        }else{\r\n            this.getStudentByKey(key);\r\n        }\r\n\r\n    };\r\n    getStudentByKey = (id) => {\r\n\r\n            let url = localStorage.getItem('url');\r\n            url += \"?action=getStudentbySpecializations\";\r\n\r\n            let params = new URLSearchParams();\r\n            params.append('id', id);\r\n\r\n            const axios = require('axios');\r\n\r\n            axios({\r\n                method: 'post',\r\n                url: url,\r\n                data: params\r\n            }).then((res) => {\r\n                this.setState({allStudentsData: res.data});\r\n            })\r\n\r\n    };\r\n    getAllSpecialization = () => {\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=getAllSpecializations\";\r\n\r\n        const axios = require('axios');\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            res.data.push({\r\n                id: \"-1\",\r\n                description: \"Alle\"\r\n            });\r\n            this.setState({\r\n                specializations: res.data});\r\n        })\r\n\r\n    };\r\n    getAllStudents = () =>{\r\n\r\n        let url = localStorage.getItem('url');\r\n\r\n        url += \"?action=getAllStudents\";\r\n\r\n        const axios = require('axios');\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            console.log(res.data)\r\n            this.setState({allStudentsData: res.data});\r\n        })\r\n\r\n    };\r\n    openStudentInfo = (id) => {\r\n            this.setState({\r\n                redirect: \"./StudentInformation/\" + id,\r\n                redirectToLink: true\r\n            })\r\n\r\n\r\n    };\r\n    displayStudents = () => {\r\n        if(this.state.allStudentsData != null){\r\n\r\n            function hashCode(str) {\r\n                var hash = 0;// java String#hashCode\r\n                var i;\r\n                if (str != null) {\r\n                    for (i = 0; i < str.length; i++) {\r\n                        hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n                    }\r\n                    return hash;\r\n                } else {\r\n                    let str = \"Mustermann\";\r\n                    for (i = 0; i < str.length; i++) {\r\n                        hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n                    }\r\n                    return hash;\r\n                }\r\n            }\r\n\r\n            function intToRGB(i) {\r\n                var c = (i & 0x00FFFFFF)\r\n                    .toString(16)\r\n                    .toUpperCase();\r\n\r\n                return \"00000\".substring(0, 6 - c.length) + c;\r\n            }\r\n\r\n            function rgbToHex(rgb) {\r\n                var hex = Number(rgb).toString(16);\r\n                if (hex.length < 2) {\r\n                    hex = \"0\" + hex;\r\n                }\r\n                return hex\r\n            }\r\n\r\n            function getRandomColor() {\r\n                var colors = []\r\n\r\n                colors.push(rgbToHex(255) + \"\" + rgbToHex(203) + \"\" + rgbToHex(0))\r\n                colors.push(rgbToHex(0) + \"\" + rgbToHex(48) + \"\" + rgbToHex(80))\r\n\r\n                return colors[Math.floor(Math.random() * colors.length)];\r\n            }\r\n\r\n\r\n            //gets first of firstname and FirstChar of lastname\r\n            function firstCharAndLastChar(firstname, lastname) {\r\n                let firstChar = (firstname.substring(0, 1)).toUpperCase();\r\n                let lastChar = (lastname.substring(0, 1)).toUpperCase();\r\n                return firstChar + lastChar;\r\n            }\r\n\r\n            if (!this.state.allStudentsData) {\r\n                return <div/>\r\n            }\r\n\r\n            let students = [];\r\n            this.state.allStudentsData.map(c => {\r\n                students.push(\r\n                    <Card bg={\"light\"} className={\"m-3 w-25 text-center\"}  onClick={() => this.openStudentInfo(c.id)}>\r\n                        <Card.Header>\r\n                            <div className={\"d-flex align-items-baseline\"}>\r\n                                <Avatar\r\n                                    style={{backgroundColor: \"#\" + getRandomColor()}}>{firstCharAndLastChar(c.firstname, c.surname)}</Avatar>\r\n                                <div className={\"ml-2\"}>{c.firstname + \" \" + c.surname}</div>\r\n                            </div>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <h6>{c.email}</h6>\r\n                        </Card.Body>\r\n                    </Card>)\r\n            });\r\n            return students\r\n        }\r\n    };\r\n\r\n    displayData = () => {\r\n        if (this.state.specializations != null) {\r\n            let specializations = this.state.specializations;\r\n            return (\r\n                specializations.map((v) => {\r\n                    return (\r\n                        <DropdownItem eventKey={v.id}>{v.description}</DropdownItem>\r\n                    )\r\n\r\n\r\n                })\r\n            )\r\n\r\n        }\r\n    };\r\n\r\n}\r\n\r\nexport default StudentOverview;","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\n\r\nimport {Breadcrumb, BreadcrumbItem, Form, Button, Tab, Tabs} from \"react-bootstrap\";\r\n\r\nclass CompanyProfile extends Component {\r\n\r\n    state = {\r\n        redirect: \"\",\r\n        redirectToLink: false,\r\n        class_id: 0,\r\n        key: 'home'\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        this.getTutorCompanyInfo();\r\n        this.getCompanyInformation();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'classViewContent '}>\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem href={'/loggedin/Company'}>Unternehmen</BreadcrumbItem>\r\n                    <BreadcrumbItem href={'loggedin/Company/CompanyProfile'} active>Profil</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                {this.displayCompanyInfo()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onChangeCompany = (e) => {\r\n        let company = this.state.companyData;\r\n        company[([e.target.name])] = e.target.value;\r\n        this.setState({\r\n            companyData: company\r\n        });\r\n    }\r\n\r\n    onChangeTutor = (e) => {\r\n        let tutor = this.state.tutorData;\r\n        tutor[([e.target.name])] = e.target.value;\r\n        this.setState({\r\n            tutorData: tutor\r\n        });\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=updateTCInfo\";\r\n        let company = this.state.companyData;\r\n        let tutor = this.state.tutorData;\r\n\r\n        let params = new URLSearchParams();\r\n        params.append('tutor_id', tutor.id);\r\n        params.append('company_id', company.id);\r\n        params.append('firstname', tutor.firstname);\r\n        params.append('surname', tutor.surname);\r\n        params.append('t_email', tutor.email);\r\n        params.append('address', company.address);\r\n        params.append('c_email', company.email);\r\n        params.append('companyname', company.name);\r\n        params.append('phonenumber', company.phonenumber);\r\n\r\n\r\n        const axios = require('axios');\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n        })\r\n        this.forceUpdate();\r\n        this.handleSelect(\"home\")\r\n    }\r\n\r\n    handleSelect = (input_key) => {\r\n        this.setState({\r\n            key: input_key\r\n        });\r\n    }\r\n\r\n    displayCompanyInfo = () => {\r\n\r\n        if (this.state.companyData !== undefined && this.state.tutorData !== undefined) {\r\n            let company = this.state.companyData;\r\n            let tutor = this.state.tutorData;\r\n            return (<div className={\"well\"}>\r\n                    <Tabs activeKey={this.state.key} onSelect={this.handleSelect}>\r\n                        <Tab eventKey=\"home\" title=\"Home\">\r\n\r\n                            <Form id={\"tab\"}>\r\n                                <Form.Group controlId=\"Username\" className={\"mt-3\"}>\r\n                                    <Form.Label>Namen des Unternehmens</Form.Label>\r\n                                    <Form.Control type={\"text\"} value={company.name} disabled/>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"Firstname\">\r\n                                    <Form.Label>Vorname</Form.Label>\r\n                                    <Form.Control type={\"text\"} value={tutor.firstname} disabled/>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"Surname\">\r\n                                    <Form.Label>Nachname</Form.Label>\r\n                                    <Form.Control type={\"text\"} value={tutor.surname} disabled/>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"t_email\">\r\n                                    <Form.Label>Email des Tutors</Form.Label>\r\n                                    <Form.Control type={\"text\"} value={tutor.email} disabled/>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"c_email\">\r\n                                    <Form.Label>Email des Unternehmens</Form.Label>\r\n                                    <Form.Control type={\"email\"} value={company.email} disabled/>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"phonenumber\">\r\n                                    <Form.Label>Telefonnummer</Form.Label>\r\n                                    <Form.Control type={\"tel\"} disabled value={company.phonenumber}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"address\">\r\n                                    <Form.Label>Adresse</Form.Label>\r\n                                    <Form.Control type={\"text\"} disabled value={company.address}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Tab>\r\n                        <Tab eventKey={\"edit\"} title={\"Edit\"}>\r\n                            <Form id={\"tab\"} onSubmit={this.handleSubmit} ref=\"form\" >\r\n                                <Form.Group controlId=\"formUsername\" className={\"mt-3\"}>\r\n                                    <Form.Label>Namen des Unternehmens</Form.Label>\r\n                                    <Form.Control type={\"text\"} defaultValue={company.name} name={\"name\"}\r\n                                                  onChange={this.onChangeCompany} required/>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formFirstname\">\r\n                                    <Form.Label>Vorname</Form.Label>\r\n                                    <Form.Control type={\"text\"} defaultValue={tutor.firstname} name={\"firstname\"}\r\n                                                  onChange={this.onChangeTutor} required/>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formSurname\">\r\n                                    <Form.Label>Nachname</Form.Label>\r\n                                    <Form.Control type={\"text\"} defaultValue={tutor.surname} name={\"surname\"}\r\n                                                  onChange={this.onChangeTutor} required/>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formSurname\">\r\n                                    <Form.Label>Email des Tutors</Form.Label>\r\n                                    <Form.Control type={\"text\"} defaultValue={tutor.email} name={\"email\"}\r\n                                                  onChange={this.onChangeTutor} required/>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formEmail\">\r\n                                    <Form.Label>Email des Unternehmens</Form.Label>\r\n                                    <Form.Control type={\"email\"} defaultValue={company.email} name={\"email\"}\r\n                                                  onChange={this.onChangeCompany} required/>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formPhonenumber\">\r\n                                    <Form.Label>Telefonnummer</Form.Label>\r\n                                    <Form.Control type={\"tel\"} defaultValue={company.phonenumber} name={\"phonenumber\"}\r\n                                                  onChange={this.onChangeCompany} pattern={\"[- \\s\\./0-9]{9,12}\"}\r\n                                                  title={'z.B 0471 123456 oder 333 487 9809'} required>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formAddress\">\r\n                                    <Form.Label>Adresse</Form.Label>\r\n                                    <Form.Control type={\"text\"} defaultValue={company.address} name={\"address\"}\r\n                                                  onChange={this.onChangeCompany} required>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Button className={\"m-2\"} variant=\"success\" type=\"submit\">\r\n                                    Abschicken\r\n                                </Button>\r\n                            </Form>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    getCompanyInformation = () => {\r\n\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=getOwnCompany\";\r\n        const axios = require('axios');\r\n        axios({\r\n            method: 'post',\r\n            url: url\r\n        }).then((res) => {\r\n            this.setState({companyData: res.data});\r\n        })\r\n\r\n    }\r\n\r\n    getTutorCompanyInfo = () => {\r\n        if (localStorage.getItem('user') != null) {\r\n            let url = localStorage.getItem('url');\r\n            url += \"?action=getEncryptedTokenData\";\r\n            const axios = require('axios');\r\n            axios({\r\n                method: 'post',\r\n                url: url\r\n            }).then((res) => {\r\n                this.setState({tutorData: res.data});\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default CompanyProfile;","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Button, ProgressBar} from \"react-bootstrap\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Radio} from 'antd';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\nclass InternshipRating extends Component {\r\n    state = {\r\n        redirect: \"\",\r\n        currentRatingIndex: 1,\r\n        criteria: [\r\n            {\r\n                label: 'ungenügend',\r\n                rating: \"1\"\r\n            },\r\n            {\r\n                label: 'genügend',\r\n                rating: \"2\"\r\n            },\r\n            {\r\n                label: 'befriedigend',\r\n                rating: \"3\"\r\n            },\r\n            {\r\n                label: 'gut',\r\n                rating: \"4\"\r\n            },\r\n            {\r\n                label: 'sehr gut',\r\n                rating: \"5\"\r\n            }\r\n        ],\r\n        redirectToLink: false,\r\n        ratingcriteria: [],\r\n        internshipId: this.props.match.params.id,\r\n        dialogIsOpen: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getInternshipData();\r\n    }\r\n\r\n    changeRating = (e) => {\r\n        this.setState({currentRatingIndex: this.state.currentRatingIndex + 1})\r\n\r\n        let id = e.target.name;\r\n        let value = e.target.value;\r\n        let currentValues = this.state.ratingcriteria;\r\n        currentValues[id - 1].rating = value;\r\n\r\n        this.setState({\r\n            ratingcriteria: currentValues\r\n        })\r\n    }\r\n    getInternshipData = () => {\r\n        if (this.state.internshipId) {\r\n            let url = localStorage.getItem('url');\r\n            let user = JSON.parse(localStorage.getItem('user'));\r\n            url += \"?action=getEvaluationPointsByInternship\";\r\n            const axios = require('axios');\r\n            const params = new URLSearchParams();\r\n            params.append(\"id\", this.state.internshipId);\r\n            params.append('tutor_id', user.id)\r\n            axios({\r\n                method: 'post',\r\n                url: url,\r\n                data: params\r\n            }).then((res) => {\r\n                if (res.data !== 'NotTutorForInternship') {\r\n                    this.setState({\r\n                        ratingcriteria: res.data\r\n                    });\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    getRatingcriteria = () => {\r\n\r\n        if (this.state.ratingcriteria !== null) {\r\n            if (true) {\r\n                let toDisplay = [];\r\n                let criteria = [];\r\n\r\n                this.state.criteria.map((s, k) => {\r\n                    criteria.push(<Radio.Button className={\"m-2\"} key={k} value={s.rating}\r\n                                                name={k}>{s.label}</Radio.Button>)\r\n                });\r\n                toDisplay.push(\r\n                    this.state.ratingcriteria.map((s, k) => {\r\n                        let rating = this.state.ratingcriteria[k].rating;\r\n                        return (\r\n                            <div key={k} hidden={k != this.state.currentRatingIndex}>\r\n                                <h1 className={'mt-2'} id={s.name}> {s.name}</h1>\r\n                                <Radio.Group name={s.id} onChange={this.changeRating} defaultValue={\"\" + rating + \"\"}>\r\n                                    {criteria}\r\n                                </Radio.Group>\r\n                            </div>)\r\n\r\n                    })\r\n                )\r\n                {\r\n                    this.isAllowed(toDisplay)\r\n                }\r\n                return toDisplay;\r\n            }\r\n        }\r\n    }\r\n\r\n    getEvaluationofInternship = () => {\r\n        let evaluationsPoints = this.state.ratingcriteria;\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=insertInternshipRating&internship_id=\" + this.state.internshipId;\r\n        const axios = require('axios');\r\n        const params = new URLSearchParams();\r\n        console.log(evaluationsPoints)\r\n        for (let i = 0; i < evaluationsPoints.length; i++) {\r\n            var temp = [];\r\n            temp.push(\"id\", evaluationsPoints[i].id);\r\n            temp.push(\"name\", evaluationsPoints[i].name);\r\n            temp.push(\"description\", evaluationsPoints[i].description);\r\n            temp.push(\"rating\", evaluationsPoints[i].rating);\r\n            params.append(i, JSON.stringify(temp))\r\n        }\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n            this.setState({companyData: res.data});\r\n            let worked = true;\r\n            if (res.data === false) {\r\n                worked = false;\r\n            }\r\n            for (let i = 0; i < evaluationsPoints.length && worked === true; i++) {\r\n                if (res.data[i] === 'false') {\r\n                    worked = false;\r\n                }\r\n            }\r\n            if (worked === false) {\r\n                console.log(\"error\", res.data);\r\n            } else {\r\n                console.log(\"worked\", res.data);\r\n                this.openInternshipData(this.state.internshipId)\r\n            }\r\n        })\r\n        this.setState({\r\n            dialogIsOpen: false\r\n        })\r\n\r\n    };\r\n\r\n    isAllowed = (toDisplay) => {\r\n        if (this.state.ratingcriteria.length !== 0 && this.state.currentRatingIndex == this.state.ratingcriteria.length) {\r\n            toDisplay.push(\r\n                <button className={\"btn btn-primary w-25 mt-1\"} key={'button'} onClick={this.handleClickOpen}>Bewertung\r\n                    abschicken</button>);\r\n        }\r\n    };\r\n    handleClickOpen = () => {\r\n        this.setState({\r\n            dialogIsOpen: true\r\n        })\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            dialogIsOpen: false\r\n        })\r\n    };\r\n    prevStep = () => {\r\n        this.setState({currentRatingIndex: this.state.currentRatingIndex - 1})\r\n    }\r\n\r\n    nextStep = () => {\r\n        this.setState({currentRatingIndex: this.state.currentRatingIndex + 1})\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        if (this.state.redirectToLink !== false) {\r\n            return <Redirect to={this.state.redirectToLink}/>;\r\n        }\r\n        return (\r\n            <div className={'classViewContent bg-light'}>\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem href={'/loggedin/company'}>Unternehmen</BreadcrumbItem>\r\n                    <BreadcrumbItem onClick={() => this.openInternshipData(this.state.internshipId)}>Praktikums\r\n                        Status</BreadcrumbItem>\r\n                    <BreadcrumbItem href={'/loggedin/company/InternshipRating'} active>Rating</BreadcrumbItem>\r\n                </Breadcrumb>\r\n\r\n                <div>\r\n                    <div>\r\n                        <ProgressBar\r\n                            label={this.state.currentRatingIndex + \"/\" +this.state.ratingcriteria.length}\r\n                            now={this.state.currentRatingIndex / this.state.ratingcriteria.length * 100}></ProgressBar>\r\n                    </div>\r\n\r\n                    <div className={\"w-50 m-auto text-center\"}>\r\n                        {\r\n                            this.getRatingcriteria()\r\n                        }\r\n                        <div className={\"w-100 d-flex justify-content-between\"}>\r\n                            <Button onClick={() => this.prevStep()}>Zurück</Button>\r\n                            <Button onClick={() => this.nextStep()}>Weiter</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Dialog\r\n                    open={this.state.dialogIsOpen}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle>\r\n                        Confirmation\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Sind sie sicher die Bewertung abzuschicken?\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button autoFocus onClick={this.handleClose} className={\"btn btn-primary\"}>\r\n                            Abbrechen\r\n                        </Button>\r\n\r\n                        <Button onClick={this.getEvaluationofInternship} className={\"btn btn-primary\"}>\r\n                            Absenden\r\n                        </Button>\r\n\r\n\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n    openInternshipData = (id) => {\r\n        this.setState({redirectToLink: \"/loggedin/company/InternshipInformation/\" + id})\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default InternshipRating;\r\n\r\n","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Row, Col, Card, ListGroup, ProgressBar} from \"react-bootstrap\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass InternshipInformation extends Component {\r\n    state = {\r\n        redirect: \"\",\r\n        redirectToLink: false,\r\n        class_id: 0,\r\n        internship: null,\r\n        schooclass: null,\r\n        student: null,\r\n        schoolperson: null,\r\n        tutorCompany: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getInternshipById(this.props.match.params.id);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (!(this.state.internship && this.state.schooclass && this.state.student && this.state.schoolperson && this.state.tutorCompany)) {\r\n            return <></>;\r\n        }\r\n            if (this.state.redirectToLink !== false) {\r\n            return <Redirect to={this.state.redirectToLink}/>;\r\n        }\r\n        return (\r\n            <div className={'classViewContent bg-light'}>\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem href={'/loggedin/company/'}>Unternehmen</BreadcrumbItem>\r\n                    <BreadcrumbItem href={'/loggedin/company/InternshipInformation'} active>Praktikums\r\n                        Informationen</BreadcrumbItem>\r\n                </Breadcrumb>\r\n\r\n                <Row>\r\n                    <Col className={'m-5'}>\r\n                        <h4 className={\"unimportant\"}>Praktikums Informationen von</h4>\r\n                        <h1>{this.state.student.firstname + \" \" + this.state.student.surname}</h1>\r\n                    </Col>\r\n\r\n\r\n\r\n                    <Col className={'col-auto '}>\r\n                        {this.canRate()}\r\n                        <button className={'btn btn-primary m-3'}\r\n                                onClick={() => this.openInternshipWorkDays(this.state.internship.id)}>WorkDays\r\n                        </button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {this.viewInternshipData()}\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    viewInternshipData = () => {\r\n           return (\r\n                <div className={'m-2 p-2'}>\r\n                    <Card.Header>Praktikumstutor: {this.state.tutorCompany.surname + \" \" + this.state.tutorCompany.firstname}</Card.Header>\r\n                    <Card.Body>\r\n                        <ListGroup.Item>\r\n                            <Col>\r\n                                <Row> Schüler: {this.state.student.surname + \" \" + this.state.student.firstname} </Row>\r\n                                <Row>Klasse: {this.state.schooclass.name} </Row>\r\n                            </Col>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            Schultutor: {this.state.schoolperson.surname + \" \" + this.state.schoolperson.firstname}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Col>\r\n                                <Row> Von: {this.state.internship.from}</Row>\r\n                                <Row> Bis: {this.state.internship.to} </Row>\r\n                            </Col>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <ProgressBar now={(this.state.internship.state_id / 10) * 100}\r\n                                         label={(this.state.internship.state_id / 10) * 100 + \"%\"}/>\r\n                        </ListGroup.Item>\r\n                    </Card.Body>\r\n                </div>\r\n            )\r\n\r\n    }\r\n    canRate = () => {\r\n        if (this.state.internship) {\r\n            if (this.state.internship.rating === null && this.state.internship.state_id === \"8\" && this.state.internship.tutor_company_id === this.state.userData.id) {\r\n                return (\r\n                    <button className={'btn btn-primary m-3'}\r\n                            onClick={() => this.openInternshipRating(this.state.internship.id)}>Rating</button>\r\n                )\r\n            }\r\n        }\r\n    }\r\n    openInternshipRating = (id) => {\r\n        this.setState({redirectToLink: \"./InternshipRating/\" + id})\r\n    }\r\n    openInternshipWorkDays = (id) => {\r\n        this.setState({redirectToLink: \"./InternshipWorkDays/\" + id})\r\n    }\r\n\r\n    getInternshipById = (id) => {\r\n        const axios = require('axios');\r\n\r\n        let url = localStorage.getItem('url');\r\n\r\n        let userData = localStorage.getItem('user');\r\n        userData = JSON.parse(userData);\r\n        this.setState({userData: userData});\r\n        const params = new URLSearchParams();\r\n        url = url + '?action=getInternshipInformationById';\r\n        params.append(\"id\", id);\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n            if (res.data.error === undefined) {\r\n                console.log(res.data)\r\n                if (res.data.internship && res.data.schoolperson && res.data.student && res.data.schoolperson) {\r\n                    this.setState({\r\n                        internship: res.data.internship,\r\n                        schooclass: res.data.schooclass,\r\n                        student: res.data.student,\r\n                        schoolperson: res.data.schoolperson,\r\n                        tutorCompany: res.data.tutorCompany\r\n                    });\r\n                }\r\n                console.log(res.data);\r\n                this.setState({loadedData: true});\r\n            } else {\r\n                console.error(\"ERROR LOADING DATA\")\r\n            }\r\n\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default InternshipInformation;\r\n","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Card, Col, Row} from \"react-bootstrap\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nimport {FaUserEdit} from 'react-icons/fa';\r\n\r\n\r\nclass company extends Component {\r\n    state = {\r\n        show: false,\r\n        token: \"\",\r\n        data: null,\r\n        internshipData: null,\r\n        submitted: false,\r\n\r\n        redirect: \"\",\r\n        redirectToLink: false,\r\n        class_id: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getCompanyInformation();\r\n        this.getAllInternshipsbyCompany();\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirectToLink != false) {\r\n            return <Redirect to={this.state.redirectToLink}/>;\r\n        }\r\n\r\n        return (\r\n            <div className={'classViewContent bg-light'}>\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem href={'/loggedin/Company/'} active> Unternehmen</BreadcrumbItem>\r\n                </Breadcrumb>\r\n\r\n                <Row>\r\n                    <Col className={'m-5'}>\r\n                        Willkommen {this.getCompanyName()}\r\n                    </Col>\r\n\r\n                    <Col className={'col-auto m-5'}>\r\n                        <a className={'btn btn-primary'} href={\"./CompanyProfile/\"}><FaUserEdit/></a>\r\n                    </Col>\r\n                </Row>\r\n                <hr/>\r\n                <Row>\r\n                    <Col>\r\n                        <span>Klassen: </span>\r\n\r\n                        <div id={\"classes\"} className={\"d-flex flex-wrap justify-content-center\"}>\r\n                            {this.displayInternships()}\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getCompanyName = () => {\r\n        if (this.state.companyData != null) {\r\n            return (\r\n                <h1>{this.state.companyData.name}</h1>\r\n            )\r\n        }\r\n    }\r\n\r\n    displayInternships = () => {\r\n        function evaluateState(state) {\r\n            //console.log(state)\r\n            if (state.state_id) {\r\n                //console.log(state.state_id)\r\n                return state.state_id / 6 * 100;\r\n            }\r\n            return 100\r\n        }\r\n\r\n        function rateNow(rating, state) {\r\n            if (rating === null && state === \"10\") {\r\n                return (<span className=\"badge badge-danger float-right\">Rate Now</span>);\r\n            }\r\n        }\r\n\r\n        //console.log(this.state.internshipData);\r\n        if (this.state.internshipData != null) {\r\n            let classes = this.state.internshipData;\r\n            //console.log(classes);\r\n            let schoolClassNames = Object.keys(this.state.internshipData);\r\n            return (\r\n\r\n                schoolClassNames.map((v) => {\r\n                    //console.log(v)\r\n                    let classname = v.split(\",\")[1];\r\n                    let schoolyear = v.split(\",\")[0];\r\n                    let classActive = this.state.internshipData[v].active;\r\n                    return (\r\n                        <Card key={v} className={\" w-25  m-4 p-2\"}>\r\n                            <h1>\r\n                                <div className=\"d-flex bd-highlight mb-3 align-items-baseline\">\r\n                                    <div className=\"p-2 bd-highlight\"><h1>{classname}</h1></div>\r\n                                    <div className=\"p-2 bd-highlight text-secondary\"><h3>{schoolyear}</h3></div>\r\n                                </div>\r\n                            </h1>\r\n                            {\r\n\r\n                                this.state.internshipData[v].internships.map((k, a) => {\r\n                                    if (k.length === 0) {\r\n                                        return null;\r\n                                    } else if (k.tutor_company_id == this.state.userData.id) {\r\n                                        return <div>\r\n                                            <Card className={\" m-2 p-2\"}\r\n                                                  onClick={() => this.openInternshipStatus(k.internship_id)} key={a}>\r\n                                                <div>\r\n                                                    {k.studentFirstName + \" \" + k.studentSurname}\r\n                                                    {rateNow(k.rating, k.state_id)}\r\n                                                </div>\r\n                                            </Card>\r\n                                        </div>\r\n                                    }\r\n                                })\r\n                            }\r\n                        </Card>\r\n                    )\r\n\r\n                })\r\n            )\r\n        }\r\n    };\r\n\r\n    openInternshipStatus = (id) => {\r\n        this.setState({redirectToLink: \"./InternshipInformation/\" + id})\r\n    }\r\n\r\n    getCompanyInformation = () => {\r\n        if (localStorage.getItem('user') != null) {\r\n            let url = localStorage.getItem('url');\r\n            url += \"?action=getOwnCompany\";\r\n            const axios = require('axios');\r\n            axios({\r\n                method: 'post',\r\n                url: url\r\n            }).then((res) => {\r\n                this.setState({companyData: res.data});\r\n            })\r\n        }\r\n    }\r\n\r\n    getAllInternshipsbyCompany = () => {\r\n        if (localStorage.getItem('user') != null) {\r\n            let url = localStorage.getItem('url');\r\n            url += \"?action=getInternshipByCompany\";\r\n\r\n            const axios = require('axios');\r\n            let userData = localStorage.getItem('user');\r\n            userData = JSON.parse(userData);\r\n            this.setState({userData: userData});\r\n            const params = new URLSearchParams();\r\n            params.append(\"id\", userData.companyID);\r\n            axios({\r\n                method: 'post',\r\n                url: url,\r\n                data: params\r\n            }).then((res) => {\r\n                this.setState({\r\n                    internshipData: res.data\r\n                });\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default company;\r\n","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport {\r\n    Breadcrumb,\r\n    BreadcrumbItem,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    ButtonToolbar,\r\n    DropdownButton,\r\n    DropdownItem\r\n} from \"react-bootstrap\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass AllCompanies extends Component {\r\n    state = {\r\n        redirect: \"\",\r\n        redirectToLink: false,\r\n        class_id: 0,\r\n        allCompaniesData: null,\r\n        selecteditem: 'Alle',\r\n        selectedItemId: '-1',\r\n        selectedSpecialization: 'Alle',\r\n        selectedSpecializationId: '-1',\r\n        error: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getAllCompanies();\r\n        this.getAllDistricts();\r\n        this.getAllSpecializations();\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirectToLink !== false) {\r\n            return <Redirect to={this.state.redirect}/>;\r\n        }\r\n        return (\r\n            <div className={'w-100 adminViewContent'}>\r\n\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem href={'/loggedin/Administration'} active>Administration</BreadcrumbItem>\r\n                </Breadcrumb>\r\n\r\n                <Row>\r\n                    <Col className={'m-5'}>\r\n                        <h1>Alle Unternehmen</h1>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <label>Filtern Nach</label>\r\n                        <ButtonToolbar>\r\n                            {[DropdownButton].map((DropdownType, idx) => (\r\n                                <DropdownType className=\"warning\" title={\"Bezirk: \" + this.state.selecteditem}\r\n                                              id={`dropdown-button-drop-${idx + \"district\"}`} key={idx + \"district\"}\r\n                                              onSelect={this.getKeyFromSelected}>\r\n                                    {this.displayData()}\r\n                                </DropdownType>\r\n                            ))}\r\n                        </ButtonToolbar>\r\n\r\n                        <ButtonToolbar>\r\n                            {[DropdownButton].map((DropdownType, idx) => (\r\n                                <DropdownType className=\"warning\"\r\n                                              title={\"Fachrichtung: \" + this.state.selectedSpecialization}\r\n                                              id={`dropdown-button-drop-${idx + \"spec\"}`} key={idx + \"spec\"}\r\n                                              onSelect={this.getKeyFromSelectedSpecialization}>\r\n                                    {this.displaySpecialization()}\r\n                                </DropdownType>\r\n                            ))}\r\n                        </ButtonToolbar>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <div className={'p-1'}>\r\n                            <div className={\"noDividerList\"}>\r\n                                {this.displayCompanies()}\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getAllCompanies = () => {\r\n\r\n        let url = localStorage.getItem('url');\r\n\r\n        url += \"?action=getAllCompanies\";\r\n\r\n        const axios = require('axios');\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            this.setState({allCompaniesData: res.data});\r\n        })\r\n\r\n    };\r\n    getKeyFromSelected = (key) => {\r\n        //console.log(key)\r\n        if (key === \"-1\") {\r\n            this.getAllCompanies();\r\n            this.setState({\r\n                selecteditem: this.state.districts[this.state.districts.length - 1].name,\r\n                selectedItemId: -1\r\n            })\r\n        } else {\r\n\r\n            for (let i = 0; i < this.state.districts.length; i++) {\r\n                if (key == this.state.districts[i].id) {\r\n                    this.setState({\r\n                        selecteditem: this.state.districts[i].name,\r\n                        selectedItemId: this.state.districts[i].id\r\n                    })\r\n                    this.getCompanyByKey(this.state.districts[i].id, this.state.selectedSpecializationId);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    getKeyFromSelectedSpecialization = (key) => {\r\n        //console.log(key)\r\n        if (key === \"-1\") {\r\n            this.getAllCompanies();\r\n            this.setState({\r\n                selectedSpecialization: this.state.specializations[this.state.specializations.length - 1].description,\r\n                selectedSpecializationId: -1\r\n            })\r\n        } else {\r\n            for (let i = 0; i < this.state.specializations.length; i++) {\r\n                if (key == this.state.specializations[i].id) {\r\n                    this.setState({\r\n                        selectedSpecialization: this.state.specializations[i].description,\r\n                        selectedSpecializationId: this.state.specializations[i].id\r\n                    })\r\n                    this.getCompanyByKey(this.state.selectedItemId, this.state.specializations[i].id);\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    };\r\n    getCompanyByKey = (districtId, specializationsId) => {\r\n        //console.log(\"District:\" + districtId, \"SPEC: \" + specializationsId);\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=getCompanyByDistrictAndSpecialization\";\r\n        let params = new URLSearchParams();\r\n        if (districtId != -1) {\r\n            console.log(\"District: \", districtId)\r\n            params.append('districtId', districtId);\r\n        }\r\n        if (specializationsId != -1) {\r\n            console.log(\"specializations_id: \", specializationsId)\r\n            params.append('specializations_id', specializationsId);\r\n        }\r\n\r\n\r\n        const axios = require('axios');\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n            if (res.data.error) {\r\n                this.setState({error: true})\r\n            } else {\r\n                this.setState({allCompaniesData: res.data});\r\n            }\r\n        })\r\n\r\n    };\r\n\r\n\r\n    getAllDistricts = () => {\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=getAllDistricts\";\r\n        const axios = require('axios');\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            console.log(res.data)\r\n            res.data.push({\r\n                id: \"-1\",\r\n                name: \"Alle\"\r\n            });\r\n            this.setState({\r\n                districts: res.data\r\n            });\r\n        })\r\n\r\n    };\r\n\r\n    getAllSpecializations = () => {\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=getAllSpecializations\";\r\n        const axios = require('axios');\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            console.log(res.data)\r\n            res.data.push({\r\n                id: \"-1\",\r\n                description: \"Alle\"\r\n            });\r\n            this.setState({\r\n                specializations: res.data\r\n            });\r\n        })\r\n    };\r\n    displayCompanies = () => {\r\n        if (this.state.allCompaniesData != null && this.state.error != true) {\r\n\r\n            function hashCode(str) {\r\n                var hash = 0;// java String#hashCode\r\n                var i;\r\n                if (str != null) {\r\n\r\n                    for (i = 0; i < str.length; i++) {\r\n                        hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n                    }\r\n                    return hash;\r\n                } else {\r\n                    let str = \"Mustermann\";\r\n                    for (i = 0; i < str.length; i++) {\r\n                        hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n                    }\r\n                    return hash;\r\n                }\r\n            }\r\n\r\n            function intToRGB(i) {\r\n                var c = (i & 0x00FFFFFF)\r\n                    .toString(16)\r\n                    .toUpperCase();\r\n\r\n                return \"00000\".substring(0, 6 - c.length) + c;\r\n            }\r\n\r\n            function rgbToHex(rgb) {\r\n                var hex = Number(rgb).toString(16);\r\n                if (hex.length < 2) {\r\n                    hex = \"0\" + hex;\r\n                }\r\n                return hex\r\n            }\r\n\r\n            function getRandomColor() {\r\n                var colors = []\r\n\r\n                colors.push(rgbToHex(255) + \"\" + rgbToHex(203) + \"\" + rgbToHex(0))\r\n                colors.push(rgbToHex(0) + \"\" + rgbToHex(48) + \"\" + rgbToHex(80))\r\n\r\n                return colors[Math.floor(Math.random() * colors.length)];\r\n            }\r\n\r\n            //gets first of firstname and FirstChar of lastname\r\n            function firstChar(companyname) {\r\n                if (companyname != null) {\r\n                    let firstChar = (companyname.substring(0, 1)).toUpperCase();\r\n                    return firstChar;\r\n                } else {\r\n                    return \"M\";\r\n                }\r\n\r\n            }\r\n\r\n            if (!this.state.allCompaniesData) {\r\n                return <div/>\r\n            }\r\n\r\n            let company = [];\r\n\r\n            this.state.allCompaniesData.map(c => {\r\n                company.push(\r\n                    <Card bg={\"light\"} key={c.id}\r\n                          className={\"m-3 w-25 text-center\"} onClick={() => this.openCompanyInfo(c.id)}>\r\n                        <Card.Header>\r\n                            <div className={\"d-flex align-items-baseline\"}>\r\n                                <Avatar\r\n                                    style={{backgroundColor: \"#\" + getRandomColor()}}>{firstChar(c.name)}</Avatar>\r\n                                <div className={\"ml-2\"}>{c.name}</div>\r\n                            </div>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <h6>{c.email}</h6>\r\n                        </Card.Body>\r\n                    </Card>)\r\n            });\r\n            return company\r\n        }\r\n    };\r\n\r\n    openCompanyInfo = (id) => {\r\n        this.setState({\r\n            redirect: \"./CompanyInformation/\" + id,\r\n            redirectToLink: true\r\n        })\r\n\r\n\r\n    };\r\n\r\n    displayData = () => {\r\n        if (this.state.districts) {\r\n            let districts = this.state.districts;\r\n            return (\r\n                districts.map((v) => {\r\n                    return (\r\n                        <DropdownItem key={v.id} eventKey={v.id}>{v.name}</DropdownItem>\r\n                    )\r\n                })\r\n            )\r\n\r\n        }\r\n    };\r\n\r\n    displaySpecialization = () => {\r\n        if (this.state.specializations) {\r\n            let specializations = this.state.specializations;\r\n            return (\r\n                specializations.map((v) => {\r\n                    return (\r\n                        <DropdownItem key={v.id} eventKey={v.id}>{v.description}</DropdownItem>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    };\r\n\r\n}\r\n\r\nexport default AllCompanies;\r\n","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Row, Col, Card, ButtonToolbar, DropdownButton, DropdownItem} from \"react-bootstrap\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nclass AllCompanies extends Component {\r\n    state = {\r\n        redirect: \"\",\r\n        redirectToLink: false,\r\n        class_id: 0,\r\n        allSchoolpersonsData: null,\r\n        selecteditem: 'Alle'\r\n    };\r\n\r\n    /**\r\n     * calling get all Specializations and all Schoolpersons from API when component did mount\r\n     */\r\n    componentDidMount() {\r\n        this.getAllSchoolperson();\r\n        this.getAllSpecialization();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'adminViewContent bg-light'}>\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem href={'/loggedin/'}>Administration</BreadcrumbItem>\r\n                </Breadcrumb>\r\n\r\n                <Row>\r\n                    <Col className={'m-5'}>\r\n                        <h1>Alle Lehrer / Klassenlehrer</h1>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col><label>Filtern nach: </label>\r\n                        <ButtonToolbar>\r\n                            {[DropdownButton].map((DropdownType, idx) => (\r\n                                <DropdownType\r\n                                    className=\"warning\"\r\n                                    title={\"Fachrichtung: \" + this.state.selecteditem}\r\n                                    id={`dropdown-button-drop-${idx}`}\r\n                                    key={idx}\r\n                                    onSelect={this.getKeyFromSelected}\r\n                                >\r\n                                    {this.insertDataIntoDropdown()}\r\n                                </DropdownType>\r\n                            ))}\r\n                        </ButtonToolbar>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <div className={'p-1'}>\r\n                            <div id={\"companies\"} className={\"noDividerList\"}>\r\n                                {this.displaySchoolpersons()}\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * gets  Schoolpersons By specializations for dropdown\r\n     * if -1\r\n     *      gets All Schoolpersons\r\n     *  else\r\n     *      gets Schoolpersons By SpecializationID\r\n     * @param key\r\n     */\r\n    getKeyFromSelected = (key) => {\r\n        console.log(this.state)\r\n        if (key === \"-1\") {\r\n            this.getAllSchoolperson();\r\n            this.setState({\r\n                selecteditem: this.state.specializations[this.state.specializations.length - 1].description\r\n            })\r\n        } else {\r\n            this.getSchoolpersonsByKey(key);\r\n            for (let i = 0; i < this.state.specializations.length; i++) {\r\n                if (key == this.state.specializations[i].id) {\r\n                    this.setState({\r\n                        selecteditem: this.state.specializations[i].description\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * gets Schoolpersons by SpecializationsID\r\n     * @param id\r\n     */\r\n    getSchoolpersonsByKey = (id) => {\r\n\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=getSchoolpersonBySpecializations\";\r\n\r\n        let params = new URLSearchParams();\r\n        params.append('id', id);\r\n\r\n        const axios = require('axios');\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n            this.setState({allSchoolpersonsData: res.data});\r\n        })\r\n\r\n    };\r\n\r\n    /**\r\n     * gets All Specializations from API\r\n     */\r\n    getAllSpecialization = () => {\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=getAllSpecializations\";\r\n\r\n        const axios = require('axios');\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            res.data.push({\r\n                id: \"-1\",\r\n                description: \"Alle\"\r\n            });\r\n            this.setState({\r\n                specializations: res.data\r\n            });\r\n        })\r\n\r\n    };\r\n\r\n    /**\r\n     * gets all Schoolpersons from API\r\n     */\r\n    getAllSchoolperson = () => {\r\n\r\n        let url = localStorage.getItem('url');\r\n\r\n        url += \"?action=getAllSchoolpersons\";\r\n\r\n        const axios = require('axios');\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            console.log(res.data)\r\n            this.setState({allSchoolpersonsData: res.data});\r\n        })\r\n\r\n    };\r\n\r\n    /**\r\n     * creates card with avatars for each Schoolpersons\r\n     * @returns {[]|*}\r\n     */\r\n    displaySchoolpersons = () => {\r\n        if (this.state.allSchoolpersonsData != null) {\r\n\r\n            /**\r\n             * creates a hashnumber by a input String\r\n             *  if  string != null\r\n             *      returns a Hash for Mustermann\r\n             *  else\r\n             *      returns a Hash for provided String\r\n             * @param str\r\n             * @returns {number}\r\n             */\r\n            function hashCode(str) {\r\n                var hash = 0;// java String#hashCode\r\n                var i = 0;\r\n                if (!str) {\r\n                    for (i = 0; i < str.length; i++) {\r\n                        hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n                    }\r\n                    return hash;\r\n                } else {\r\n                    let str = \"Mustermann\";\r\n                    for (i = 0; i < str.length; i++) {\r\n                        hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n                    }\r\n                    return hash;\r\n                }\r\n            }\r\n\r\n            /**\r\n             * converts a Integer into a RGB-Value(String)\r\n             * @param i\r\n             * @returns {string}\r\n             */\r\n            function intToRGB(i) {\r\n                var c = (i & 0x00FFFFFF)\r\n                    .toString(16)\r\n                    .toUpperCase();\r\n\r\n                return \"00000\".substring(0, 6 - c.length) + c;\r\n            }\r\n\r\n\r\n            function rgbToHex(rgb) {\r\n                var hex = Number(rgb).toString(16);\r\n                if (hex.length < 2) {\r\n                    hex = \"0\" + hex;\r\n                }\r\n                return hex\r\n            }\r\n\r\n            function getRandomColor() {\r\n                var colors = []\r\n\r\n                colors.push(rgbToHex(255) + \"\" + rgbToHex(203) + \"\" + rgbToHex(0))\r\n                colors.push(rgbToHex(0) + \"\" + rgbToHex(48) + \"\" + rgbToHex(80))\r\n\r\n                return colors[Math.floor(Math.random() * colors.length)];\r\n            }\r\n\r\n\r\n            /**\r\n             * gets first of firstname and FirstChar of lastname\r\n             */\r\n            function firstCharAndLastChar(firstname, lastname) {\r\n                let firstChar = (firstname.substring(0, 1)).toUpperCase();\r\n                let lastChar = (lastname.substring(0, 1)).toUpperCase();\r\n                return firstChar + lastChar;\r\n            }\r\n\r\n            if (!this.state.allSchoolpersonsData) {\r\n                return <div/>\r\n            }\r\n\r\n            let schoolpersons = [];\r\n\r\n            this.state.allSchoolpersonsData.map(c => {\r\n                console.log(c)\r\n                schoolpersons.push(\r\n                    <Card bg={\"light\"}\r\n                          className={\"m-3 w-25 text-center\"} /*onClick={() => this.openClassInfo(classInfo.id)}*/>\r\n                        <Card.Header>\r\n                            <div className={\"d-flex align-items-baseline\"}>\r\n                                <Avatar\r\n                                    style={{backgroundColor: \"#\" + getRandomColor()}}>{firstCharAndLastChar(c.firstname, c.surname)}</Avatar>\r\n                                <div className={\"ml-2\"}>{c.firstname + \" \" + c.surname}</div>\r\n                            </div>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <h6>{c.email}</h6>\r\n                        </Card.Body>\r\n                    </Card>)\r\n            });\r\n            return schoolpersons\r\n        }\r\n    };\r\n\r\n    /**\r\n     * inserts specializations into the dropdown\r\n     * @returns {*[]}\r\n     */\r\n    insertDataIntoDropdown = () => {\r\n        if (this.state.specializations != null) {\r\n            let specializations = this.state.specializations;\r\n            return (\r\n                specializations.map((v) => {\r\n                    return (\r\n                        <DropdownItem eventKey={v.id}>{v.description}</DropdownItem>\r\n                    )\r\n\r\n\r\n                })\r\n            )\r\n\r\n        }\r\n    };\r\n\r\n}\r\n\r\nexport default AllCompanies;","import React, {Component} from 'react';\r\nimport {Card} from \"react-bootstrap\";\r\n\r\n\r\nclass Imprint extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <Card>\r\n                    <Card.Img>\r\n                    </Card.Img>\r\n                    <Card.Header>\r\n                        <h4>Impressum</h4>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <h5 className=\"card-title\">Product Owner:</h5>\r\n                        <p className=\"card-text\">Alex Larentis</p>\r\n                        <h5 className=\"card-title\">Logo-Design:</h5>\r\n                        <p className=\"card-text\">Gabriel Puff</p>\r\n                        <h5 className=\"card-title\">Frontend:</h5>\r\n                        <p className=\"card-text\">Christoph Weiss</p>\r\n                        <p className=\"card-text\">Maximilian Mauroner</p>\r\n                        <p className=\"card-text\"><ins>Markus Mayr</ins></p>\r\n                        <h5 className=\"card-title\">Backend:</h5>\r\n                        <p className=\"card-text\">Maximilian Mauroner</p>\r\n                        <p className=\"card-text\">Kai Schweigkofler</p>\r\n                        <p className=\"card-text\">Christian Tutzer</p>\r\n                        <h5 className=\"card-title\">Bug-Finder:</h5>\r\n                        <p className=\"card-text\"><ins>Simon Röggla</ins></p>\r\n                        <p className=\"card-text\"><ins>Simon Müller</ins></p>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Imprint;\r\n","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport './sidebar.css';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Sidebar extends Component {\r\n    state = {\r\n        redirect: \"\",\r\n        redirectToLink: false,\r\n        class_id: 0,\r\n        media_title: (<h3 className={\"m-5 text-white text-center\"}>Verwaltung</h3>),\r\n        small: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.checkifMobile();\r\n        window.addEventListener('resize', this.checkifMobile);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.checkifMobile);\r\n    }\r\n\r\n    checkifMobile = () => {\r\n        let mql = window.matchMedia('(min-width: 1000px)');\r\n        let data;\r\n        if (mql.matches) {\r\n            data = (<h3 className={\"m-4 mt-5 text-white text-center\"}><SupervisorAccountIcon/>Verwaltung</h3>);\r\n            this.setState({\r\n                media_title: data\r\n            })\r\n        } else {\r\n            data = (<h3 className={\"m-2 mt-5 text-white  text-center\"}><SupervisorAccountIcon/></h3>);\r\n            this.setState({\r\n                media_title: data\r\n            })\r\n        }\r\n    }\r\n\r\n    closeNav = (bool) => {\r\n        this.setState({small: bool});\r\n    }\r\n\r\n    closeAll = () => {\r\n        for (let elementsByTagNameElement of document.getElementsByTagName(\"details\")) {\r\n            elementsByTagNameElement.removeAttribute(\"open\");\r\n        }\r\n    };\r\n\r\n    clickSingle = (elemnt) => {\r\n\r\n        if (elemnt.target.tagName === \"SUMMARY\") {\r\n            this.closeAll();\r\n\r\n            console.log(elemnt.open);\r\n            elemnt.open = !elemnt.open;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.small) {\r\n            return <div className={\"bg-dark text-white p-4 rounded\"}><MenuIcon onClick={() => {\r\n                this.closeNav(!this.state.small)\r\n            }}/></div>\r\n        }\r\n\r\n        return (\r\n            <div className={'rounded w-100 h-100 p-4 float-left bg-dark text-light'}>\r\n                <div className={\"float-left bg-subNav\"}><MenuIcon onClick={() => {\r\n                    this.closeNav(!this.state.small)\r\n                }}/></div>\r\n                <div>\r\n                    {this.state.media_title}\r\n                    <div className={\"mt-5 menuPointsSidebarWrapper\"}>\r\n                        <details className={\"detailsDark\"} onClick={this.clickSingle} open>\r\n                            <summary className={\" w-100 text-white text-left \"}>Suchen</summary>\r\n                            <div>\r\n                                <Link className={\"text-left\"} to={\"/loggedin/Administration/Search\"}>Alles\r\n                                    Durchsuchen</Link>\r\n                            </div>\r\n                        </details>\r\n                        <details className={\"detailsDark\"} onClick={this.clickSingle}>\r\n                            <summary className={\"w-100 text-white text-left \"}>Klassen</summary>\r\n                            <div>\r\n                                <Link className={\"text-left\"} to={\"/loggedin/Administration/\"}> Alle Klassen</Link>\r\n                            </div>\r\n                            <div>\r\n                                <Link className={\"text-left\"} to={\"/loggedin/Administration/NewClass\"}> Klasse\r\n                                    hinzufügen</Link>\r\n                            </div>\r\n                        </details>\r\n                        <details className={\"detailsDark\"} onClick={this.clickSingle}>\r\n                            <summary className={\"w-100 text-white text-left\"}>Unternehmen</summary>\r\n                            <div>\r\n                                <Link className={\"text-left\"} to={\"/loggedin/Administration/AllCompanies\"}> Alle\r\n                                    Unternehmen</Link>\r\n                            </div>\r\n                            <div>\r\n                                <Link className={\"text-left\"} to={\"/loggedin/Administration/NewCompany\"}> Unternehmen\r\n                                    hinzufügen</Link>\r\n                            </div>\r\n                        </details>\r\n                        <details className={\"detailsDark bg-subNav\"} onClick={this.clickSingle}>\r\n                            <summary className={\"w-100 text-white text-left\"}>Verträge</summary>\r\n                            <div>\r\n                                <Link className={\"text-left\"} to={\"/loggedin/Administration/ContractsView\"}> Alle\r\n                                    Verträge</Link>\r\n                            </div>\r\n                            <div>\r\n                                <Link className={\"text-left\"} to={\"/loggedin/Administration/notCheckedContracts\"}> Nicht kontrollierte Verträge</Link>\r\n                            </div>\r\n                        </details>\r\n                        <details className={\"detailsDark bg-subNav\"} onClick={this.clickSingle}>\r\n                            <summary className={\"w-100 text-white text-left \"}>Schüler</summary>\r\n                            <div>\r\n                                <Link className={\"text-left\"} to={\"/loggedin/Administration/StudentOverview\"}> Alle\r\n                                    Schüler</Link>\r\n                            </div>\r\n                        </details>\r\n                        <details className={\"detailsDark \"} onClick={this.clickSingle}>\r\n                            <summary className={\"w-100 text-white bg-subNav text-left\"}>Lehrer</summary>\r\n                            <div>\r\n                                <Link className={\"text-left\"} to={\"/loggedin/Administration/AllSchoolpersons\"}>Alle\r\n                                    Lehrer/Klassenlehrer</Link>\r\n                            </div>\r\n                            <div>\r\n                                <Link className={\"text-left\"} to={\"/loggedin/Administration/NewSchoolperson\"}>Lehrer\r\n                                    hinzufügen</Link>\r\n                            </div>\r\n                        </details>\r\n                        <details className={\"detailsDark \"} onClick={this.clickSingle}>\r\n                            <summary className={\"w-100 text-white bg-subNav text-left\"}>Email</summary>\r\n                            <div>\r\n                                <Link className={\"text-left\"} to={\"/loggedin/Administration/RatingMail\"}>Emails\r\n                                    senden</Link>\r\n                            </div>\r\n                        </details>\r\n                        <details className={\"detailsDark \"} onClick={this.clickSingle}>\r\n                            <summary className={\"w-100 text-white bg-subNav text-left\"}>Verwaltung</summary>\r\n                            <div>\r\n                                <Link className={\"text-left\"} to={\"/loggedin/Administration/AllRoles\"}>Rollen</Link>\r\n                            </div>\r\n                            <div>\r\n                                <Link className={\"text-left\"}\r\n                                      to={\"/loggedin/Administration/AllSpecializations\"}>Fachrichtungen</Link>\r\n                            </div>\r\n                        </details>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sidebar;\r\n","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Button, Card} from \"react-bootstrap\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\n\r\n\r\nimport './AdministrationCusomStyle.css'\r\nimport FileViewer from \"./fileViewer\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport {Divider} from \"@material-ui/core\";\r\n\r\nclass ContractsView extends Component {\r\n    state = {\r\n        data: {},\r\n        dataLoaded: false,\r\n        currentContractPath: null,\r\n        unmountFileViewer: false,\r\n        showValidationModal: false,\r\n        enableValidation: false,\r\n        fileOpen: false,\r\n        fileUrl: null,\r\n        internshipId: null,\r\n        reasonToDeny: [],\r\n        contract_state_data: null,\r\n        dialogIsOpen: false,\r\n        stateValues: null,\r\n        lengthContractState: null,\r\n        isApproved: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n        this.getContractStates();\r\n\r\n    }\r\n\r\n    loadData = () => {\r\n        const axios = require('axios');\r\n        let url = localStorage.getItem('url');\r\n        url += '?action=getContractsFolderContent';\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            this.setState({data: res.data})\r\n        });\r\n    };\r\n\r\n\r\n    getFile = (path) => {\r\n        const axios = require('axios');\r\n        let url = localStorage.getItem('url');\r\n        url += '?action=getContract';\r\n\r\n        let params = new URLSearchParams();\r\n        params.append(\"path\", path);\r\n\r\n        axios({\r\n            responseType: 'arraybuffer',\r\n            method: 'POST',\r\n            data: params,\r\n            url\r\n        }).then((res) => {\r\n            let data = new Blob([res.data], {type: res.headers['content-type']});\r\n\r\n            let url = window.URL.createObjectURL(data);\r\n\r\n            this.setState({fileUrl: url});\r\n            this.setState({currentContractPath: path})\r\n\r\n            let fileViewer = document.getElementById('fileViewer');\r\n\r\n            if (fileViewer !== null) {\r\n                document.removeChild(fileViewer);\r\n            }\r\n            this.setState({\r\n                url\r\n            })\r\n        });\r\n    };\r\n\r\n\r\n    getContractPath = (id) => {\r\n        const axios = require('axios');\r\n        let url = localStorage.getItem('url');\r\n        url += '?action=getContractPath';\r\n\r\n        let data = new URLSearchParams();\r\n        data.append(\"id\", id);\r\n\r\n        let that = this;\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            data,\r\n            url\r\n        }).then((res) => {\r\n            this.setState({currentContractPath: res.data.path})\r\n            that.getFile(res.data.path)\r\n        });\r\n    };\r\n\r\n    getContractStates = () => {\r\n        const axios = require('axios');\r\n        let url = localStorage.getItem('url');\r\n        url += '?action=getAllContractStates';\r\n        axios({\r\n            method: \"POST\",\r\n            url\r\n        }).then((res) => {\r\n            if (res.data) {\r\n\r\n                this.setState({\r\n                    contract_state_data: res.data,\r\n                    lengthContractState: res.data.length\r\n                })\r\n                this.createStateArray();\r\n                this.viewModalBody();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    clickedNode = (id, path, isApproved) => {\r\n        if (id) {\r\n            this.setState({fileOpen: true})\r\n            this.setState({internshipId: id});\r\n\r\n            this.getContractPath(id);\r\n            this.setState({enableValidation: true});\r\n        } else if (path) {\r\n            //For not signed contracts\r\n            this.setState({fileOpen: true})\r\n\r\n            this.getFile(path)\r\n            this.setState({enableValidation: false});\r\n        }\r\n        this.setState({isApproved: isApproved});\r\n    };\r\n\r\n    displayTree = () => {\r\n        const renderTree = nodes => (\r\n            <TreeItem onClick={() => this.clickedNode(nodes.internshipId, nodes.path, nodes.isApproved)}\r\n                      nodeId={\"a\" + nodes.id} label={nodes.text}>\r\n                {Array.isArray(nodes.children) ? nodes.children.map(node => renderTree(node)) : null}\r\n            </TreeItem>\r\n        );\r\n        return (\r\n            <TreeView\r\n                defaultCollapseIcon={<ExpandMoreIcon/>}\r\n                defaultExpanded={['1']}\r\n                defaultExpandIcon={<ChevronRightIcon/>}\r\n            >\r\n                {renderTree(this.state.data)}\r\n            </TreeView>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        console.log(this.state);\r\n\r\n\r\n        return (\r\n            <div className={'w-100 adminViewContent bg-light'}>\r\n                <Breadcrumb className={\"flex-shrink-1\"}>\r\n                    <BreadcrumbItem href={'/loggedin/Administration'}>Administration</BreadcrumbItem>\r\n                    <BreadcrumbItem href={'/loggedin/Administration/ClassInformation'}\r\n                                    active={'active'}>ContractInformation</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div>\r\n                    <Dialog open={this.state.dialogIsOpen} onClose={this.handleDialogClose} fullWidth={true}\r\n                            maxWidth={\"xs\"}\r\n                            aria-labelledby=\"form-dialog-title\">\r\n                        <DialogTitle id=\"form-dialog-title\">Zurückweisen</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>\r\n                                Was ist an diesem Vertrag falsch?\r\n                            </DialogContentText>\r\n                            {this.state.reasonToDeny}\r\n                        </DialogContent>\r\n                        <Divider/>\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleDialogClose} color=\"primary\">\r\n                                Abbrechen\r\n                            </Button>\r\n                            <Button onClick={this.handleDialogSave} color=\"primary\">\r\n                                Speichern\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </div>\r\n\r\n                <div className={\"h-100 flex-grow-1 asideDesktopTopMobile fillChildrenOnMobile\"}\r\n                     style={{display: \"flex\", alignItems: \"stretch\", alignContent: \"stretch\", minHeight: \"80vh\", flex: 1}}>\r\n\r\n                    <Card className={\"treeItemContainer m-3\"}\r\n                          style={{float: 'left', maxHeight: \"80vh\", overflow: \"visible\"}}>\r\n                        <Card.Header>Alle Verträge</Card.Header>\r\n                        {this.displayTree()}\r\n                    </Card>\r\n\r\n\r\n                    <Card className={\"m-3\"}\r\n                          style={{\r\n                              float: 'right',\r\n                              maxHeight: \"80vh\",\r\n                              overflow: \"auto\",\r\n                              display: \"flex\",\r\n                              flexDirection: \"column\",\r\n                              alignItems: \"stretch\",\r\n                              alignContent: \"stretch\",\r\n                              flex:1\r\n                          }}>\r\n\r\n                        <Card.Header className={\"d-flex justify-content-center py-3\"}>\r\n                            <Button disabled={!this.state.enableValidation || this.state.isApproved == \"1\"}\r\n                                    className={\"mx-2\"}\r\n                                    onClick={() => this.clickValidation(true)} variant={'success'}>Vertrag\r\n                                Bestätigen <ThumbUpIcon/></Button>\r\n                            <Button disabled={!this.state.fileOpen}\r\n                                    onClick={() => this.downloadContract()}\r\n                                    className={\"mx-2\"}>{this.state.link} <GetAppIcon/></Button>\r\n                            <Button disabled={!this.state.enableValidation || this.state.isApproved == \"1\"}\r\n                                    className={\"mx-2\"}\r\n                                    variant={'danger'}\r\n                                    onClick={() => this.clickValidation(false)}>Vertrag\r\n                                Zurückweisen <ThumbDownIcon/></Button>\r\n                        </Card.Header>\r\n\r\n\r\n                        <Card.Body className={\"overflow-auto\"}>\r\n                            <FileViewer originalPath={this.state.currentContractPath} url={this.state.url}/>\r\n                        </Card.Body>\r\n\r\n                    </Card>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        let arr = this.state.stateValues;\r\n        if (!arr[event.target.value].isChecked) {\r\n            arr[event.target.value].isChecked = true;\r\n        } else {\r\n            arr[event.target.value].isChecked = false;\r\n        }\r\n        this.setState({\r\n            stateValues: arr\r\n        })\r\n        this.viewModalBody();\r\n    };\r\n    sendRateContract = (approved) => {\r\n        let params = new URLSearchParams();\r\n        var stateValues = [];\r\n        if (!approved) {\r\n            for (let i = 0; i < this.state.stateValues.length; i++) {\r\n                var temp = [];\r\n                temp.push(\"id\", this.state.stateValues[i].id);\r\n                temp.push(\"name\", this.state.stateValues[i].name);\r\n                temp.push(\"isChecked\", this.state.stateValues[i].isChecked);\r\n                stateValues.push(temp);\r\n            }\r\n            params.append('stateValues', JSON.stringify(stateValues));\r\n        }\r\n\r\n        params.append('approved', approved)\r\n        params.append('internshipId', this.state.internshipId)\r\n        const axios = require('axios');\r\n        let url = localStorage.getItem('url');\r\n\r\n        url += '?action=rateContract';\r\n        axios({\r\n            method: \"POST\",\r\n            url,\r\n            data: params\r\n        }).then((res) => {\r\n            console.log(res.data)\r\n        });\r\n    }\r\n    createStateArray = () => {\r\n        if (this.state.contract_state_data) {\r\n            var arr = [];\r\n            this.state.contract_state_data.map((v) => {\r\n                arr.push({\r\n                    name: v.name,\r\n                    id: v.id,\r\n                    isChecked: false,\r\n                    isCreated: false\r\n                })\r\n            });\r\n            this.setState({\r\n                stateValues: arr\r\n            })\r\n        }\r\n    }\r\n    remove = (i) => {\r\n        let ContractValue = this.state.contract_state_data;\r\n        ContractValue.splice(i, 1)\r\n        let Values = this.state.stateValues;\r\n        Values.splice(i, 1);\r\n        this.setState({\r\n            contract_state_data: ContractValue,\r\n            stateValues: Values\r\n        })\r\n        this.viewModalBody();\r\n    }\r\n\r\n    getDelete = (isCreated, index) => {\r\n        if (isCreated) {\r\n            return (<DeleteIcon onClick={() => this.remove(index)}/>)\r\n        }\r\n    }\r\n    viewModalBody = () => {\r\n        var temp = [];\r\n        if (this.state.contract_state_data || this.state.stateValues) {\r\n            this.state.contract_state_data.map((v, index) => {\r\n                temp.push(\r\n                    <div>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={this.state.stateValues[index].isChecked}\r\n                                    onChange={this.handleChange}\r\n                                    value={index}\r\n                                    name={v.name}\r\n                                    className={\"dark\"}\r\n                                />\r\n                            }\r\n                            label={v.name}\r\n                        />\r\n                        <div className={\"float-right mr-3\"}>\r\n                            {this.getDelete(this.state.stateValues[index].isCreated, index)}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n            temp.push(\r\n                <div className={\"d-flex justify-content-between\"}>\r\n                    <div className={\"w-75 mr-2\"}>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"district\"\r\n                            label=\"Neuer Grund\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            onChange={this.handleNewState}\r\n                        />\r\n                    </div>\r\n                    <div className={\"ml-2 mt-3 w-25\"}>\r\n                        <button className={\"btn-primary btn\"} onClick={this.addNewState}>Hinzufügen</button>\r\n                    </div>\r\n                </div>);\r\n\r\n            this.setState({\r\n                reasonToDeny: temp\r\n            })\r\n        }\r\n    }\r\n    handleNewState = (e) => {\r\n        this.setState({\r\n            new_State: e.target.value\r\n        });\r\n    };\r\n\r\n    addNewState = () => {\r\n        let contractStateData = this.state.contract_state_data;\r\n        let stateValue = this.state.stateValues;\r\n        let name = this.state.new_State;\r\n\r\n        contractStateData.push({\r\n            description: name,\r\n            name: name,\r\n            general: 0\r\n        })\r\n        stateValue.push({\r\n            name: name,\r\n            isChecked: true,\r\n            isCreated: true,\r\n            id: null\r\n        })\r\n\r\n        this.setState({\r\n            contract_state_data: contractStateData,\r\n            stateValues: stateValue\r\n        })\r\n        this.viewModalBody();\r\n    };\r\n\r\n    handleDialogClose = () => {\r\n        let length = this.state.lengthContractState;\r\n        let ContractValue = this.state.contract_state_data;\r\n        ContractValue.splice(length, ContractValue.length - length)\r\n        let Values = this.state.stateValues;\r\n        Values.splice(length, ContractValue.length - length);\r\n        this.setState({\r\n            contract_state_data: ContractValue,\r\n            stateValues: Values,\r\n            dialogIsOpen: false,\r\n\r\n        })\r\n        this.getFile(this.state.currentContractPath)\r\n        this.viewModalBody();\r\n    };\r\n\r\n    handleDialogSave = () => {\r\n        this.sendRateContract(false);\r\n        console.log(this.state.stateValues);\r\n        this.handleDialogClose();\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param accept\r\n     */\r\n    clickValidation = (accept) => {\r\n        if (accept && this.state.internshipId) {\r\n            this.sendRateContract(true)\r\n        } else {\r\n            this.handleDialogOpen();\r\n        }\r\n        this.getFile(this.state.currentContractPath);\r\n    }\r\n    handleDialogOpen = () => {\r\n        this.setState({\r\n            dialogIsOpen: true\r\n        })\r\n    };\r\n\r\n    downloadContract = () => {\r\n        if (this.state.fileUrl != null) {\r\n            let a = document.createElement(\"a\");\r\n            document.body.appendChild(a);\r\n            a.style = \"display: none\";\r\n            a.href = this.state.fileUrl;\r\n            a.download = \"ArbeitsVertrag.docx\";\r\n            a.click();\r\n        }\r\n    }\r\n}\r\n\r\nexport default ContractsView;\r\n","import React, {Component} from \"react\";\r\nimport {\r\n    Row,\r\n    Col, Button, Card\r\n} from \"react-bootstrap\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nclass Search extends Component {\r\n\r\n\r\n    state = {\r\n        redirect: \"\",\r\n        redirectToLink: false,\r\n        search_data: null,\r\n        offset: 0,\r\n        previous_disabled: true,\r\n        next_disabled: false,\r\n        search_input: \"\",\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getSearch(0, \"\");\r\n    }\r\n\r\n    nextPage = () => {\r\n        if (!this.check_array_empty()) {\r\n            let offset = this.state.offset;\r\n            offset++;\r\n            this.setState({\r\n                offset: offset\r\n            })\r\n            this.setState({\r\n                previous_disabled: false\r\n            });\r\n            this.getSearch(offset, this.state.search_input);\r\n        }\r\n\r\n    };\r\n    previousPage = () => {\r\n        let offset = this.state.offset;\r\n        console.log(offset);\r\n        if (offset === 0) {\r\n            this.setState({\r\n                previous_disabled: true\r\n            })\r\n\r\n        } else {\r\n            offset--;\r\n            this.setState({\r\n                offset: offset\r\n            });\r\n            this.setState({\r\n                next_disabled: false\r\n            })\r\n            this.getSearch(offset, this.state.search_input);\r\n        }\r\n    };\r\n\r\n    check_array_empty() {\r\n        if (this.state.search_data) {\r\n            let data = this.state.search_data;\r\n            let keys = Object.keys(data);\r\n            let size = 0;\r\n            keys.map(value => {\r\n                if (value !== \"offset\") {\r\n                    size += data[value].size;\r\n                }\r\n            });\r\n            if (size < 33) {\r\n                this.setState({\r\n                    next_disabled: true\r\n                });\r\n                return true;\r\n            } else {\r\n                this.setState({\r\n                    next_disabled: false\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    log_input = (e) => {\r\n        if (e.target.value === '') {\r\n            this.setState({\r\n                search_input: \"\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                search_input: e.target.value\r\n            })\r\n        }\r\n\r\n\r\n        this.getSearch(0, e.target.value);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirectToLink !== false) {\r\n            return <Redirect to={this.state.redirect}/>;\r\n        }\r\n        return (\r\n            <div className={'adminViewContent bg-light'}>\r\n                <Row>\r\n                    <Col className={\"w-25\"}>\r\n                        <Button disabled={this.state.previous_disabled} className=\"float-left m-3\"\r\n                                onClick={this.previousPage}>Vorherige</Button>\r\n                    </Col>\r\n                    <Col className={\"w-50\"}>\r\n                        <input className={\"m-3 form-control\"} autoFocus={true} type={\"text\"} onChange={this.log_input}/>\r\n\r\n                    </Col>\r\n                    <Col className={\"w-25\"}>\r\n                        <Button disabled={this.state.next_disabled} className=\"float-right m-3\"\r\n                                onClick={this.nextPage}>Nächste</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <div className={'p-1'}>\r\n                            <div>\r\n                                {this.displayData()}\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className={\"w-25\"}>\r\n                        <Button disabled={this.state.previous_disabled} className=\"float-left m-3\"\r\n                                onClick={this.previousPage}>Vorherige</Button>\r\n                    </Col>\r\n                    <Col className={\"w-50\"}>\r\n\r\n                    </Col>\r\n                    <Col className={\"w-25\"}>\r\n                        <Button disabled={this.state.next_disabled} className=\"float-right m-3\"\r\n                                onClick={this.nextPage}>Nächste</Button>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getSearch = (offset, input) => {\r\n\r\n        let url = localStorage.getItem('url');\r\n\r\n        url += \"?action=getEntityBySearchInput\";\r\n\r\n        const axios = require('axios');\r\n\r\n        const params = new URLSearchParams();\r\n        params.append(\"searchinput\", input);\r\n        params.append(\"offset\", offset);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n            //console.log(res.data);\r\n            this.setState({\r\n                search_data: res.data\r\n            })\r\n            this.check_array_empty()\r\n\r\n\r\n        })\r\n    };\r\n\r\n    displayData = () => {\r\n        function hashCode(str) { // java String#hashCode\r\n            var hash = 0;\r\n            for (var i = 0; i < str.length; i++) {\r\n                hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n            }\r\n            return hash;\r\n        }\r\n\r\n        function rgbToHex(rgb) {\r\n            var hex = Number(rgb).toString(16);\r\n            if (hex.length < 2) {\r\n                hex = \"0\" + hex;\r\n            }\r\n            return hex\r\n        }\r\n\r\n        function intToRGB(i) {\r\n            var c = (i & 0x00FFFFFF)\r\n                .toString(16)\r\n                .toUpperCase();\r\n\r\n            return \"00000\".substring(0, 6 - c.length) + c;\r\n        }\r\n\r\n        function getRandomColor() {\r\n            var colors = []\r\n            var d = Math.random();\r\n            if (d < 0.666) {\r\n                colors.push(rgbToHex(0) + \"\" + rgbToHex(48) + \"\" + rgbToHex(80))\r\n\r\n            } else {\r\n                colors.push(rgbToHex(255) + \"\" + rgbToHex(203) + \"\" + rgbToHex(0))\r\n            }\r\n            return colors[0];\r\n        }\r\n\r\n        function firstCharAndLastChar(firstname, lastname) {\r\n            let firstChar = (firstname.substring(0, 1)).toUpperCase();\r\n            let lastChar = (lastname.substring(0, 1)).toUpperCase();\r\n            return firstChar + lastChar;\r\n        }\r\n\r\n        function firstChar(name) {\r\n            let firstChar = (name.substring(0, 1)).toUpperCase();\r\n            return firstChar;\r\n        }\r\n\r\n\r\n        function isFirstname_Lastname_Undefined(firstname, lastname) {\r\n            if (!firstname) {\r\n                return (<div className={\"d-flex align-items-baseline\"}>\r\n                    <Avatar style={{backgroundColor: \"#\" + getRandomColor()}}>MM</Avatar>\r\n                    <div className={\"ml-2\"}>Max Muster</div>\r\n                </div>)\r\n            } else {\r\n                return (<div className={\"d-flex align-items-baseline\"}>\r\n                    <Avatar\r\n                        style={{backgroundColor: \"#\" + getRandomColor()}}>{firstCharAndLastChar(firstname, lastname)}</Avatar>\r\n                    <div className={\"ml-2\"}>{firstname + \" \" + lastname}</div>\r\n                </div>)\r\n            }\r\n        }\r\n\r\n        //{backgroundColor: \"#\" + intToRGB(hashCode(firstname + \" \" + lastname))}\r\n\r\n        function isNameUndefined(name) {\r\n            if (!name) {\r\n                return (<div className={\"d-flex align-items-baseline\"}>\r\n                    <Avatar style={{backgroundColor: \"#\" + getRandomColor()}}>MM</Avatar>\r\n                    <div className={\"ml-2\"}>Max Muster</div>\r\n                </div>)\r\n            } else {\r\n                return (<div className={\"d-flex align-items-baseline\"}>\r\n                    <Avatar\r\n                        style={{backgroundColor: \"#\" + getRandomColor()}}>{firstChar(name)}</Avatar>\r\n                    <div className={\"ml-2\"}>{name}</div>\r\n                </div>)\r\n            }\r\n        }\r\n\r\n        if (this.state.search_data !== null) {\r\n            let toDisplay = [];\r\n            let data = this.state.search_data;\r\n            var keys = Object.keys(data);\r\n\r\n            let key = 0;\r\n\r\n            keys.map((value) => {\r\n                let arr = [];\r\n                if (value !== \"offset\") {\r\n                    data[value].items.map(data_value => {\r\n                        if (value === \"Unternehmen\") {\r\n                            arr.push(\r\n                                <Card key={key++} bg={\"light\"} className={\"m-2 w-25 text-center\"}\r\n                                      onClick={() => this.openCompanyInfo(data_value.id)}>\r\n                                    <Card.Header>\r\n                                        {isNameUndefined(data_value.name)}\r\n                                    </Card.Header>\r\n                                    <Card.Body>\r\n                                        <h3>{data_value.name}</h3>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            )\r\n                        } else if (value === \"Schüler\") {\r\n                            arr.push(\r\n                                <Card key={key++} bg={\"light\"} className={\"m-2 w-25 text-center\"}\r\n                                      onClick={() => this.openStudentInfo(data_value.id)}>\r\n                                    <Card.Header>\r\n                                        {isFirstname_Lastname_Undefined(data_value.firstname, data_value.surname)}\r\n                                    </Card.Header>\r\n                                    <Card.Body>\r\n                                        <h3>{data_value.firstname + \" \" + data_value.surname}</h3>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            )\r\n                        } else {\r\n                            arr.push(\r\n                                <Card key={key++} bg={\"light\"} className={\"m-2 w-25 text-center\"}>\r\n                                    <Card.Header>\r\n                                        {isFirstname_Lastname_Undefined(data_value.firstname, data_value.surname)}\r\n                                    </Card.Header>\r\n                                    <Card.Body>\r\n                                        <h3>{data_value.firstname + \" \" + data_value.surname}</h3>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            )\r\n                        }\r\n                    });\r\n\r\n                    toDisplay.push(<Card key={key++} className={\"my-2\"}> <Card.Header className={\"text-center\"}>\r\n                        <h2>{value}</h2>\r\n                    </Card.Header><Card.Body className={\"d-flex flex-wrap flex-row\"}>{arr}</Card.Body></Card>)\r\n\r\n                }\r\n            });\r\n\r\n\r\n            return toDisplay\r\n        }\r\n\r\n    };\r\n    openStudentInfo = (id) => {\r\n        this.setState({\r\n            redirect: \"./StudentInformation/\" + id,\r\n            redirectToLink: true\r\n        })\r\n\r\n\r\n    };\r\n    openCompanyInfo = (id) => {\r\n        this.setState({\r\n            redirect: \"./CompanyInformation/\" + id,\r\n            redirectToLink: true\r\n        })\r\n\r\n\r\n    };\r\n\r\n}\r\n\r\nexport default Search;","import 'rc-steps/assets/index.css';\r\nimport 'rc-steps/assets/iconfont.css';\r\nimport React, {Component} from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Row, Col} from \"react-bootstrap\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport 'antd/es/date-picker/style/css'\r\nimport {DatePicker, TimePicker} from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport Steps from 'rc-steps';\r\nimport {DateRange} from 'react-date-range';\r\nimport de from \"date-fns/locale/de\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst steps = [\r\n\r\n        \"<h1 className={'title'}></h1>\" +\r\n        \"<input/>\" +\r\n        \"<input/>\" +\r\n        \"<input/>\"\r\n    ,\r\n    {\r\n\r\n    },\r\n    {\r\n\r\n    }\r\n]\r\n\r\nclass InternshipTimeWorkDay extends Component {\r\n    state = {\r\n        redirect: \"\",\r\n        redirectToLink: false,\r\n        class_id: 0,\r\n        standard_startValue: \"08:00\",\r\n        standard_lunchbreakStartValue: \"13:00\",\r\n        standard_lunchbreakEndValue: \"14:00\",\r\n        standard_endValue: \"17:00\",\r\n        from: \"\",\r\n        to: \"\",\r\n        internshipId: this.props.match.params.id,\r\n        workdayData: null,\r\n        workdayDisplay: [],\r\n        workdayValues: null,\r\n\r\n\r\n        calendarView: true,\r\n        range: {\r\n            startDate: new Date(),\r\n            endDate: new Date(),\r\n            key: 'selection',\r\n        },\r\n\r\n        step: 0,\r\n        title: \"\"\r\n    };\r\n\r\n    /**\r\n     * calling getInternshipData(getWorkdaysFromAPI) when component did mount\r\n     */\r\n    componentDidMount() {\r\n        this.getInternshipData();\r\n    }\r\n\r\n    /**\r\n     * saves state of date range in state(startDate & endDate)\r\n     * @param ranges\r\n     *\r\n     */\r\n    handleSelect = (ranges) => {\r\n        console.log(ranges);\r\n        this.setState(prevState => {\r\n            let range = Object.assign({}, prevState.range);\r\n            range.startDate = ranges['selection'].startDate;\r\n            range.endDate = ranges['selection'].endDate;\r\n\r\n            return {range};\r\n        })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.redirectToLink !== false) {\r\n            return <Redirect to={this.state.redirectToLink}/>;\r\n        }\r\n\r\n        function onChange() {\r\n\r\n        }\r\n\r\n        return (\r\n            <div className={'classViewContent bg-light'}>\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem href={'/loggedin/company/'}>Unternehmen</BreadcrumbItem>\r\n                    <BreadcrumbItem href={'/loggedin/company/InternshipInformation'} active>Praktikums\r\n                        Informationen</BreadcrumbItem>\r\n                </Breadcrumb>\r\n\r\n                <Steps style={{color: 'black'}} labelPlacement=\"vertical\" current={0}>\r\n                    {\r\n                        steps.map((s,k) => {return <Steps.Step>{k}</Steps.Step>})\r\n                    }\r\n                </Steps>\r\n                <h1>{this.state.title}</h1>\r\n\r\n                {this.getStep(0)}\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getStep = (step) => {\r\n        if (steps.length + 1 < step){\r\n            return steps[step];\r\n        }\r\n    }\r\n\r\n    getInternshipData = () => {\r\n        if (this.state.internshipId != null) {\r\n            const axios = require('axios');\r\n\r\n            let url = localStorage.getItem('url');\r\n\r\n            let userData = localStorage.getItem('user');\r\n            userData = JSON.parse(userData);\r\n            this.setState({userData: userData});\r\n\r\n            axios({\r\n                url: url + '?action=getInternshipById&id=' + this.state.internshipId,\r\n            }).then((res) => {\r\n\r\n                if (res.data.error === undefined) {\r\n                    console.log(res.data.from);\r\n                    console.log(res.data.to);\r\n                    this.setState({\r\n                        from: res.data.from,\r\n                        to: res.data.to\r\n                    })\r\n                    this.loadFromJson();\r\n\r\n                } else {\r\n                    console.error(\"ERROR LOADING DATA\")\r\n                }\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * for calculating Timedifference and then inserting it in params\r\n     */\r\n    submitWorkday = () => {\r\n        let arr = this.state.workdayValues;\r\n        const params = new URLSearchParams();\r\n        for (let i = 0; i < arr.length; i++) {\r\n            let workstartWithIndex = \"workstart_\" + i;\r\n            let lunchstartWithIndex = \"lunchstart_\" + i;\r\n            let lunchendWithIndex = \"lunchend_\" + i;\r\n            let workendWithIndex = \"workend_\" + i\r\n\r\n            var ms = moment(arr[i][lunchstartWithIndex], \"HH:mm\").diff(moment(arr[i][workstartWithIndex], \"HH:mm\"));\r\n            var d = moment.duration(ms);\r\n            let worktimebeforeLunch;\r\n            if (d.minutes() !== 0) {\r\n                worktimebeforeLunch = d.hours() + \":\" + d.minutes();\r\n            } else {\r\n                worktimebeforeLunch = d.hours() + \":00\"\r\n            }\r\n\r\n            ms = moment(arr[i][workendWithIndex], \"HH:mm\").diff(moment(arr[i][lunchendWithIndex], \"HH:mm\"));\r\n            d = moment.duration(ms);\r\n            let worktimeafterLunch;\r\n            if (d.minutes() !== 0) {\r\n                worktimeafterLunch = d.hours() + \":\" + d.minutes();\r\n            } else {\r\n                worktimeafterLunch = d.hours() + \":00\"\r\n            }\r\n\r\n            var temp = [];\r\n            temp.push(\"date\", this.state.workdayData.days[i]);\r\n            temp.push(\"worktimebeforLunch\", worktimebeforeLunch);\r\n            temp.push(\"worktimeafterLunch\", worktimeafterLunch);\r\n            params.append(i, JSON.stringify(temp));\r\n        }\r\n        this.sendWorkDaysToAPI(params)\r\n    };\r\n\r\n    /**\r\n     * sending the params(workdays+time) to the API\r\n     * @param params\r\n     */\r\n    sendWorkDaysToAPI = (params) => {\r\n        console.log(this.state.workdayValues)\r\n        const axios = require('axios');\r\n\r\n        let url = localStorage.getItem('url');\r\n\r\n        url += \"?action=insertWorkday&internship_id=\" + this.state.internshipId;\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n            console.log(res.data);\r\n        })\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * for setting standard WordayStartValue\r\n     * @param moment\r\n     * @param timeString\r\n     */\r\n    setStandardValueWorkstart = (moment, timeString) => {\r\n        let values = this.state.workdayValues;\r\n        for (let i = 0; i < this.state.workdayValues.length; i++) {\r\n            let workstartWithIndex = \"workstart_\" + i;\r\n            values[i][workstartWithIndex] = timeString;\r\n        }\r\n        this.setState({\r\n            workdayValues: values,\r\n            standard_startValue: timeString\r\n        });\r\n    };\r\n\r\n    /**\r\n     * for setting standard WordayLunchStartValue\r\n     * @param moment\r\n     * @param timeString\r\n     */\r\n    setStandardValueStartLunch = (moment, timeString) => {\r\n        let values = this.state.workdayValues;\r\n        for (let i = 0; i < this.state.workdayValues.length; i++) {\r\n            let lunchstartWithIndex = \"lunchstart_\" + i;\r\n            values[i][lunchstartWithIndex] = timeString;\r\n        }\r\n        this.setState({\r\n            workdayValues: values,\r\n            standard_lunchbreakStartValue: timeString\r\n        });\r\n    };\r\n\r\n    /**\r\n     * for setting standard LunchEndValue\r\n     * @param moment\r\n     * @param timeString\r\n     */\r\n    setStandardValueEndLunch = (moment, timeString) => {\r\n        let values = this.state.workdayValues;\r\n        for (let i = 0; i < this.state.workdayValues.length; i++) {\r\n            let lunchendWithIndex = \"lunchend_\" + i;\r\n            values[i][lunchendWithIndex] = timeString;\r\n        }\r\n        this.setState({\r\n            workdayValues: values,\r\n            standard_lunchbreakEndValue: timeString\r\n        });\r\n    };\r\n\r\n    /**\r\n     * for setting standard WorkdayEndValue\r\n     * @param moment\r\n     * @param timeString\r\n     */\r\n    setStandardValueWorkend = (moment, timeString) => {\r\n        let values = this.state.workdayValues;\r\n        for (let i = 0; i < this.state.workdayValues.length; i++) {\r\n            let workendWithIndex = \"workend_\" + i;\r\n            values[i][workendWithIndex] = timeString;\r\n        }\r\n        this.setState({\r\n            workdayValues: values,\r\n            standard_endValue: timeString\r\n        });\r\n    };\r\n\r\n    onChangeDate = (date, dateString) => {\r\n        console.log(date, dateString);\r\n    };\r\n\r\n    /**\r\n     * change WorkdayValue(WorkDayStart) and saving it for a specific day onchange for every timepicker\r\n     * @param moment\r\n     * @param timeString\r\n     * @param name\r\n     * @param id\r\n     */\r\n    onChangeTimeStart = (moment, timeString, name, id) => {\r\n        let values = this.state.workdayValues;\r\n        values[id][name] = timeString;\r\n        this.setState({\r\n            workdayValues: values\r\n        });\r\n    };\r\n\r\n    /**\r\n     * change WorkdayValue(TimeStartLunch) and saving it for a specific day onchange for every timepicker\r\n     * @param moment\r\n     * @param timeString\r\n     * @param name\r\n     * @param id\r\n     */\r\n    onChangeTimeStartLunch = (moment, timeString, name, id) => {\r\n        let values = this.state.workdayValues;\r\n        values[id][name] = timeString;\r\n        this.setState({\r\n            workdayValues: values\r\n        });\r\n    };\r\n\r\n    /**\r\n     * change WorkdayValue(TimeEndLunch) and saving it for a specific day onchange for every timepicker\r\n     * @param moment\r\n     * @param timeString\r\n     * @param name\r\n     * @param id\r\n     */\r\n    onChangeTimeEndLunch = (moment, timeString, name, id) => {\r\n        let values = this.state.workdayValues;\r\n        values[id][name] = timeString;\r\n        this.setState({\r\n            workdayValues: values\r\n        });\r\n    };\r\n\r\n    /**\r\n     * change WorkdayValue(WorkDayEnd) and saving it for a specific day onchange for every timepicker\r\n     * @param moment\r\n     * @param timeString\r\n     * @param name\r\n     * @param id\r\n     */\r\n    onChangeTimeEnd = (moment, timeString, name, id) => {\r\n        let values = this.state.workdayValues;\r\n        values[id][name] = timeString;\r\n        this.setState({\r\n            workdayValues: values\r\n        });\r\n    };\r\n\r\n    /**\r\n     * creating timepickers based on Days\r\n     * @returns {[]}\r\n     */\r\n    createWorkDay = () => {\r\n        if (this.state.workdayData != null && this.state.workdayValues != null) {\r\n            let arr = [];\r\n            this.state.workdayData.days.map((value, index) => {\r\n                var workstartWithIndex = \"workstart_\" + index;\r\n                var lunchstartWithIndex = \"lunchstart_\" + index;\r\n                var lunchEndWithIndex = \"lunchend_\" + index;\r\n                var workendWithIndex = \"workend_\" + index;\r\n                arr.push(\r\n                    <Row className={\"m-3\"} key={index}>\r\n                        <DatePicker defaultValue={moment(value, 'DD.MM.YYYY')}\r\n                                    onChange={this.onChangeDate} format={'DD.MM.YYYY'}/>\r\n                        <TimePicker\r\n                            onChange={(date, dateString) => this.onChangeTimeStart(date, dateString, \"workstart_\" + index, index)}\r\n                            minuteStep={15}\r\n                            name={\"workstart_\" + index} id={\"workstart_\" + index}\r\n                            value={moment(this.state.workdayValues[index][workstartWithIndex], 'HH:mm')}\r\n                            format={'HH:mm'}/>\r\n                        <TimePicker\r\n                            onChange={(date, dateString) => this.onChangeTimeStartLunch(date, dateString, \"lunchstart_\" + index, index)}\r\n                            minuteStep={15}\r\n                            name={\"lunchstart_\" + index} id={\"lunchstart_\" + index}\r\n                            value={moment(this.state.workdayValues[index][lunchstartWithIndex], 'HH:mm')}\r\n                            format={'HH:mm'}/>\r\n                        <TimePicker\r\n                            onChange={(date, dateString) => this.onChangeTimeEndLunch(date, dateString, \"lunchend_\" + index, index)}\r\n                            minuteStep={15}\r\n                            name={\"lunchend_\" + index} id={\"lunchend_\" + index}\r\n                            value={moment(this.state.workdayValues[index][lunchEndWithIndex], 'HH:mm')}\r\n                            format={'HH:mm'}/>\r\n                        <TimePicker\r\n                            onChange={(date, dateString) => this.onChangeTimeEnd(date, dateString, \"workend_\" + index, index)}\r\n                            minuteStep={15}\r\n                            name={\"workend_\" + index} id={\"workend_\" + index}\r\n                            value={moment(this.state.workdayValues[index][workendWithIndex], 'HH:mm')}\r\n                            format={'HH:mm'}/>\r\n                    </Row>\r\n                )\r\n            });\r\n            return arr;\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * set workdaysValues into Array\r\n     */\r\n    setWorkDayValues = () => {\r\n        if (this.state.workdayData != null) {\r\n            let values = [];\r\n            this.state.workdayData.days.map((value, index) => {\r\n                let workstart = this.state.standard_startValue;\r\n                let lunchstart = this.state.standard_lunchbreakStartValue;\r\n                let lunchend = this.state.standard_lunchbreakEndValue;\r\n                let workend = this.state.standard_endValue;\r\n                var workstartWithIndex = \"workstart_\" + index;\r\n                var lunchstartWithIndex = \"lunchstart_\" + index;\r\n                var lunchEndWithIndex = \"lunchend_\" + index;\r\n                var workendWithIndex = \"workend_\" + index;\r\n                values.push(\r\n                    {\r\n                        [workstartWithIndex]: workstart,\r\n                        [lunchstartWithIndex]: lunchstart,\r\n                        [lunchEndWithIndex]: lunchend,\r\n                        [workendWithIndex]: workend\r\n                    }\r\n                )\r\n            });\r\n            this.setState({\r\n                workdayValues: values\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get Workdays from API\r\n     */\r\n    loadFromJson() {\r\n        const axios = require('axios');\r\n\r\n        let url = localStorage.getItem('url');\r\n\r\n        url += \"?action=getWorkdays\";\r\n\r\n        const params = new URLSearchParams();\r\n        params.append(\"from\", this.state.from);\r\n        params.append(\"to\", this.state.to);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n\r\n            console.log(res.data)\r\n            this.setState({\r\n                workdayData: res.data\r\n            });\r\n            this.setWorkDayValues();\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default InternshipTimeWorkDay;\r\n","import React, {Component} from \"react\";\r\nimport {Breadcrumb, BreadcrumbItem, Button, Card, Modal} from \"react-bootstrap\";\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport {List, ListItem} from \"@material-ui/core\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\n\r\n\r\nclass RatingMail extends Component {\r\n\r\n    state = {\r\n        finishedInternships: [],\r\n        data: [],\r\n        showWriteMail: false,\r\n        mailContent: \"Keine E-Mail ausgewählt\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadEmail();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={'adminViewContent bg-light'}>\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem href={'/loggedin/'}>Administration</BreadcrumbItem>\r\n                    <BreadcrumbItem active={true} href={'/loggedin/'}>Praktikumsbewertung E-Mail</BreadcrumbItem>\r\n                </Breadcrumb>\r\n\r\n                <div className={\"d-flex flex-row align-items-stretch\"} style={{maxHeight: '80vh'}}>\r\n                    <div className={\"bg-white overflow-auto\"}>\r\n                        <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n\r\n                            <ListItem button divider onClick={() => this.sendToAll()}>\r\n                                <ListItemText primary=\"Alle senden\" />\r\n                                <ListItemSecondaryAction>\r\n                                    <IconButton onClick={() => this.sendToAll()}>\r\n                                        <SendIcon/>\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        </List>\r\n                        <List component=\"nav\" aria-label=\"secondary mailbox folders\">\r\n                            {this.displayMail()}\r\n                        </List>\r\n                    </div>\r\n                    <Card className={\"mx-2\"} style={{flex: 1}}>\r\n                        {ReactHtmlParser(this.state.mailContent)}\r\n                    </Card>\r\n                </div>\r\n\r\n                <Modal show={this.state.showWriteMail} onHide={() => {\r\n                    this.showComposeMail()\r\n                }}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>E-Mail schreiben</Modal.Title>\r\n                    </Modal.Header>\r\n                    <select>\r\n                        <section></section>\r\n                    </select>\r\n                    <Modal.Body>\r\n\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => {\r\n                            this.setState({showWriteMail: false})\r\n                        }}>Abrechen</Button>\r\n                        <Button variant=\"primary\">Senden</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    displayMail = () => {\r\n\r\n        let ret = [];\r\n\r\n        if (this.state.finishedInternships) {\r\n\r\n            this.state.finishedInternships.map(value => {\r\n\r\n                let chars = value.schoolpersonName.charAt(0) + value.schoolpersonName.split(' ')[1].charAt(0);\r\n                chars = chars.toUpperCase();\r\n\r\n                ret.push(\r\n                    <ListItem style={{cursor: 'pointer'}} className={\"bg-primary\"}\r\n                              onClick={() => this.openMail(value.id)} key={value.id}>\r\n                        <ListItemAvatar>\r\n                            <Avatar>\r\n                                {chars}\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n\r\n                        <ListItemText\r\n                            primary={value.studentName + \" - \" + value.companyName}\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"body2\"\r\n                                        className={\"d-inline\"}\r\n                                        color=\"textPrimary\"\r\n                                    >\r\n                                        {value.companyName}\r\n                                    </Typography>\r\n                                    {\" nach: \" + value.companyTutorName}\r\n                                </React.Fragment>\r\n                            }\r\n                        />\r\n                    </ListItem>);\r\n            })\r\n        }\r\n        if(this.state.data){\r\n\r\n            this.state.data.map(value => {\r\n\r\n                let chars = value.schoolpersonName.charAt(0) + value.schoolpersonName.split(' ')[1].charAt(0);\r\n                chars = chars.toUpperCase();\r\n\r\n                ret.push(\r\n                    <ListItem style={{cursor: 'pointer'}} onClick={() => this.openMail(value.id)} key={value.id}>\r\n                        <ListItemAvatar>\r\n                            <Avatar>\r\n                                {chars}\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n\r\n                        <ListItemText\r\n                            primary={value.studentName + \" - \" + value.companyName}\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"body2\"\r\n                                        className={\"d-inline\"}\r\n                                        color=\"textPrimary\"\r\n                                    >\r\n                                        {value.companyName}\r\n                                    </Typography>\r\n                                    {\" nach: \" + value.companyTutorName}\r\n                                </React.Fragment>\r\n                            }\r\n                        />\r\n                    </ListItem>);\r\n            })\r\n\r\n\r\n            return ret;\r\n        }\r\n    }\r\n\r\n    showComposeMail = () => {\r\n        window.open(\"/composeMail/\", \"\", \"width=1060,height=650\");\r\n    }\r\n\r\n\r\n    loadEmail = () => {\r\n\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=getAllEmailsSentAndNot\";\r\n\r\n        const axios = require('axios');\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            console.log(res.data)\r\n            console.log(res.data.sent)\r\n            this.setState({\r\n                data: res.data.sent,\r\n                finishedInternships: res.data.notSent\r\n            });\r\n        });\r\n    }\r\n\r\n    loadToSend = () => {\r\n\r\n\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=getFinishedInternshipsToday\";\r\n\r\n        const axios = require('axios');\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            console.log(res.data)\r\n            this.setState({finishedInternships: res.data});\r\n        });\r\n    }\r\n\r\n    openMail = (id) => {\r\n\r\n\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=getRatingEmailContent\";\r\n\r\n        let sp = new URLSearchParams();\r\n        sp.append(\"id\", id);\r\n\r\n        const axios = require('axios');\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: sp\r\n        }).then((res) => {\r\n            let mailContent = res.data.content;\r\n            console.log(mailContent)\r\n            this.setState({mailContent});\r\n        });\r\n\r\n    }\r\n\r\n    displayToSendMail() {\r\n        if (this.state.finishedInternships != null) {\r\n            let ret = [];\r\n\r\n            this.state.finishedInternships.map(value => {\r\n\r\n                ret.push(\r\n                    <ListItem style={{cursor: 'pointer'}} className={\"bg-primary\"}\r\n                              onClick={() => this.openMail(value.id)} key={value.id}>\r\n                        <ListItemAvatar>\r\n                            <Avatar>\r\n                                TS\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n\r\n                        <ListItemText\r\n                            primary={value.companyId}\r\n                            secondary={\r\n                                <React.Fragment>\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"body2\"\r\n                                        className={\"d-inline\"}\r\n                                        color=\"textPrimary\"\r\n                                    >\r\n                                        {value.id}\r\n                                    </Typography>\r\n                                </React.Fragment>\r\n                            }\r\n                        />\r\n                    </ListItem>);\r\n            })\r\n\r\n\r\n            return ret;\r\n        }\r\n    }\r\n\r\n    sendToAll= ()=> {\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=sendAllDueRatingEmail\";\r\n\r\n        const axios = require('axios');\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            this.loadEmail();\r\n        });\r\n    }\r\n}\r\n\r\nexport default RatingMail;\r\n","import React, {Component} from 'react';\r\n\r\nimport EmailEditor from 'react-email-editor'\r\n\r\nclass EmailCopmoser extends Component {\r\n\r\n    render() {\r\n        return <div>\r\n            <div>\r\n                <button onClick={this.exportHtml}>Export HTML</button>\r\n                <button onClick={this.exportJson}>Export JSON</button>\r\n            </div>\r\n\r\n            <EmailEditor\r\n                ref={editor => this.editor = editor}\r\n            />\r\n        </div>\r\n    }\r\n\r\n    exportHtml = () => {\r\n        this.editor.exportHtml(data => {\r\n            const { design, html } = data\r\n            console.log('exportHtml', html)\r\n        })\r\n    }\r\n\r\n    exportJson = () => {\r\n        this.editor.saveDesign(function (design) {\r\n            console.log(design);\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default EmailCopmoser;\r\n","import React, {Component} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Breadcrumb, BreadcrumbItem, Button, ButtonToolbar, Card, Col, DropdownButton, Form, Row} from \"react-bootstrap\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport {Snackbar} from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nclass AllRoles extends Component {\r\n    state = {\r\n        roles: null,\r\n        error: false,\r\n        redirectToLink: false,\r\n        redirect: \"\",\r\n        roleName: \"\",\r\n        roleDescription: \"\",\r\n        dialogIsOpen: false,\r\n        currentRole: null,\r\n        roleID: \"\",\r\n        dialogNewRoleIsOpen: false,\r\n        NewRoleDescription: \"\",\r\n        NewRoleName: \"\",\r\n        errorIsOpen: false,\r\n        errorMessage: \"\"\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getAllRoles();\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirectToLink !== false) {\r\n            return <Redirect to={this.state.redirect}/>;\r\n        }\r\n        return (\r\n            <div className={'w-100 adminViewContent'}>\r\n\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem href={'/loggedin/Administration'} active>Administration</BreadcrumbItem>\r\n                </Breadcrumb>\r\n\r\n                <Row>\r\n                    <Col className={'m-5'}>\r\n                        <h1>Alle Rollen</h1>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <div className={'p-1'}>\r\n                            <div className={\"noDividerList\"}>\r\n                                {this.displayAllRoles()}\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Snackbar open={this.state.errorIsOpen} autoHideDuration={10000} onClose={() => {\r\n                    this.setState({errorIsOpen: false})\r\n                }}>\r\n\r\n                    <Alert severity={'error'} onClose={() => this.setState({errorIsOpen: false})}>\r\n                        {this.state.errorMessage}\r\n                    </Alert>\r\n                </Snackbar>\r\n                <Dialog open={this.state.dialogIsOpen} onClose={this.handleDialogClose}\r\n                        aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">Fachrichtung</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Bearbeiten sie in den untenstehenden Textfeld die Rolle ein!\r\n                        </DialogContentText>\r\n                        <Form id={\"editRole\"} onSubmit={this.handleSubmit}>\r\n                            <TextField\r\n                                margin=\"dense\"\r\n                                required\r\n                                value={this.state.roleName}\r\n                                id=\"roleName\"\r\n                                label=\"Name der Rolle\"\r\n                                type=\"text\"\r\n                                name={\"roleName\"}\r\n                                fullWidth\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <TextField\r\n                                margin=\"dense\"\r\n                                required\r\n                                value={this.state.roleDescription}\r\n                                id=\"roleDescription\"\r\n                                label=\"Beschreibung der Rolle\"\r\n                                type=\"text\"\r\n                                name={\"roleDescription\"}\r\n                                fullWidth\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </Form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleDialogClose} color=\"primary\">\r\n                            Abbrechen\r\n                        </Button>\r\n                        <Button type={\"submit\"} form={\"editRole\"} color=\"primary\">\r\n                            Speichern\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog open={this.state.dialogNewRoleIsOpen} onClose={this.handleDialogRoleClose}\r\n                        aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">Neue Rolle</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Geben sie in den untenstehenden Textfeldern die neue Rolle ein!\r\n                        </DialogContentText>\r\n                        <Form id={\"editRole\"} onSubmit={this.handleSubmitNewRole}>\r\n                            <TextField\r\n                                margin=\"dense\"\r\n                                required\r\n                                value={this.state.NewRoleName}\r\n                                id=\"roleName\"\r\n                                label=\"Name der Rolle\"\r\n                                type=\"text\"\r\n                                name={\"NewRoleName\"}\r\n                                fullWidth\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <TextField\r\n                                margin=\"dense\"\r\n                                required\r\n                                value={this.state.NewRoleDescription}\r\n                                id=\"roleDescription\"\r\n                                label=\"Beschreibung der Rolle\"\r\n                                type=\"text\"\r\n                                name={\"NewRoleDescription\"}\r\n                                fullWidth\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </Form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleDialogRoleClose} color=\"primary\">\r\n                            Abbrechen\r\n                        </Button>\r\n                        <Button type={\"submit\"} form={\"editRole\"} color=\"primary\">\r\n                            Speichern\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let url = localStorage.getItem('url');\r\n\r\n        let params = new URLSearchParams();\r\n\r\n        params.append('role_id', this.state.roleID);\r\n        params.append('description', this.state.roleDescription);\r\n        params.append('name', this.state.roleName);\r\n\r\n\r\n        const axios = require('axios');\r\n        url += '?action=editRole';\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n            console.log(res.data)\r\n            if (!res.data.error) {\r\n                this.setState({\r\n                    roles: res.data\r\n                })\r\n                this.handleDialogClose();\r\n            } else {\r\n                console.log(res.message)\r\n                this.setState({\r\n                    errorIsOpen: true,\r\n                    errorMessage: res.data.message\r\n                })\r\n            }\r\n        });\r\n\r\n    }\r\n    handleSubmitNewRole = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"name\", this.state.NewRoleName, \"desc\", this.state.NewRoleDescription)\r\n\r\n        let url = localStorage.getItem('url');\r\n\r\n        let params = new URLSearchParams();\r\n\r\n        params.append('description', this.state.NewRoleDescription);\r\n        params.append('name', this.state.NewRoleName);\r\n\r\n\r\n        const axios = require('axios');\r\n        url += '?action=createRole';\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n            console.log(res.data)\r\n            if (!res.data.error) {\r\n                this.setState({\r\n                    roles: res.data\r\n                })\r\n                this.handleDialogRoleClose();\r\n            } else {\r\n                console.log(res.message)\r\n                this.setState({\r\n                    errorIsOpen: true,\r\n                    errorMessage: res.data.message\r\n                })\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: [e.target.value]\r\n        })\r\n    }\r\n\r\n    handleDialogClose = () => {\r\n        this.setState({\r\n            dialogIsOpen: false\r\n        })\r\n    };\r\n    handleDialogRoleClose = () => {\r\n        this.setState({\r\n            dialogNewRoleIsOpen: false\r\n        })\r\n    };\r\n\r\n    getAllRoles = () => {\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=getAllRoles\";\r\n        const axios = require('axios');\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            console.log(res.data)\r\n            this.setState({\r\n                roles: res.data\r\n            });\r\n        })\r\n    };\r\n\r\n    displayAllRoles = () => {\r\n        if (this.state.roles != null && this.state.error !== true) {\r\n\r\n\r\n            function rgbToHex(rgb) {\r\n                var hex = Number(rgb).toString(16);\r\n                if (hex.length < 2) {\r\n                    hex = \"0\" + hex;\r\n                }\r\n                return hex\r\n            }\r\n\r\n            function getRandomColor() {\r\n                var colors = []\r\n\r\n                colors.push(rgbToHex(255) + \"\" + rgbToHex(203) + \"\" + rgbToHex(0))\r\n                colors.push(rgbToHex(0) + \"\" + rgbToHex(48) + \"\" + rgbToHex(80))\r\n\r\n                return colors[Math.floor(Math.random() * colors.length)];\r\n            }\r\n\r\n            //gets first of firstname and FirstChar of lastname\r\n            function firstChar(roleName) {\r\n                if (roleName != null) {\r\n                    let firstChar = (roleName.substring(0, 1)).toUpperCase();\r\n                    return firstChar;\r\n                } else {\r\n                    return \"M\";\r\n                }\r\n\r\n            }\r\n\r\n            if (!this.state.roles) {\r\n                return <div/>\r\n            }\r\n\r\n            let roles = [];\r\n\r\n            roles.push(\r\n                <Card bg={\"light border border-secondary\"} key={-1}\r\n                      className={\"m-3 w-25 text-center\"} onClick={() => this.setState({dialogNewRoleIsOpen: true})}>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col className={\"d-flex align-items-baseline\"}>\r\n                                <Avatar\r\n                                    style={{backgroundColor: \"#\" + getRandomColor()}}>{firstChar(\"Neue Rolle\")}</Avatar>\r\n                                <div className={\"ml-2\"}>Neue Rolle</div>\r\n                            </Col>\r\n                            <Col>\r\n                                <div className={\"float-right mt-2\"}>\r\n\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body className={\"d-flex justify-content-around\"}>\r\n                        <h2>+</h2>\r\n                    </Card.Body>\r\n                </Card>)\r\n\r\n            this.state.roles.map(c => {\r\n                roles.push(\r\n                    <Card bg={\"light\"} key={c.id}\r\n                          className={\"m-3 w-25 text-center\"}>\r\n                        <Card.Header>\r\n                            <Row>\r\n                                <Col className={\"d-flex align-items-baseline\"}>\r\n                                    <Avatar\r\n                                        style={{backgroundColor: \"#\" + getRandomColor()}}>{firstChar(c.name)}</Avatar>\r\n                                    <div className={\"ml-2\"}>{c.name}</div>\r\n                                </Col>\r\n                                <Col>\r\n                                    <div className={\"float-right mt-2\"} onClick={() => this.openDialog(c.id)}>\r\n                                        <EditIcon/>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <h5>Beschreibung:</h5>\r\n                            <h6>{c.description}</h6>\r\n                        </Card.Body>\r\n                    </Card>)\r\n            });\r\n            return roles;\r\n        }\r\n    };\r\n\r\n    getRoleByID = (id) => {\r\n        let data = this.state.roles;\r\n        var i = 0;\r\n        var length = data.length;\r\n\r\n        var out = null;\r\n\r\n        for (i; i < length; i++) {\r\n            if (id === data[i].id) {\r\n                out = data[i];\r\n            }\r\n        }\r\n        return out;\r\n    }\r\n\r\n    openDialog = (id) => {\r\n        let data = this.getRoleByID(id);\r\n        if (data != null) {\r\n            this.setState({\r\n                dialogIsOpen: true,\r\n                roleID: data.id,\r\n                roleName: data.name,\r\n                roleDescription: data.description\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default AllRoles;","import React, {Component} from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Button, Card, Col, Form, Row} from \"react-bootstrap\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {Snackbar} from \"@material-ui/core\";\r\n\r\nclass AllSpecializations extends Component {\r\n    state = {\r\n        specialization: null,\r\n        error: false,\r\n        specializationName: \"\",\r\n        NewSpecDescription: \"\",\r\n        dialogNewSpecIsOpen: false,\r\n        dialogIsOpen: false,\r\n        errorIsOpen: false,\r\n        errorMessage: \"Fehler\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllSpecializations();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'w-100 adminViewContent'}>\r\n\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem href={'/loggedin/Administration'} active>Administration</BreadcrumbItem>\r\n                </Breadcrumb>\r\n\r\n                <Row>\r\n                    <Col className={'m-5'}>\r\n                        <h1>Alle Fachrichtungen</h1>\r\n                    </Col>\r\n                </Row>\r\n                <Snackbar open={this.state.errorIsOpen} autoHideDuration={10000} onClose={() => {\r\n                    this.setState({errorIsOpen: false})\r\n                }}>\r\n\r\n                    <Alert severity={'error'} onClose={() => this.setState({errorIsOpen: false})}>\r\n                        {this.state.errorMessage}\r\n                    </Alert>\r\n                </Snackbar>\r\n                <Row>\r\n                    <Col>\r\n                        <div className={'p-1'}>\r\n                            <div className={\"noDividerList\"}>\r\n                                {this.displaySpecializations()}\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Dialog open={this.state.dialogIsOpen} onClose={this.handleDialogClose}\r\n                        aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">Fachrichtung</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Bearbeiten sie in den untenstehenden Textfeld die Fachrichtung ein!\r\n                        </DialogContentText>\r\n                        <Form id={\"editSpec\"} onSubmit={this.handleSubmit}>\r\n                            <TextField\r\n                                margin=\"dense\"\r\n                                required\r\n                                autoFocus\r\n                                value={this.state.specializationName}\r\n                                id=\"roleDescription\"\r\n                                label=\"Name der Fachrichtung\"\r\n                                type=\"text\"\r\n                                name={\"specializationName\"}\r\n                                fullWidth\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </Form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleDialogClose} color=\"primary\">\r\n                            Abbrechen\r\n                        </Button>\r\n                        <Button type={\"submit\"} form={\"editSpec\"} color=\"primary\">\r\n                            Speichern\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog open={this.state.dialogNewSpecIsOpen} onClose={this.handleDialogRoleClose}\r\n                        aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">Neue Fachrichtung</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Geben sie im untenstehenden Textfeld die neue Fachrichtung ein!\r\n                        </DialogContentText>\r\n                        <Form id={\"editSpec\"} onSubmit={this.handleSubmitNewSpec}>\r\n                            <TextField\r\n                                margin=\"dense\"\r\n                                required\r\n                                autoFocus\r\n                                value={this.state.NewSpecDescription}\r\n                                id=\"roleDescription\"\r\n                                label=\"Name der Fachrichtung\"\r\n                                type=\"text\"\r\n                                name={\"NewSpecDescription\"}\r\n                                fullWidth\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </Form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleDialogCloseSpec} color=\"primary\">\r\n                            Abbrechen\r\n                        </Button>\r\n                        <Button type={\"submit\"} form={\"editSpec\"} color=\"primary\">\r\n                            Speichern\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleSubmitNewSpec = (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(\"spec_description\", this.state.NewSpecDescription);\r\n\r\n        let url = localStorage.getItem('url');\r\n\r\n        let params = new URLSearchParams();\r\n\r\n        params.append('specialization_description', this.state.NewSpecDescription);\r\n\r\n\r\n        const axios = require('axios');\r\n        url += '?action=createSpecialization';\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n            console.log(res.data)\r\n            if (!res.data.error) {\r\n                this.setState({\r\n                    specialization: res.data\r\n                })\r\n                this.handleDialogCloseSpec();\r\n            } else {\r\n                console.log(res.message)\r\n                this.setState({\r\n                    errorIsOpen: true,\r\n                    errorMessage: res.data.message\r\n                })\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    handleDialogClose = () => {\r\n        this.setState({\r\n            dialogIsOpen: false\r\n        })\r\n    };\r\n    handleDialogCloseSpec = () => {\r\n        this.setState({\r\n            dialogNewSpecIsOpen: false\r\n        })\r\n    };\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let url = localStorage.getItem('url');\r\n\r\n        let params = new URLSearchParams();\r\n\r\n        params.append('specializations_id', this.state.specializations_id);\r\n        params.append('description', this.state.specializationName);\r\n\r\n\r\n        const axios = require('axios');\r\n\r\n        url += '?action=editSpecialization';\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: params\r\n        }).then((res) => {\r\n            console.log(res.data)\r\n            if (!res.data.error) {\r\n                this.setState({\r\n                    specialization: res.data\r\n                })\r\n                this.handleDialogClose();\r\n            } else {\r\n                console.log(res.message)\r\n                this.setState({\r\n                    errorIsOpen: true,\r\n                    errorMessage: res.data.message\r\n                })\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: [e.target.value]\r\n        })\r\n    }\r\n\r\n    getSpecByID = (id) => {\r\n        let data = this.state.specialization;\r\n        var i = 0;\r\n        var length = data.length;\r\n\r\n        var out = null;\r\n\r\n        for (i; i < length; i++) {\r\n            if (id === data[i].id) {\r\n                out = data[i];\r\n            }\r\n        }\r\n        return out;\r\n    }\r\n\r\n    openDialog = (id) => {\r\n        let data = this.getSpecByID(id);\r\n        if (data != null) {\r\n            this.setState({\r\n                dialogIsOpen: true,\r\n                specializations_id: data.id,\r\n                specializationName: data.description\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    getAllSpecializations = () => {\r\n        let url = localStorage.getItem('url');\r\n        url += \"?action=getAllSpecializations\";\r\n        const axios = require('axios');\r\n        axios({\r\n            method: 'post',\r\n            url: url,\r\n        }).then((res) => {\r\n            console.log(res.data)\r\n            this.setState({\r\n                specialization: res.data\r\n            });\r\n        })\r\n    };\r\n\r\n    displaySpecializations = () => {\r\n        if (this.state.specialization != null && this.state.error !== true) {\r\n\r\n\r\n            function rgbToHex(rgb) {\r\n                var hex = Number(rgb).toString(16);\r\n                if (hex.length < 2) {\r\n                    hex = \"0\" + hex;\r\n                }\r\n                return hex\r\n            }\r\n\r\n            function getRandomColor() {\r\n                var colors = []\r\n\r\n                colors.push(rgbToHex(255) + \"\" + rgbToHex(203) + \"\" + rgbToHex(0))\r\n                colors.push(rgbToHex(0) + \"\" + rgbToHex(48) + \"\" + rgbToHex(80))\r\n\r\n                return colors[Math.floor(Math.random() * colors.length)];\r\n            }\r\n\r\n            //gets first of firstname and FirstChar of lastname\r\n            function firstChar(roleName) {\r\n                if (roleName != null) {\r\n                    let firstChar = (roleName.substring(0, 1)).toUpperCase();\r\n                    return firstChar;\r\n                } else {\r\n                    return \"M\";\r\n                }\r\n\r\n            }\r\n\r\n            if (!this.state.specialization) {\r\n                return <div/>\r\n            }\r\n\r\n            let spec = [];\r\n\r\n            spec.push(\r\n                <Card bg={\"light border border-secondary\"} key={-1}\r\n                      className={\"m-3 w-25 text-center\"}\r\n                      onClick={() => this.setState({dialogNewSpecIsOpen: true})}\r\n                >\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col className={\"d-flex align-items-baseline\"}>\r\n                                <Avatar\r\n                                    style={{backgroundColor: \"#\" + getRandomColor()}}>{firstChar(\"+\")}</Avatar>\r\n                                <div className={\"ml-2\"}>Neue Fachrichtung</div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                </Card>)\r\n\r\n\r\n            this.state.specialization.map((c) => {\r\n                spec.push(\r\n                    <Card bg={\"light\"} key={c.id}\r\n                          className={\"m-3 w-25 text-center\"}>\r\n                        <Card.Header>\r\n                            <Row>\r\n                                <Col className={\"d-flex align-items-baseline\"}>\r\n                                    <Avatar\r\n                                        style={{backgroundColor: \"#\" + getRandomColor()}}>{firstChar(c.description)}</Avatar>\r\n                                    <div className={\"ml-2\"}>{c.description}</div>\r\n                                </Col>\r\n                                <Col>\r\n\r\n                                </Col>\r\n                                <Col>\r\n                                    <div className={\"float-right mt-2\"} onClick={() => this.openDialog(c.id)}>\r\n                                        <EditIcon/>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n\r\n\r\n                        </Card.Header>\r\n                    </Card>)\r\n            });\r\n            return spec;\r\n        }\r\n    };\r\n}\r\n\r\nexport default AllSpecializations;","import React, {Component} from 'react';\r\nimport Login from \"./Components/Login/Login\";\r\nimport {BrowserRouter, Redirect, Route, Switch} from \"react-router-dom\";\r\n\r\nimport Register from \"./Components/Login/Register\";\r\nimport InternshipSteps from \"./Components/InternshipSteps/InternshipSteps\";\r\nimport Administration from \"./Components/Administration/Administration\";\r\nimport InsertNewClassAdministration from \"./Components/Administration/InsertNewClass\";\r\nimport ClassInformation from \"./Components/Administration/ClassInformation\";\r\nimport Footer from \"./Components/Footer\";\r\nimport NewCompany from \"./Components/Administration/NewCompany\"\r\nimport CompanyInformation from \"./Components/Administration/CompanyInformation\";\r\nimport ClassOverview from \"./Components/ClassOverview/ClassOverview\";\r\nimport StudentInformation from \"./Components/Administration/StudentInformation\";\r\nimport NewSchoolperson from \"./Components/Administration/NewSchoolperson\";\r\nimport StudentOverview from \"./Components/Administration/StudentOverview\";\r\nimport CompanyProfile from \"./Components/Company/CompanyProfile\";\r\nimport InternshipRating from \"./Components/Company/InternshipRating\";\r\nimport InternshipInformation from \"./Components/Company/InternshipInformation\";\r\nimport Company from \"./Components/Company/Company\";\r\nimport AllCompanies from \"./Components/Administration/AllCompanies\";\r\nimport AllSchoolpersons from \"./Components/Administration/AllSchoolpersons\";\r\n\r\n\r\nimport {Alert, AlertTitle} from '@material-ui/lab';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport {Nav, Navbar} from \"react-bootstrap\";\r\nimport Imprint from \"./Components/Imprint\";\r\nimport {Offline} from \"react-detect-offline\";\r\nimport logo from './img/logos/13.01_finalLogo/final.png';\r\n\r\n\r\nimport './index.css'\r\nimport Sidebar from \"./Components/Administration/Sidebar\";\r\nimport ContractsView from \"./Components/Administration/ContractsView\";\r\n\r\nimport './custumBootstrap.scss';\r\n\r\nimport Search from \"./Components/Administration/Search\";\r\nimport InternshipTimeWorkDay from \"./Components/Company/InternshipTimeWorkDay\";\r\nimport RatingMail from \"./Components/Administration/RatingMail\";\r\nimport EmailCopmoser from \"./Components/EmailComposer/EmailCopmoser\";\r\nimport AllRoles from \"./Components/Administration/AllRoles\";\r\nimport AllSpecializations from \"./Components/Administration/AllSpecializations\";\r\n\r\n\r\nif (localStorage.token) {\r\n    loadApiKeyIntoHeaders();\r\n}\r\n\r\nfunction loadApiKeyIntoHeaders(token) {\r\n    let localToken;\r\n    if (token) {\r\n        localToken = token;\r\n    } else if (localStorage.token) {\r\n        localToken = localStorage.token;\r\n    }\r\n\r\n\r\n    if (localToken) {\r\n        const axios = require('axios');\r\n        // Add a request interceptor\r\n        axios.interceptors.request.use(function (config) {\r\n            const token = localToken;\r\n            config.headers[\"Auth-Token\"] = token;\r\n\r\n            return config;\r\n        });\r\n    }\r\n\r\n}\r\n\r\n//      HOW THIS WORKS: everyone changes the .env.development to its backend url and ADDS it to the .git-ignore file\r\nconst url = process.env.REACT_APP_API_URL;\r\n//console.log(process.env);\r\n\r\nconst polling = {\r\n    enabled: true,\r\n    interval: 5000,\r\n    url: url + 'index.php?action=login'\r\n};\r\n\r\ncheckToken();\r\n\r\nfunction checkToken() {\r\n    let url = localStorage.getItem('url');\r\n    url += \"?action=checkToken\";\r\n    const axios = require('axios');\r\n    axios({\r\n        method: 'post',\r\n        url: url\r\n    }).then((res) => {\r\n        if (res.data.error == \"#708\") {\r\n            localStorage.setItem(\"token\", null);\r\n        }\r\n    })\r\n}\r\n\r\nclass App extends Component {\r\n    state = {\r\n        currentUser: JSON.parse(localStorage.getItem('user')),\r\n        token: localStorage.getItem('token'),\r\n        navOpen: true,\r\n        logout: false\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        localStorage.setItem('url', url);\r\n\r\n\r\n        if (localStorage.token && localStorage.token != \"null\") {\r\n            let jwtDecode = require('jwt-decode');\r\n\r\n            let expDate = jwtDecode(localStorage.token).exp;\r\n\r\n            //Token check\r\n            if (expDate < Date.now() / 1000) {\r\n                //Token expired\r\n                this.logout();\r\n            } else {\r\n                // Token Valid\r\n                this.setState({token: localStorage.getItem('token')});\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    isCapable(role) {\r\n        return role === this.state.currentUser.role;\r\n    }\r\n\r\n    closeNav = (open) => {\r\n        if (open)\r\n            this.setState({navOpen: true});\r\n        else\r\n            this.setState({navOpen: false});\r\n    };\r\n\r\n    setUser = (us, token) => {\r\n        localStorage.setItem('user', JSON.stringify(us));\r\n        this.setState({currentUser: us});\r\n\r\n        localStorage.setItem('token', token);\r\n        this.setState({token: token});\r\n\r\n        loadApiKeyIntoHeaders(token);\r\n\r\n        window.location.reload(false);\r\n    };\r\n\r\n    logout = () => {\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('token');\r\n        this.setState({currentUser: null, token: null, logout: true});\r\n    };\r\n\r\n    addSlashIfNotExisting = () => {\r\n        if (window.location.pathname.charAt(window.location.pathname.length - 1) !== '/') {\r\n            console.log(window.location.pathname.charAt(window.location.pathname.length - 1));\r\n\r\n            return <Redirect to={window.location.pathname + \"/\"}/>\r\n        }\r\n        return <div/>\r\n    };\r\n\r\n    render() {\r\n\r\n        if (this.state.logout) {\r\n            this.setState({logout: false})\r\n            return (<BrowserRouter><Redirect to={\"/\"}/></BrowserRouter>)\r\n        }\r\n\r\n        let currentAction;\r\n\r\n        let forceLogin = \"\";\r\n\r\n        if (this.state.currentUser == null) {\r\n            currentAction = <Redirect to='/login/'/>\r\n        } else if (this.state.currentUser.role === 'Student') {\r\n            currentAction = <Redirect to='/loggedin/Student/ClassOverview/'/>\r\n        } else if (this.state.currentUser.role === 'Administration') {\r\n            currentAction = <Redirect to='/loggedin/Administration/'/>\r\n        } else if (this.state.currentUser.role === 'Teacher') {\r\n            currentAction = <Redirect to='/loggedin/Administration/'/>\r\n        } else if (this.state.currentUser.role === 'Company') {\r\n            currentAction = <Redirect to='/loggedin/Company/'/>\r\n        } else {\r\n            currentAction = <Redirect to='/loggedin/'/>\r\n        }\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <BrowserRouter>\r\n                        <div>\r\n                            {forceLogin}\r\n                            <Route path={'/loggedin/'} component={() =>\r\n                                <Navbar bg={'transparent'}>\r\n                                    <Navbar.Brand><a href={\"/loggedin/\"}><img height={70} src={logo}\r\n                                                                              alt={'Logo'}/></a></Navbar.Brand>\r\n                                    <Nav className=\"justify-content-end\" style={{width: \"100%\"}}>\r\n\r\n                                        <div className={'btn btn-primary'} onClick={this.logout}>\r\n                                            Logout\r\n                                        </div>\r\n                                    </Nav>\r\n                                </Navbar>\r\n                            }/>\r\n\r\n                        </div>\r\n\r\n                        <Offline polling={polling}>\r\n                            <Snackbar open={true}>\r\n                                <Alert variant={\"filled\"} severity=\"error\">\r\n                                    <AlertTitle>Error</AlertTitle>\r\n                                    Verbindung zum Server fehlgeschlagen!\r\n                                </Alert>\r\n                            </Snackbar>\r\n                        </Offline>\r\n                        <Route exact path='/' component={() =>\r\n                            currentAction\r\n                        }/>\r\n                        <Route exact path='/loggedin/' component={() =>\r\n                            currentAction\r\n                        }/>\r\n\r\n\r\n                        <Route exact path='/login/jwt/:token'\r\n                               render={(props) => (\r\n                                   <Login currentUser={this.state.currentUser} {...props} setUser={this.setUser}/>\r\n                               )\r\n                               }/>\r\n\r\n                        <Route path='/register' component={() =>\r\n                            <Register setUser={this.setUser}/>\r\n                        }/>\r\n\r\n\r\n                        <Route exact\r\n                               path='/Administration/:id'\r\n                               render={(props) =>\r\n                                   <Redirect to={\"/loggedin/Administration/\" + props[\"id\"]}/>\r\n                               }/>\r\n\r\n                        <div className={'asideDesktopTopMobile'}>\r\n                            <Route path='/loggedin/Administration/' component={() =>\r\n                                <div className={\"sideNav\"}>{\r\n                                    <Sidebar/>\r\n                                }\r\n                                </div>\r\n                            }/>\r\n\r\n                            <div className={\"w-100 mr-2\"}>\r\n                                <Route path={'/loggedin/Student/ClassOverview/internshipSteps/:id'} render={(props) =>\r\n                                    <InternshipSteps {...props} currentUser={this.state.currentUser}/>\r\n                                }/>\r\n                                <Route exact path={'/loggedin/Student/ClassOverview'} component={() =>\r\n                                    <ClassOverview currentUser={this.state.currentUser}/>\r\n                                }/>\r\n\r\n                                {/*<Route exact path='/loggedin/internship/' render={(props) =>*/}\r\n                                {/*    <InternshipInformation {...props}/>*/}\r\n                                {/*}/>*/}\r\n\r\n                                <Route exact path='/loggedin/Administration' component={() =>\r\n                                    <Administration/>\r\n                                }/>\r\n\r\n                                <Route exact path='/loggedin/Administration/ContractsView' component={() =>\r\n                                    <ContractsView/>\r\n                                }/>\r\n\r\n                                <Route exact path='/loggedin/Administration/notCheckedContracts' component={() =>\r\n                                    <ContractsView viewJustNotCheckedContracts=\"no\"/>\r\n                                }/>\r\n\r\n\r\n                                <Route path='/Administration/' component={() =>\r\n                                    <Administration/>\r\n                                }/>\r\n                                <Route path='/loggedin/Administration/NewClass' component={() =>\r\n                                    <InsertNewClassAdministration/>\r\n                                }/>\r\n                                <Route exact path='/loggedin/Administration/CompanyInformation/:id' render={(props) =>\r\n                                    <CompanyInformation {...props} />\r\n                                }/>\r\n                                <Route exact path='/loggedin/Administration/Search/CompanyInformation/:id'\r\n                                       render={(props) =>\r\n                                           <CompanyInformation {...props}/>\r\n                                       }/>\r\n                                <Route exact path='/loggedin/Administration/AllCompanies/CompanyInformation/:id'\r\n                                       render={(props) =>\r\n                                           <CompanyInformation {...props}/>\r\n                                       }/>\r\n                                <Route exact\r\n                                       path='/loggedin/Administration/ClassInformation/:class_id/StudentInformation/:id'\r\n                                       render={(props) =>\r\n                                           < StudentInformation {...props}/>\r\n                                       }/>\r\n                                <Route exact path='/loggedin/Administration/StudentOverview/StudentInformation/:id'\r\n                                       render={(props) =>\r\n                                           <StudentInformation {...props}/>\r\n                                       }/>\r\n                                <Route exact path='/loggedin/Administration/StudentInformation/:id' render={(props) =>\r\n                                    <StudentInformation {...props}/>\r\n                                }/>\r\n                                <Route exact path='/loggedin/Administration/Search/StudentInformation/:id'\r\n                                       render={(props) =>\r\n                                           <StudentInformation {...props}/>\r\n                                       }/>\r\n                                <Route exact path='/loggedin/Administration/ClassInformation/:id' render={(props) =>\r\n                                    <ClassInformation {...props} />\r\n                                }/>\r\n\r\n\r\n                                <Route exact path={'/login'} component={() =>\r\n                                    <Login currentUser={this.state.currentUser} setUser={this.setUser}/>\r\n                                }/>\r\n\r\n                                <Route exact path={'/loggedin/Administration/AllRoles'} component={() =>\r\n                                    <AllRoles/>\r\n                                }/>\r\n                                <Route exact path={'/loggedin/Administration/AllSpecializations'} component={() =>\r\n                                    <AllSpecializations/>\r\n                                }/>\r\n\r\n                                <Route exact path={'/loggedin/Administration/NewSchoolperson'} component={() =>\r\n                                    <NewSchoolperson/>\r\n                                }/>\r\n\r\n                                <Route exact path={'/loggedin/Administration/StudentOverview'} component={() =>\r\n                                    <StudentOverview/>\r\n                                }/>\r\n\r\n                                <Route exact path={'/loggedin/Administration/NewCompany'} component={() =>\r\n                                    <NewCompany/>\r\n                                }/>\r\n                                <Route exact path={'/loggedin/Administration/AllCompanies'} component={() =>\r\n                                    <AllCompanies/>\r\n                                }/>\r\n                                <Route exact path={'/loggedin/Administration/AllSchoolpersons'} component={() =>\r\n                                    <AllSchoolpersons/>\r\n                                }/>\r\n                                <Route exact path={'/loggedin/Administration/Search'} component={() =>\r\n                                    <Search/>\r\n                                }/>\r\n                                <Route exact path={'/loggedin/Administration/RatingMail'} component={() =>\r\n                                    <RatingMail/>\r\n                                }/>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <Route exact path={'/composeMail/'} component={() =>\r\n                            <EmailCopmoser currentUser={this.state.currentUser}/>\r\n                        }/>\r\n                        <Route exact path={'/loggedin/Company/'} component={() =>\r\n                            <Company/>\r\n                        }/>\r\n                        <Route exact path={'/loggedin/Company/CompanyProfile'} component={() =>\r\n                            <CompanyProfile/>\r\n                        }/>\r\n                        <Route exact path={'/loggedin/Company/InternshipRating'} component={() =>\r\n                            <InternshipRating/>\r\n                        }/>\r\n                        <Route exact path={'/loggedin/Company/InternshipTimeWorkDay'} component={() =>\r\n                            <InternshipTimeWorkDay/>\r\n                        }/>\r\n                        <Route exact path={'/loggedin/Company/InternshipInformation/:id'} render={(props) =>\r\n                            <InternshipInformation  {...props}/>\r\n                        }/>\r\n                        <Route exact path={'/loggedin/Company/InternshipInformation/InternshipRating/:id'}\r\n                               render={(props) =>\r\n                                   <InternshipRating {...props}/>\r\n                               }/>\r\n                        <Route exact path={'/loggedin/Company/InternshipInformation/InternshipWorkDays/:id'}\r\n                               render={(props) =>\r\n                                   <InternshipTimeWorkDay {...props}/>\r\n                               }/>\r\n                        <Route exact={true} path={'/impressum'} component={() =>\r\n                            <Imprint/>\r\n                        }/>\r\n\r\n                        <Footer/>\r\n                        {this.addSlashIfNotExisting()}\r\n                        <Switch>\r\n                            {currentAction}\r\n                        </Switch>\r\n                    </BrowserRouter>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default App;\r\n","import 'react-app-polyfill/ie9';\r\nimport './ColorScheme.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'antd/dist/antd.css';\r\nimport 'react-app-polyfill/ie11';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}